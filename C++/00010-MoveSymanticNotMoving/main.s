	.text
	.def	@feat.00;
	.scl	3;
	.type	0;
	.endef
	.globl	@feat.00
.set @feat.00, 0
	.file	"main.cpp"
	.def	main;
	.scl	2;
	.type	32;
	.endef
	.globl	main                            # -- Begin function main
	.p2align	4, 0x90
main:                                   # @main
.Lfunc_begin0:
.seh_proc main
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movb	$0, -8(%rbp)
	leaq	"??_C@_0BD@IGIIOBPB@?6?$DN?$DN?$DN?5First?5run?5?$DN?$DN?$DN?$AA@"(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	$18, -32(%rbp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	leaq	-40(%rbp), %r8
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	movq	$0, -40(%rbp)
	leaq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)
.Ltmp0:
	leaq	-40(%rbp), %rcx
	callq	"?produce@Producer@@QEAAXXZ"
.Ltmp1:
# %bb.1:
	leaq	"??_C@_0BE@NINFMGHJ@?6?$DN?$DN?$DN?5Second?5run?5?$DN?$DN?$DN?$AA@"(%rip), %rax
	movq	%rax, -56(%rbp)
	movq	$19, -48(%rbp)
.Ltmp2:
	movl	$1, %ecx
	callq	__acrt_iob_func
.Ltmp3:
# %bb.2:
.Ltmp4:
	leaq	-56(%rbp), %r8
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
.Ltmp5:
# %bb.3:
	movb	$1, -8(%rbp)
.Ltmp6:
	leaq	-40(%rbp), %rcx
	callq	"?produce@Producer@@QEAAXXZ"
.Ltmp7:
# %bb.4:
	movq	-40(%rbp), %rsi
	testq	%rsi, %rsi
	je	.LBB0_6
# %bb.5:
	movq	%rsi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB0_6:
	xorl	%eax, %eax
	addq	$104, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	($cppxdata$main)@IMGREL
	.text
	.seh_endproc
	.def	"?dtor$7@?0?main@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$7@?0?main@4HA":
.seh_proc "?dtor$7@?0?main@4HA"
.LBB0_7:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	96(%rdx), %rbp
	.seh_endprologue
	leaq	-40(%rbp), %rcx
	callq	"??1Producer@@QEAA@XZ"
	nop
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end0:
	.seh_handlerdata
	.text
	.seh_endproc
	.section	.xdata,"dr"
	.p2align	2, 0x0
$cppxdata$main:
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	($stateUnwindMap$main)@IMGREL   # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	($ip2state$main)@IMGREL         # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
$stateUnwindMap$main:
	.long	-1                              # ToState
	.long	"?dtor$7@?0?main@4HA"@IMGREL    # Action
$ip2state$main:
	.long	.Lfunc_begin0@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp0@IMGREL+1                 # IP
	.long	0                               # ToState
	.long	.Ltmp7@IMGREL+1                 # IP
	.long	-1                              # ToState
	.text
                                        # -- End function
	.def	"?produce@Producer@@QEAAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?produce@Producer@@QEAAXXZ"
	.globl	"?produce@Producer@@QEAAXXZ"    # -- Begin function ?produce@Producer@@QEAAXXZ
	.p2align	4, 0x90
"?produce@Producer@@QEAAXXZ":           # @"?produce@Producer@@QEAAXXZ"
.seh_proc "?produce@Producer@@QEAAXXZ"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	.seh_endprologue
	movq	%rcx, %rsi
	leaq	"??_C@_0CC@PCOEPBEH@?$FLPRODUCER?$FN?5producing?5some?5data?4?4@"(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	$33, 40(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	leaq	32(%rsp), %r8
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	leaq	"??_C@_0O@KLMCIIGF@Hello?0?5World?$CB?$AA@"(%rip), %rdx
	leaq	32(%rsp), %rcx
	callq	"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	movq	32(%rsp), %rax
	movq	$0, 32(%rsp)
	movq	(%rsi), %rdi
	movq	%rax, (%rsi)
	testq	%rdi, %rdi
	je	.LBB1_3
# %bb.1:
	movq	%rdi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rdi, %rcx
	callq	"??3@YAXPEAX@Z"
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB1_3
# %bb.2:
	movq	%rdi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rdi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB1_3:
	leaq	"??_C@_0BP@OMLGDNEJ@?$FLPRODUCER?$FN?5lending?5the?5data?4?4?4?$AA@"(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	$30, 40(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	leaq	32(%rsp), %rdi
	movb	$1, %cl
	movq	%rax, %rdx
	movq	%rdi, %r8
	callq	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	movq	(%rsi), %r14
	movq	8(%rsi), %rbx
	movq	16(%r14), %r15
	cmpq	$16, 24(%r14)
	jb	.LBB1_5
# %bb.4:
	movq	(%r14), %r14
.LBB1_5:
	leaq	"??_C@_0CE@BFMPBMDH@?$FLBORROWER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"(%rip), %rax
	movq	%rax, 56(%rsp)
	movq	$35, 64(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	movq	%r14, 40(%rsp)
	movq	%r15, 48(%rsp)
	movabsq	$-4611686018427387904, %rcx     # imm = 0xC000000000000000
	movq	%rcx, 32(%rsp)
	movq	$1, 72(%rsp)
	movq	%rdi, 80(%rsp)
	leaq	56(%rsp), %r8
	leaq	72(%rsp), %rdi
	movb	$1, %cl
	movq	%rax, %rdx
	movq	%rdi, %r9
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	cmpb	$0, (%rbx)
	je	.LBB1_8
# %bb.6:
	movq	(%rsi), %rbx
	movq	$0, (%rsi)
	testq	%rbx, %rbx
	je	.LBB1_8
# %bb.7:
	movq	%rbx, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rbx, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB1_8:
	movq	(%rsi), %rbx
	leaq	"??_C@_0DF@IJBPFIBC@?$FLPRODUCER?$FN?5data?5should?5be?5mine?5a@"(%rip), %rax
	movq	%rax, 56(%rsp)
	movq	$52, 64(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	testq	%rbx, %rbx
	setne	80(%rsp)
	movabsq	$5764607523034234880, %rbx      # imm = 0x5000000000000000
	movq	%rbx, 72(%rsp)
	movq	$1, 32(%rsp)
	movq	%rdi, 40(%rsp)
	leaq	56(%rsp), %r8
	leaq	32(%rsp), %r9
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	movq	(%rsi), %rax
	testq	%rax, %rax
	je	.LBB1_9
# %bb.10:
	movq	16(%rsi), %rcx
	movq	$0, (%rsi)
	movq	%rax, 88(%rsp)
	leaq	88(%rsp), %rdx
	callq	"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	jmp	.LBB1_11
.LBB1_9:
	leaq	"??_C@_0FM@MGOMPOIP@?$FLPRODUCER?$FN?5what?5a?5dishonest?5borr@"(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	$91, 40(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	leaq	32(%rsp), %r8
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
.LBB1_11:
	movq	(%rsi), %rsi
	leaq	"??_C@_0DI@IDNLCFLH@?$FLPRODUCER?$FN?5m_data?5should?5be?5null@"(%rip), %rax
	movq	%rax, 56(%rsp)
	movq	$55, 64(%rsp)
	movl	$1, %ecx
	callq	__acrt_iob_func
	testq	%rsi, %rsi
	sete	80(%rsp)
	movq	%rbx, 72(%rsp)
	movq	$1, 32(%rsp)
	movq	%rdi, 40(%rsp)
	leaq	56(%rsp), %r8
	leaq	32(%rsp), %r9
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	nop
	addq	$96, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??1Producer@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1Producer@@QEAA@XZ"
	.globl	"??1Producer@@QEAA@XZ"          # -- Begin function ??1Producer@@QEAA@XZ
	.p2align	4, 0x90
"??1Producer@@QEAA@XZ":                 # @"??1Producer@@QEAA@XZ"
.seh_proc "??1Producer@@QEAA@XZ"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	(%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB2_1
# %bb.2:
	movq	%rsi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rsi, %rcx
	addq	$32, %rsp
	popq	%rsi
	jmp	"??3@YAXPEAX@Z"                 # TAILCALL
.LBB2_1:
	nop
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ"
	.globl	"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ" # -- Begin function ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
	.p2align	4, 0x90
"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ": # @"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ"
# %bb.0:
	movq	$0, "?id@?$numpunct@D@std@@2V0locale@2@A"(%rip)
	retq
                                        # -- End function
	.def	"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.globl	"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z" # -- Begin function ??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z
	.p2align	4, 0x90
"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z": # @"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
.Lfunc_begin1:
.seh_proc "??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$88, %rsp
	.seh_stackalloc 88
	leaq	80(%rsp), %rbp
	.seh_setframe %rbp, 80
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	$32, %ecx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -32(%rbp)
	movaps	%xmm0, -48(%rbp)
	movq	%rdi, %rcx
	callq	strlen
	testq	%rax, %rax
	movq	%r14, -8(%rbp)                  # 8-byte Spill
	js	.LBB4_1
# %bb.3:
	movq	%rax, %rbx
	cmpq	$15, %rax
	ja	.LBB4_5
# %bb.4:
	movq	%rbx, -32(%rbp)
	movq	$15, -24(%rbp)
	leaq	-48(%rbp), %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	callq	memcpy
	addq	%rbp, %rbx
	addq	$-48, %rbx
	jmp	.LBB4_11
.LBB4_5:
	movq	%rbx, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB4_8
# %bb.6:
	leaq	40(%r15), %rcx
.Ltmp10:
	callq	"??2@YAPEAX_K@Z"
.Ltmp11:
# %bb.7:
	movq	%rax, %r14
	addq	$39, %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB4_10
.LBB4_8:
	leaq	1(%r15), %rcx
.Ltmp8:
	callq	"??2@YAPEAX_K@Z"
.Ltmp9:
# %bb.9:
	movq	%rax, %r14
.LBB4_10:
	movq	%r14, -48(%rbp)
	movq	%rbx, -32(%rbp)
	movq	%r15, -24(%rbp)
	movq	%r14, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	callq	memcpy
	addq	%r14, %rbx
	movq	-8(%rbp), %r14                  # 8-byte Reload
.LBB4_11:
	movb	$0, (%rbx)
.Ltmp12:
	leaq	-48(%rbp), %rdx
	movq	%r14, %rcx
	callq	"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
.Ltmp13:
# %bb.12:
	movq	-8(%rbp), %rax                  # 8-byte Reload
	movq	%rax, (%rsi)
	movq	-24(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB4_20
# %bb.13:
	movq	-48(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB4_19
# %bb.14:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB4_15
# %bb.18:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB4_19:
	callq	"??3@YAXPEAX_K@Z"
.LBB4_20:
	movq	%rsi, %rax
	addq	$88, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB4_1:
.Ltmp16:
	callq	"?_Xlen_string@std@@YAXXZ"
.Ltmp17:
# %bb.2:
.LBB4_15:
.Ltmp14:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp15:
# %bb.16:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z")@IMGREL
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.seh_endproc
	.def	"?dtor$17@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$17@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA":
.seh_proc "?dtor$17@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"
.LBB4_17:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.seh_endproc
	.def	"?dtor$21@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$21@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA":
.seh_proc "?dtor$21@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"
.LBB4_21:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	leaq	-48(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.seh_endproc
	.def	"?dtor$22@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA":
.seh_proc "?dtor$22@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"
.LBB4_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx                  # 8-byte Reload
	callq	"??3@YAXPEAX@Z"
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end1:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
	.p2align	2, 0x0
"$cppxdata$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z":
	.long	429065506                       # MagicNumber
	.long	3                               # MaxState
	.long	("$stateUnwindMap$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	7                               # IPMapEntries
	.long	("$ip2state$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z")@IMGREL # IPToStateXData
	.long	80                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z":
	.long	-1                              # ToState
	.long	"?dtor$17@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$22@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"@IMGREL # Action
	.long	1                               # ToState
	.long	"?dtor$21@?0???$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z@4HA"@IMGREL # Action
"$ip2state$??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z":
	.long	.Lfunc_begin1@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp10@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp9@IMGREL+1                 # IP
	.long	-1                              # ToState
	.long	.Ltmp12@IMGREL+1                # IP
	.long	2                               # ToState
	.long	.Ltmp16@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp14@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp15@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$make_unique@UData@@AEAY0O@$$CBD$0A@@std@@YA?AV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@0@AEAY0O@$$CBD@Z"
                                        # -- End function
	.def	"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ"
	.globl	"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ" # -- Begin function ??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ
	.p2align	4, 0x90
"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ": # @"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ"
.seh_proc "??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	(%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB5_1
# %bb.2:
	movq	%rsi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rsi, %rcx
	addq	$32, %rsp
	popq	%rsi
	jmp	"??3@YAXPEAX@Z"                 # TAILCALL
.LBB5_1:
	nop
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	.globl	"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z" # -- Begin function ?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z
	.p2align	4, 0x90
"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z": # @"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
.Lfunc_begin2:
.seh_proc "?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$112, %rsp
	.seh_stackalloc 112
	leaq	112(%rsp), %rbp
	.seh_setframe %rbp, 112
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, -16(%rbp)                 # 8-byte Spill
	movq	(%rdx), %rsi
	movq	24(%rsi), %r14
	movq	(%rsi), %rbx
	movq	16(%rsi), %rdi
	leaq	"??_C@_0CE@PBLKDBNL@?$FLCONSUMER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	$35, -24(%rbp)
.Ltmp18:
	movl	$1, %ecx
	callq	__acrt_iob_func
.Ltmp19:
# %bb.1:
	cmpq	$16, %r14
	cmovaeq	%rbx, %rsi
	movq	%rsi, -64(%rbp)
	movq	%rdi, -56(%rbp)
	movabsq	$-4611686018427387904, %rcx     # imm = 0xC000000000000000
	movq	%rcx, -72(%rbp)
	movq	$1, -48(%rbp)
	leaq	-72(%rbp), %rcx
	movq	%rcx, -40(%rbp)
.Ltmp20:
	leaq	-32(%rbp), %r8
	leaq	-48(%rbp), %r9
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Ltmp21:
# %bb.2:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rsi
	testq	%rsi, %rsi
	je	.LBB6_4
# %bb.3:
	movq	%rsi, %rcx
	callq	"??1Data@@QEAA@XZ"
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB6_4:
	nop
	addq	$112, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z")@IMGREL
	.section	.text,"xr",discard,"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	.seh_endproc
	.def	"?dtor$5@?0??consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$5@?0??consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z@4HA":
.seh_proc "?dtor$5@?0??consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z@4HA"
.LBB6_5:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	112(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rcx                 # 8-byte Reload
	callq	"??1?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end2:
	.seh_handlerdata
	.section	.text,"xr",discard,"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
	.p2align	2, 0x0
"$cppxdata$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z")@IMGREL # IPToStateXData
	.long	104                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z":
	.long	-1                              # ToState
	.long	"?dtor$5@?0??consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z@4HA"@IMGREL # Action
"$ip2state$?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z":
	.long	.Lfunc_begin2@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp18@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp21@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?consume@Consumer@@QEAAXV?$unique_ptr@UData@@U?$default_delete@UData@@@std@@@std@@@Z"
                                        # -- End function
	.def	"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
	.globl	"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z" # -- Begin function ??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	.p2align	4, 0x90
"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z": # @"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
.Lfunc_begin3:
.seh_proc "??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rsi
	movq	%rcx, %r14
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rcx)
	movups	%xmm0, (%rcx)
	movq	16(%rdx), %rdi
	cmpq	$16, 24(%rdx)
	jb	.LBB7_2
# %bb.1:
	movq	(%rsi), %rsi
.LBB7_2:
	testq	%rdi, %rdi
	js	.LBB7_13
# %bb.3:
	cmpq	$15, %rdi
	ja	.LBB7_5
# %bb.4:
	movq	%rdi, 16(%r14)
	movq	$15, 24(%r14)
	movups	(%rsi), %xmm0
	movq	%r14, %r15
	movups	%xmm0, (%r14)
	jmp	.LBB7_9
.LBB7_5:
	movq	$15, 24(%r14)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %ebx
	cmovaeq	%rax, %rbx
	cmpq	$4095, %rbx                     # imm = 0xFFF
	jb	.LBB7_7
# %bb.6:
	leaq	40(%rbx), %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %rcx
	andq	$-32, %rcx
	movq	%rax, -8(%rcx)
	jmp	.LBB7_8
.LBB7_7:
	leaq	1(%rbx), %rcx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %rcx
.LBB7_8:
	movq	%rcx, (%r14)
	movq	%rdi, 16(%r14)
	movq	%r14, %r15
	movq	%rbx, 24(%r14)
	incq	%rdi
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	memcpy
.LBB7_9:
	movq	%r15, -8(%rbp)                  # 8-byte Spill
	leaq	"??_C@_0BC@NGMPOJLI@?$FL?$HL?$HN?$FN?5Data?3?3Data?$CI?$CJ?$AA@"(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	$17, -16(%rbp)
.Ltmp22:
	movl	$1, %ecx
	callq	__acrt_iob_func
.Ltmp23:
# %bb.10:
	movq	-8(%rbp), %rcx                  # 8-byte Reload
	movq	%rcx, -32(%rbp)
	movabsq	$-6917529027641081856, %rcx     # imm = 0xA000000000000000
	movq	%rcx, -40(%rbp)
	movq	$1, -56(%rbp)
	leaq	-40(%rbp), %rcx
	movq	%rcx, -48(%rbp)
.Ltmp24:
	leaq	-24(%rbp), %r8
	leaq	-56(%rbp), %r9
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Ltmp25:
# %bb.11:
	movq	-8(%rbp), %rax                  # 8-byte Reload
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB7_13:
	callq	"?_Xlen_string@std@@YAXXZ"
	int3
	.seh_handlerdata
	.long	("$cppxdata$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")@IMGREL
	.section	.text,"xr",discard,"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
	.seh_endproc
	.def	"?dtor$12@?0???0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$12@?0???0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA":
.seh_proc "?dtor$12@?0???0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA"
.LBB7_12:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx                  # 8-byte Reload
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end3:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
	.p2align	2, 0x0
"$cppxdata$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z":
	.long	-1                              # ToState
	.long	"?dtor$12@?0???0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA"@IMGREL # Action
"$ip2state$??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z":
	.long	.Lfunc_begin3@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp22@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp25@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0Data@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"
                                        # -- End function
	.def	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	.globl	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ" # -- Begin function ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	.p2align	4, 0x90
"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ": # @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
.Lfunc_begin4:
.seh_proc "??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	movq	24(%rcx), %rax
	cmpq	$16, %rax
	jb	.LBB8_8
# %bb.1:
	movq	(%rsi), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB8_7
# %bb.2:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB8_3
# %bb.6:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB8_7:
	callq	"??3@YAXPEAX_K@Z"
.LBB8_8:
	movq	$0, 16(%rsi)
	movq	$15, 24(%rsi)
	movb	$0, (%rsi)
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
.LBB8_3:
.Ltmp26:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp27:
# %bb.4:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ")@IMGREL
	.section	.text,"xr",discard,"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	.seh_endproc
	.def	"?dtor$5@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$5@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA":
.seh_proc "?dtor$5@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA"
.LBB8_5:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end4:
	.seh_handlerdata
	.section	.text,"xr",discard,"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	.seh_endproc
	.section	.xdata,"dr",associative,"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	.p2align	2, 0x0
"$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ":
	.long	-1                              # ToState
	.long	"?dtor$5@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA"@IMGREL # Action
"$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ":
	.long	.Lfunc_begin4@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp26@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp27@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
                                        # -- End function
	.def	"?_Xlen_string@std@@YAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Xlen_string@std@@YAXXZ"
	.globl	"?_Xlen_string@std@@YAXXZ"      # -- Begin function ?_Xlen_string@std@@YAXXZ
	.p2align	4, 0x90
"?_Xlen_string@std@@YAXXZ":             # @"?_Xlen_string@std@@YAXXZ"
.seh_proc "?_Xlen_string@std@@YAXXZ"
# %bb.0:
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	leaq	"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@"(%rip), %rcx
	callq	"?_Xlength_error@std@@YAXPEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"?_Throw_bad_array_new_length@std@@YAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Throw_bad_array_new_length@std@@YAXXZ"
	.globl	"?_Throw_bad_array_new_length@std@@YAXXZ" # -- Begin function ?_Throw_bad_array_new_length@std@@YAXXZ
	.p2align	4, 0x90
"?_Throw_bad_array_new_length@std@@YAXXZ": # @"?_Throw_bad_array_new_length@std@@YAXXZ"
.seh_proc "?_Throw_bad_array_new_length@std@@YAXXZ"
# %bb.0:
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	$0, 48(%rsp)
	leaq	"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@"(%rip), %rax
	movq	%rax, 40(%rsp)
	leaq	"??_7bad_array_new_length@std@@6B@"(%rip), %rax
	movq	%rax, 32(%rsp)
	leaq	"_TI3?AVbad_array_new_length@std@@"(%rip), %rdx
	leaq	32(%rsp), %rcx
	callq	_CxxThrowException
	int3
	.seh_endproc
                                        # -- End function
	.def	"??0bad_array_new_length@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
	.globl	"??0bad_array_new_length@std@@QEAA@AEBV01@@Z" # -- Begin function ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0bad_array_new_length@std@@QEAA@AEBV01@@Z": # @"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
.Lfunc_begin5:
.seh_proc "??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp28:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp29:
# %bb.1:
	leaq	"??_7bad_array_new_length@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA"
.LBB11_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end5:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin5@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp28@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp29@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??0bad_alloc@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0bad_alloc@std@@QEAA@AEBV01@@Z"
	.globl	"??0bad_alloc@std@@QEAA@AEBV01@@Z" # -- Begin function ??0bad_alloc@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0bad_alloc@std@@QEAA@AEBV01@@Z":     # @"??0bad_alloc@std@@QEAA@AEBV01@@Z"
.Lfunc_begin6:
.seh_proc "??0bad_alloc@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp30:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp31:
# %bb.1:
	leaq	"??_7bad_alloc@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0bad_alloc@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA"
.LBB12_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end6:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0bad_alloc@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0bad_alloc@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin6@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp30@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp31@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0bad_alloc@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??0exception@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0exception@std@@QEAA@AEBV01@@Z"
	.globl	"??0exception@std@@QEAA@AEBV01@@Z" # -- Begin function ??0exception@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0exception@std@@QEAA@AEBV01@@Z":     # @"??0exception@std@@QEAA@AEBV01@@Z"
.Lfunc_begin7:
.seh_proc "??0exception@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp32:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp33:
# %bb.1:
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0exception@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0exception@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0exception@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0exception@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0exception@std@@QEAA@AEBV01@@Z@4HA"
.LBB13_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end7:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0exception@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0exception@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0exception@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0exception@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0exception@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0exception@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0exception@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0exception@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin7@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp32@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp33@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0exception@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??_Gbad_array_new_length@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.globl	"??_Gbad_array_new_length@std@@UEAAPEAXI@Z" # -- Begin function ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gbad_array_new_length@std@@UEAAPEAXI@Z": # @"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
.Lfunc_begin8:
.seh_proc "??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp34:
	callq	__std_exception_destroy
.Ltmp35:
# %bb.1:
	testl	%edi, %edi
	je	.LBB14_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB14_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA"
.LBB14_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end8:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gbad_array_new_length@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gbad_array_new_length@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gbad_array_new_length@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gbad_array_new_length@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gbad_array_new_length@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin8@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp34@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp35@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"?what@exception@std@@UEBAPEBDXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?what@exception@std@@UEBAPEBDXZ"
	.globl	"?what@exception@std@@UEBAPEBDXZ" # -- Begin function ?what@exception@std@@UEBAPEBDXZ
	.p2align	4, 0x90
"?what@exception@std@@UEBAPEBDXZ":      # @"?what@exception@std@@UEBAPEBDXZ"
# %bb.0:
	movq	8(%rcx), %rcx
	testq	%rcx, %rcx
	leaq	"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@"(%rip), %rax
	cmovneq	%rcx, %rax
	retq
                                        # -- End function
	.def	"??_Gbad_alloc@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.globl	"??_Gbad_alloc@std@@UEAAPEAXI@Z" # -- Begin function ??_Gbad_alloc@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gbad_alloc@std@@UEAAPEAXI@Z":       # @"??_Gbad_alloc@std@@UEAAPEAXI@Z"
.Lfunc_begin9:
.seh_proc "??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp36:
	callq	__std_exception_destroy
.Ltmp37:
# %bb.1:
	testl	%edi, %edi
	je	.LBB16_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB16_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gbad_alloc@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA"
.LBB16_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end9:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gbad_alloc@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gbad_alloc@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gbad_alloc@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gbad_alloc@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gbad_alloc@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gbad_alloc@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin9@IMGREL            # IP
	.long	-1                              # ToState
	.long	.Ltmp36@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp37@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gbad_alloc@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"??_Gexception@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gexception@std@@UEAAPEAXI@Z"
	.globl	"??_Gexception@std@@UEAAPEAXI@Z" # -- Begin function ??_Gexception@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gexception@std@@UEAAPEAXI@Z":       # @"??_Gexception@std@@UEAAPEAXI@Z"
.Lfunc_begin10:
.seh_proc "??_Gexception@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp38:
	callq	__std_exception_destroy
.Ltmp39:
# %bb.1:
	testl	%edi, %edi
	je	.LBB17_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB17_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gexception@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gexception@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gexception@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gexception@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gexception@std@@UEAAPEAXI@Z@4HA"
.LBB17_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end10:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gexception@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gexception@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gexception@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gexception@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gexception@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gexception@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gexception@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gexception@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin10@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp38@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp39@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gexception@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.globl	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z" # -- Begin function ?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z
	.p2align	4, 0x90
"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z": # @"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Lfunc_begin11:
.seh_proc "?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$136, %rsp
	.seh_stackalloc 136
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rsi
	movl	%ecx, %ebx
	movq	(%r9), %rdi
	movq	8(%r9), %r14
	movq	(%r8), %r15
	movq	8(%r8), %r12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -32(%rbp)
	movq	$0, -16(%rbp)
	movq	$15, -8(%rbp)
	testq	%rdi, %rdi
	je	.LBB18_1
# %bb.2:
	leaq	(%r14,%rdi,8), %rax
	addq	$8, %rax
	cmpq	$1, %rdi
	jne	.LBB18_4
# %bb.3:
	xorl	%ecx, %ecx
	xorl	%edx, %edx
.LBB18_14:
	testb	$1, %dil
	je	.LBB18_20
# %bb.15:
	movq	(%r14,%rcx,8), %rcx
	movq	%rcx, %r9
	shrq	$60, %r9
	cmpb	$11, %r9b
	je	.LBB18_18
# %bb.16:
	movl	$8, %r8d
	cmpl	$12, %r9d
	jne	.LBB18_19
# %bb.17:
	movabsq	$1152921504606846975, %r8       # imm = 0xFFFFFFFFFFFFFFF
	andq	%r8, %rcx
	movq	(%rax,%rcx), %r8
	jmp	.LBB18_19
.LBB18_1:
	xorl	%edx, %edx
.LBB18_20:
	addq	%r12, %rdx
	cmpq	$16, %rdx
	jae	.LBB18_21
	jmp	.LBB18_23
.LBB18_4:
	movq	%rdi, %r8
	andq	$-2, %r8
	xorl	%ecx, %ecx
	movabsq	$1152921504606846975, %r9       # imm = 0xFFFFFFFFFFFFFFF
	xorl	%edx, %edx
	jmp	.LBB18_5
	.p2align	4, 0x90
.LBB18_12:                              #   in Loop: Header=BB18_5 Depth=1
	movl	$32, %r11d
.LBB18_13:                              #   in Loop: Header=BB18_5 Depth=1
	addq	%r11, %rdx
	addq	$2, %rcx
	cmpq	%rcx, %r8
	je	.LBB18_14
.LBB18_5:                               # =>This Inner Loop Header: Depth=1
	movq	(%r14,%rcx,8), %r10
	movq	%r10, %r11
	shrq	$60, %r11
	cmpb	$12, %r11b
	je	.LBB18_8
# %bb.6:                                #   in Loop: Header=BB18_5 Depth=1
	movl	$8, %r10d
	cmpl	$11, %r11d
	jne	.LBB18_9
# %bb.7:                                #   in Loop: Header=BB18_5 Depth=1
	movl	$32, %r10d
	jmp	.LBB18_9
	.p2align	4, 0x90
.LBB18_8:                               #   in Loop: Header=BB18_5 Depth=1
	andq	%r9, %r10
	movq	(%rax,%r10), %r10
.LBB18_9:                               #   in Loop: Header=BB18_5 Depth=1
	addq	%r10, %rdx
	movq	8(%r14,%rcx,8), %r10
	movq	%r10, %r13
	shrq	$60, %r13
	cmpb	$11, %r13b
	je	.LBB18_12
# %bb.10:                               #   in Loop: Header=BB18_5 Depth=1
	movl	$8, %r11d
	cmpl	$12, %r13d
	jne	.LBB18_13
# %bb.11:                               #   in Loop: Header=BB18_5 Depth=1
	andq	%r9, %r10
	movq	(%rax,%r10), %r11
	jmp	.LBB18_13
.LBB18_18:
	movl	$32, %r8d
.LBB18_19:
	addq	%r8, %rdx
	addq	%r12, %rdx
	cmpq	$16, %rdx
	jb	.LBB18_23
.LBB18_21:
.Ltmp40:
	leaq	-32(%rbp), %rcx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
.Ltmp41:
# %bb.22:
	movq	$0, -16(%rbp)
.LBB18_23:
	movq	%rdi, -80(%rbp)
	movq	%r14, -72(%rbp)
	movq	%r15, -64(%rbp)
	movq	%r12, -56(%rbp)
.Ltmp42:
	leaq	-88(%rbp), %rcx
	leaq	-32(%rbp), %rdi
	leaq	-64(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rdi, %rdx
	callq	"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Ltmp43:
# %bb.24:
	testb	%bl, %bl
	je	.LBB18_31
# %bb.25:
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jae	.LBB18_30
# %bb.26:
	leaq	1(%rax), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$16, %rcx
	jb	.LBB18_27
# %bb.28:
	movq	-32(%rbp), %rcx
	movw	$10, (%rcx,%rax)
	movq	-16(%rbp), %rax
	cmpq	$16, -8(%rbp)
	jae	.LBB18_32
	jmp	.LBB18_33
.LBB18_30:
.Ltmp44:
	leaq	-32(%rbp), %rcx
	movl	$1, %edx
	movb	$10, %r9b
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
.Ltmp45:
.LBB18_31:
	movq	-16(%rbp), %rax
	cmpq	$16, -8(%rbp)
	jb	.LBB18_33
.LBB18_32:
	movq	-32(%rbp), %rdi
.LBB18_33:
	movq	%rdi, -48(%rbp)
	movq	%rax, -40(%rbp)
.Ltmp46:
	leaq	-48(%rbp), %rdx
	movq	%rsi, %rcx
	callq	"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z"
.Ltmp47:
# %bb.34:
	movq	-8(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB18_42
# %bb.35:
	movq	-32(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB18_41
# %bb.36:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB18_37
# %bb.40:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB18_41:
	callq	"??3@YAXPEAX_K@Z"
.LBB18_42:
	nop
	addq	$136, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB18_27:
	leaq	-32(%rbp), %rcx
	movw	$10, (%rcx,%rax)
	movq	-16(%rbp), %rax
	cmpq	$16, -8(%rbp)
	jae	.LBB18_32
	jmp	.LBB18_33
.LBB18_37:
.Ltmp48:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp49:
# %bb.38:
	int3
	.seh_handlerdata
	.long	("$cppxdata$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.def	"?dtor$39@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$39@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA":
.seh_proc "?dtor$39@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"
.LBB18_39:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.def	"?dtor$43@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$43@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA":
.seh_proc "?dtor$43@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"
.LBB18_43:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	-32(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.def	"?dtor$44@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$44@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA":
.seh_proc "?dtor$44@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"
.LBB18_44:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	-32(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end11:
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.p2align	2, 0x0
"$cppxdata$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	429065506                       # MagicNumber
	.long	3                               # MaxState
	.long	("$stateUnwindMap$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL # IPToStateXData
	.long	128                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$44@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$39@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$43@?0??_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"@IMGREL # Action
"$ip2state$?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	.Lfunc_begin11@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp40@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp44@IMGREL+1                # IP
	.long	2                               # ToState
	.long	.Ltmp48@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp49@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
                                        # -- End function
	.def	"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z"
	.globl	"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z" # -- Begin function ?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z
	.p2align	4, 0x90
"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z": # @"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z"
.seh_proc "?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%rdx, %rsi
	movq	%rcx, %rdi
	leaq	40(%rsp), %rcx
	movq	%rdi, %rdx
	callq	__std_get_unicode_console_handle_from_file_stream
	movl	48(%rsp), %ecx
	testl	%ecx, %ecx
	je	.LBB19_4
# %bb.1:
	cmpl	$50, %ecx
	je	.LBB19_6
# %bb.2:
	cmpl	$2, %ecx
	jne	.LBB19_9
# %bb.3:
	movq	(%rsi), %rcx
	movq	8(%rsi), %rsi
	movl	$1, %edx
	movq	%rsi, %r8
	movq	%rdi, %r9
	callq	fwrite
	cmpq	%rsi, %rax
	je	.LBB19_6
	jmp	.LBB19_7
.LBB19_4:
	movq	%rdi, %rcx
	callq	fflush
	testl	%eax, %eax
	jne	.LBB19_7
# %bb.5:
	movq	(%rsi), %rdx
	movq	8(%rsi), %r8
	movq	40(%rsp), %rcx
	callq	__std_print_to_unicode_console
	testl	%eax, %eax
	jne	.LBB19_8
.LBB19_6:
	addq	$56, %rsp
	popq	%rdi
	popq	%rsi
	retq
.LBB19_7:
	callq	_errno
	movl	(%rax), %ecx
	callq	"?_Throw_system_error@std@@YAXW4errc@1@@Z"
.LBB19_8:
	movl	%eax, %ecx
.LBB19_9:
	callq	"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.globl	"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z" # -- Begin function ??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z
	.p2align	4, 0x90
"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z": # @"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Lfunc_begin12:
.seh_proc "??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$448, %rsp                      # imm = 0x1C0
	.seh_stackalloc 448
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 312(%rbp)
	movq	%rcx, %rsi
	leaq	-32(%rbp), %rdi
	movq	%rdi, -64(%rbp)
	movq	$0, -56(%rbp)
	movq	$256, -48(%rbp)                 # imm = 0x100
	leaq	"??_7?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"(%rip), %rax
	movq	%rax, -72(%rbp)
	movq	%rdx, -40(%rbp)
	movups	(%r9), %xmm0
	movups	%xmm0, 264(%rbp)
	movups	(%r8), %xmm0
	movaps	%xmm0, 224(%rbp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 240(%rbp)
	leaq	-72(%rbp), %rax
	movq	%rax, 256(%rbp)
	movq	$0, 280(%rbp)
	movups	(%r8), %xmm0
	movaps	%xmm0, 288(%rbp)
.Ltmp50:
	leaq	288(%rbp), %rcx
	leaq	224(%rbp), %rdx
	callq	"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z"
.Ltmp51:
# %bb.1:
	movq	-56(%rbp), %rbx
	movq	-40(%rbp), %rcx
	movq	$0, -56(%rbp)
	movq	16(%rcx), %r9
	movq	24(%rcx), %rdx
	movq	%rdx, %rax
	subq	%r9, %rax
	cmpq	%rbx, %rax
	jae	.LBB20_2
# %bb.5:
.Ltmp52:
	movq	%rbx, 40(%rsp)
	movq	%rdi, 32(%rsp)
	movq	%rbx, %rdx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.Ltmp53:
	jmp	.LBB20_6
.LBB20_2:
	movq	%rcx, %rax
	cmpq	$16, %rdx
	jb	.LBB20_4
# %bb.3:
	movq	(%rcx), %rax
.LBB20_4:
	leaq	(%rax,%r9), %r14
	xorl	%r15d, %r15d
	movq	%r14, %rdx
	subq	%rdi, %rdx
	cmovaq	%rdx, %r15
	leaq	(%rdi,%rbx), %r12
	cmovbq	%rbx, %r15
	cmpq	%r14, %r12
	cmovbeq	%rbx, %r15
	leaq	(%r9,%rbx), %rdx
	movq	%rdx, 16(%rcx)
	movzbl	(%rax,%r9), %eax
	movb	%al, (%rbx,%r14)
	movq	%r14, %rcx
	movq	%rdi, %rdx
	movq	%r15, %r8
	callq	memcpy
	subq	%r15, %rbx
	addq	%r15, %r12
	addq	%r14, %r15
	movq	%r15, %rcx
	movq	%r12, %rdx
	movq	%rbx, %r8
	callq	memcpy
.LBB20_6:
	movq	-40(%rbp), %rcx
	movq	%rcx, (%rsi)
	movq	-56(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB20_13
# %bb.7:
	movq	$0, -56(%rbp)
	movq	16(%rcx), %r9
	movq	24(%rcx), %rdx
	movq	%rdx, %rax
	subq	%r9, %rax
	cmpq	%rbx, %rax
	jae	.LBB20_8
# %bb.12:
.Ltmp54:
	movq	%rbx, 40(%rsp)
	movq	%rdi, 32(%rsp)
	movq	%rbx, %rdx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.Ltmp55:
	jmp	.LBB20_13
.LBB20_8:
	movq	%rcx, %rax
	cmpq	$16, %rdx
	jb	.LBB20_10
# %bb.9:
	movq	(%rcx), %rax
.LBB20_10:
	leaq	(%rax,%r9), %r14
	xorl	%r15d, %r15d
	movq	%r14, %rdx
	subq	%rdi, %rdx
	cmovaq	%rdx, %r15
	leaq	(%rdi,%rbx), %r12
	cmovbq	%rbx, %r15
	cmpq	%r14, %r12
	cmovbeq	%rbx, %r15
	leaq	(%r9,%rbx), %rdx
	movq	%rdx, 16(%rcx)
	movzbl	(%rax,%r9), %eax
	movb	%al, (%rbx,%r14)
	movq	%r14, %rcx
	movq	%rdi, %rdx
	movq	%r15, %r8
	callq	memcpy
	subq	%r15, %rbx
	addq	%r15, %r12
	addq	%r14, %r15
	movq	%r15, %rcx
	movq	%r12, %rdx
	movq	%rbx, %r8
	callq	memcpy
.LBB20_13:
	movq	%rsi, %rax
	addq	$448, %rsp                      # imm = 0x1C0
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.def	"?dtor$11@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$11@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA":
.seh_proc "?dtor$11@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"
.LBB20_11:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.def	"?dtor$14@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA":
.seh_proc "?dtor$14@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"
.LBB20_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	-72(%rbp), %rcx
	callq	"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	nop
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end12:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z")@IMGREL # IPToStateXData
	.long	440                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$11@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$14@?0???$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z":
	.long	.Lfunc_begin12@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp50@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp53@IMGREL+1                # IP
	.long	-1                              # ToState
	.long	.Ltmp54@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp55@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$vformat_to@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
                                        # -- End function
	.def	"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
	.globl	"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z" # -- Begin function ??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z
	.p2align	4, 0x90
"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z": # @"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
.Lfunc_begin13:
.seh_proc "??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	16(%rcx), %rdi
	movabsq	$9223372036854775807, %r12      # imm = 0x7FFFFFFFFFFFFFFF
	movq	%rdi, %rax
	xorq	%r12, %rax
	cmpq	%rdx, %rax
	jb	.LBB21_19
# %bb.1:
	movq	%rdx, %rbx
	movq	%rcx, %rsi
	addq	%rdi, %rbx
	movq	24(%rcx), %r15
	movq	%rbx, %rax
	orq	$15, %rax
	movabsq	$-9223372036854775808, %rcx     # imm = 0x8000000000000000
	js	.LBB21_5
# %bb.2:
	movq	%r15, %rdx
	shrq	%rdx
	movq	%rdx, %r8
	xorq	%r12, %r8
	cmpq	%r15, %r8
	jb	.LBB21_5
# %bb.3:
	addq	%r15, %rdx
	cmpq	%rdx, %rax
	movq	%rdx, %r12
	cmovaq	%rax, %r12
	leaq	1(%r12), %rcx
	cmpq	$4096, %rcx                     # imm = 0x1000
	jb	.LBB21_6
# %bb.4:
	cmpq	$-39, %rcx
	jae	.LBB21_20
.LBB21_5:
	addq	$39, %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
.LBB21_9:
	movq	%rbx, 16(%rsi)
	movq	%r12, 24(%rsi)
	cmpq	$16, %r15
	jb	.LBB21_17
# %bb.10:
	movq	(%rsi), %rbx
	incq	%rdi
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	leaq	1(%r15), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB21_16
# %bb.11:
	movq	-8(%rbx), %rax
	addq	$-8, %rbx
	subq	%rax, %rbx
	cmpq	$32, %rbx
	jae	.LBB21_12
# %bb.15:
	addq	$40, %r15
	movq	%r15, %rdx
	movq	%rax, %rbx
.LBB21_16:
	movq	%rbx, %rcx
	callq	"??3@YAXPEAX_K@Z"
	jmp	.LBB21_18
.LBB21_17:
	incq	%rdi
	movq	%r14, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	memcpy
.LBB21_18:
	movq	%r14, (%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB21_6:
	testq	%rcx, %rcx
	je	.LBB21_7
# %bb.8:
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
	jmp	.LBB21_9
.LBB21_7:
	movq	$-1, %r12
	xorl	%r14d, %r14d
	jmp	.LBB21_9
.LBB21_19:
	callq	"?_Xlen_string@std@@YAXXZ"
.LBB21_12:
.Ltmp56:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp57:
# %bb.13:
.LBB21_20:
	callq	"?_Throw_bad_array_new_length@std@@YAXXZ"
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
	.seh_endproc
	.def	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z@4HA":
.seh_proc "?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z@4HA"
.LBB21_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end13:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z":
	.long	-1                              # ToState
	.long	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z":
	.long	.Lfunc_begin13@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp56@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp57@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??reserve@01@QEAAX0@Z@@Z"
                                        # -- End function
	.def	"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z"
	.globl	"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z" # -- Begin function ??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z
	.p2align	4, 0x90
"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z": # @"??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z"
.seh_proc "??$_Parse_format_string@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAXV?$basic_string_view@DU?$char_traits@D@std@@@0@AEAU?$_Format_handler@D@__p2286@0@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	8(%rcx), %rdi
	testq	%rdi, %rdi
	je	.LBB22_13
# %bb.1:
	movq	%rdx, %rsi
	movq	(%rcx), %r14
	addq	%r14, %rdi
	jmp	.LBB22_2
	.p2align	4, 0x90
.LBB22_3:                               #   in Loop: Header=BB22_2 Depth=1
	movq	%r14, %rbx
.LBB22_12:                              #   in Loop: Header=BB22_2 Depth=1
	movq	%rbx, %rcx
	movq	%rdi, %rdx
	movq	%rsi, %r8
	callq	"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z"
	movq	%rax, %r14
	cmpq	%rdi, %rax
	je	.LBB22_13
.LBB22_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB22_5 Depth 2
                                        #       Child Loop BB22_18 Depth 3
                                        #     Child Loop BB22_7 Depth 2
	cmpb	$123, (%r14)
	je	.LBB22_3
# %bb.4:                                #   in Loop: Header=BB22_2 Depth=1
	movq	%r14, %rcx
	movq	%rdi, %rdx
	movb	$123, %r8b
	callq	__std_find_trivial_1
	movq	%rax, %rbx
	movq	%r14, %rcx
	movq	%rax, %rdx
	movb	$125, %r8b
	callq	__std_find_trivial_1
	jmp	.LBB22_5
	.p2align	4, 0x90
.LBB22_21:                              #   in Loop: Header=BB22_5 Depth=2
	movq	%r12, 32(%rsi)
	addq	$2, %r15
	movq	%r15, %rcx
	movq	%rbx, %rdx
	movb	$125, %r8b
	callq	__std_find_trivial_1
	movq	%r15, %r14
.LBB22_5:                               #   Parent Loop BB22_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB22_18 Depth 3
	movq	%rax, %r15
	cmpq	%rbx, %rax
	je	.LBB22_6
# %bb.14:                               #   in Loop: Header=BB22_5 Depth=2
	leaq	1(%r15), %rax
	cmpq	%rbx, %rax
	je	.LBB22_22
# %bb.15:                               #   in Loop: Header=BB22_5 Depth=2
	cmpb	$125, (%rax)
	jne	.LBB22_22
# %bb.16:                               #   in Loop: Header=BB22_5 Depth=2
	movq	32(%rsi), %r12
	cmpq	%rax, %r14
	je	.LBB22_21
# %bb.17:                               #   in Loop: Header=BB22_5 Depth=2
	decq	%r14
	jmp	.LBB22_18
	.p2align	4, 0x90
.LBB22_20:                              #   in Loop: Header=BB22_18 Depth=3
	movq	8(%r12), %rcx
	movq	%rdx, 16(%r12)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
	cmpq	%r15, %r14
	je	.LBB22_21
.LBB22_18:                              #   Parent Loop BB22_2 Depth=1
                                        #     Parent Loop BB22_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movzbl	1(%r14), %ebp
	movq	16(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%r12)
	jae	.LBB22_20
# %bb.19:                               #   in Loop: Header=BB22_18 Depth=3
	movq	(%r12), %rax
	movq	%r12, %rcx
	callq	*(%rax)
	movq	16(%r12), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB22_20
	.p2align	4, 0x90
.LBB22_6:                               #   in Loop: Header=BB22_2 Depth=1
	movq	32(%rsi), %r15
	jmp	.LBB22_7
	.p2align	4, 0x90
.LBB22_10:                              #   in Loop: Header=BB22_7 Depth=2
	movq	8(%r15), %rcx
	movq	%rdx, 16(%r15)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
.LBB22_7:                               #   Parent Loop BB22_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%rbx, %r14
	je	.LBB22_11
# %bb.8:                                #   in Loop: Header=BB22_7 Depth=2
	movzbl	(%r14), %ebp
	movq	16(%r15), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%r15)
	jae	.LBB22_10
# %bb.9:                                #   in Loop: Header=BB22_7 Depth=2
	movq	(%r15), %rax
	movq	%r15, %rcx
	callq	*(%rax)
	movq	16(%r15), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB22_10
	.p2align	4, 0x90
.LBB22_11:                              #   in Loop: Header=BB22_2 Depth=1
	movq	%r15, 32(%rsi)
	cmpq	%rdi, %rbx
	jne	.LBB22_12
.LBB22_13:
	addq	$32, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	retq
.LBB22_22:
	leaq	"??_C@_0CA@EOADLFNL@Unmatched?5?8?$HN?8?5in?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	.globl	"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ" # -- Begin function ??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ
	.p2align	4, 0x90
"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ": # @"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
.Lfunc_begin14:
.seh_proc "??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	64(%rsp), %rbp
	.seh_setframe %rbp, 64
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	16(%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB23_6
# %bb.1:
	movq	%rcx, %rdx
	movq	$0, 16(%rcx)
	movq	32(%rcx), %rcx
	addq	$40, %rdx
	movq	16(%rcx), %r9
	movq	24(%rcx), %r8
	movq	%r8, %rax
	subq	%r9, %rax
	cmpq	%rsi, %rax
	jae	.LBB23_2
# %bb.5:
.Ltmp58:
	movq	%rsi, 40(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rsi, %rdx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.Ltmp59:
.LBB23_6:
	nop
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq
.LBB23_2:
	movq	%rcx, %rax
	cmpq	$16, %r8
	jb	.LBB23_4
# %bb.3:
	movq	(%rcx), %rax
.LBB23_4:
	leaq	(%rax,%r9), %rdi
	xorl	%ebx, %ebx
	movq	%rdi, %r8
	subq	%rdx, %r8
	cmovaq	%r8, %rbx
	leaq	(%rdx,%rsi), %r14
	cmovbq	%rsi, %rbx
	cmpq	%rdi, %r14
	cmovbeq	%rsi, %rbx
	leaq	(%r9,%rsi), %r8
	movq	%r8, 16(%rcx)
	movzbl	(%rax,%r9), %eax
	movb	%al, (%rsi,%rdi)
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memcpy
	subq	%rbx, %rsi
	addq	%rbx, %r14
	addq	%rdi, %rbx
	movq	%rbx, %rcx
	movq	%r14, %rdx
	movq	%rsi, %r8
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	jmp	memcpy                          # TAILCALL
	.seh_handlerdata
	.long	("$cppxdata$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ")@IMGREL
	.section	.text,"xr",discard,"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	.seh_endproc
	.def	"?dtor$7@?0???1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$7@?0???1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ@4HA":
.seh_proc "?dtor$7@?0???1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ@4HA"
.LBB23_7:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	64(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end14:
	.seh_handlerdata
	.section	.text,"xr",discard,"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	.seh_endproc
	.section	.xdata,"dr",associative,"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	.p2align	2, 0x0
"$cppxdata$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ")@IMGREL # IPToStateXData
	.long	56                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ":
	.long	-1                              # ToState
	.long	"?dtor$7@?0???1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ@4HA"@IMGREL # Action
"$ip2state$??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ":
	.long	.Lfunc_begin14@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp58@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp59@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
                                        # -- End function
	.def	"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z"
	.globl	"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z" # -- Begin function ?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z
	.p2align	4, 0x90
"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z": # @"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z"
.seh_proc "?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	cmpq	$256, 16(%rcx)                  # imm = 0x100
	jne	.LBB24_6
# %bb.1:
	movq	%rcx, %rsi
	movq	$0, 16(%rcx)
	leaq	40(%rcx), %rdx
	movq	32(%rcx), %rcx
	movq	16(%rcx), %r9
	movq	24(%rcx), %r8
	movq	%r8, %rax
	subq	%r9, %rax
	cmpq	$256, %rax                      # imm = 0x100
	jae	.LBB24_2
# %bb.5:
	movq	%rdx, 32(%rsp)
	movq	$256, 40(%rsp)                  # imm = 0x100
	movl	$256, %edx                      # imm = 0x100
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.LBB24_6:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
.LBB24_2:
	movq	%rcx, %rax
	cmpq	$16, %r8
	jb	.LBB24_4
# %bb.3:
	movq	(%rcx), %rax
.LBB24_4:
	leaq	(%rax,%r9), %rdi
	xorl	%ebx, %ebx
	movq	%rdi, %r8
	subq	%rdx, %r8
	cmovaq	%r8, %rbx
	leaq	296(%rsi), %r8
	movl	$256, %r14d                     # imm = 0x100
	cmovbq	%r14, %rbx
	cmpq	%rdi, %r8
	cmovbeq	%r14, %rbx
	leaq	256(%r9), %r8
	movq	%r8, 16(%rcx)
	movzbl	(%rax,%r9), %ecx
	movb	%cl, 256(%rax,%r9)
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memcpy
	subq	%rbx, %r14
	leaq	(%rsi,%rbx), %rdx
	addq	$296, %rdx                      # imm = 0x128
	addq	%rdi, %rbx
	movq	%rbx, %rcx
	movq	%r14, %r8
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	jmp	memcpy                          # TAILCALL
	.seh_endproc
                                        # -- End function
	.def	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
	.globl	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z" # -- Begin function ??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z
	.p2align	4, 0x90
"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z": # @"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.Lfunc_begin15:
.seh_proc "??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	16(%rcx), %rbx
	movabsq	$9223372036854775807, %r13      # imm = 0x7FFFFFFFFFFFFFFF
	movq	%rbx, %rax
	xorq	%r13, %rax
	cmpq	%rdx, %rax
	jb	.LBB25_19
# %bb.1:
	movq	%r9, %rdi
	movq	%rdx, %r15
	movq	%rcx, %rsi
	addq	%rbx, %r15
	movq	24(%rcx), %r12
	movq	%r15, %rax
	orq	$15, %rax
	movabsq	$-9223372036854775808, %rcx     # imm = 0x8000000000000000
	js	.LBB25_5
# %bb.2:
	movq	%r12, %rdx
	shrq	%rdx
	movq	%rdx, %r8
	xorq	%r13, %r8
	cmpq	%r12, %r8
	jb	.LBB25_5
# %bb.3:
	addq	%r12, %rdx
	cmpq	%rdx, %rax
	movq	%rdx, %r13
	cmovaq	%rax, %r13
	leaq	1(%r13), %rcx
	cmpq	$4096, %rcx                     # imm = 0x1000
	jb	.LBB25_6
# %bb.4:
	cmpq	$-39, %rcx
	jae	.LBB25_20
.LBB25_5:
	addq	$39, %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
.LBB25_9:
	movq	%r15, 16(%rsi)
	movq	%r13, 24(%rsi)
	cmpq	$16, %r12
	jb	.LBB25_17
# %bb.10:
	movq	(%rsi), %r15
	movq	%r14, %rcx
	movq	%r15, %rdx
	movq	%rdi, %r8
	callq	memcpy
	leaq	(%r14,%rdi), %r13
	movq	%r13, %rcx
	movq	112(%rbp), %rdx
	movq	120(%rbp), %r8
	callq	memcpy
	subq	%rdi, %rbx
	incq	%rbx
	addq	%r15, %rdi
	addq	120(%rbp), %r13
	movq	%r13, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	callq	memcpy
	leaq	1(%r12), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB25_16
# %bb.11:
	movq	-8(%r15), %rax
	addq	$-8, %r15
	subq	%rax, %r15
	cmpq	$32, %r15
	jae	.LBB25_12
# %bb.15:
	addq	$40, %r12
	movq	%r12, %rdx
	movq	%rax, %r15
.LBB25_16:
	movq	%r15, %rcx
	callq	"??3@YAXPEAX_K@Z"
	jmp	.LBB25_18
.LBB25_17:
	movq	%r14, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	memcpy
	leaq	(%r14,%rdi), %r15
	movq	%r15, %rcx
	movq	112(%rbp), %rdx
	movq	120(%rbp), %r12
	movq	%r12, %r8
	callq	memcpy
	subq	%rdi, %rbx
	incq	%rbx
	addq	%rsi, %rdi
	addq	%r12, %r15
	movq	%r15, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	callq	memcpy
.LBB25_18:
	movq	%r14, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB25_6:
	testq	%rcx, %rcx
	je	.LBB25_7
# %bb.8:
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
	jmp	.LBB25_9
.LBB25_7:
	movq	$-1, %r13
	xorl	%r14d, %r14d
	jmp	.LBB25_9
.LBB25_19:
	callq	"?_Xlen_string@std@@YAXXZ"
.LBB25_12:
.Ltmp60:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp61:
# %bb.13:
.LBB25_20:
	callq	"?_Throw_bad_array_new_length@std@@YAXXZ"
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
	.seh_endproc
	.def	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z@4HA":
.seh_proc "?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z@4HA"
.LBB25_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end15:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z":
	.long	-1                              # ToState
	.long	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z@4HA"@IMGREL # Action
"$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z":
	.long	.Lfunc_begin15@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp60@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp61@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
                                        # -- End function
	.def	"?_Throw_format_error@std@@YAXQEBD@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Throw_format_error@std@@YAXQEBD@Z"
	.globl	"?_Throw_format_error@std@@YAXQEBD@Z" # -- Begin function ?_Throw_format_error@std@@YAXQEBD@Z
	.p2align	4, 0x90
"?_Throw_format_error@std@@YAXQEBD@Z":  # @"?_Throw_format_error@std@@YAXQEBD@Z"
.seh_proc "?_Throw_format_error@std@@YAXQEBD@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$64, %rsp
	.seh_stackalloc 64
	.seh_endprologue
	movq	%rcx, %rdx
	leaq	40(%rsp), %rsi
	movq	%rsi, %rcx
	callq	"??0format_error@std@@QEAA@PEBD@Z"
	leaq	"_TI3?AVformat_error@std@@"(%rip), %rdx
	movq	%rsi, %rcx
	callq	_CxxThrowException
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z"
	.globl	"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z" # -- Begin function ??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z
	.p2align	4, 0x90
"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z": # @"??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z"
.seh_proc "??$_Parse_replacement_field@DAEAU?$_Format_handler@D@__p2286@std@@@std@@YAPEBDPEBD0AEAU?$_Format_handler@D@__p2286@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	movq	%rcx, %rsi
	incq	%rsi
	cmpq	%rdx, %rsi
	je	.LBB27_18
# %bb.1:
	movq	%r8, %rdi
	movzbl	(%rsi), %eax
	cmpl	$123, %eax
	je	.LBB27_5
# %bb.2:
	cmpl	$125, %eax
	jne	.LBB27_9
# %bb.3:
	movq	24(%rdi), %rdx
	testq	%rdx, %rdx
	js	.LBB27_19
# %bb.4:
	leaq	1(%rdx), %rax
	movq	%rax, 24(%rdi)
	jmp	.LBB27_13
.LBB27_5:
	movq	32(%rdi), %rbx
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB27_7
# %bb.6:
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
.LBB27_7:
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	$123, (%rcx,%rax)
	movq	%rbx, 32(%rdi)
	jmp	.LBB27_8
.LBB27_9:
	movq	%rdx, %rbx
	movq	%rdi, 32(%rsp)
	movq	$-1, 40(%rsp)
	leaq	32(%rsp), %r8
	movq	%rsi, %rcx
	callq	"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z"
	cmpq	%rbx, %rax
	je	.LBB27_17
# %bb.10:
	movq	%rax, %rsi
	movsbl	(%rax), %eax
	cmpl	$58, %eax
	je	.LBB27_14
# %bb.11:
	cmpl	$125, %eax
	jne	.LBB27_17
# %bb.12:
	movq	40(%rsp), %rdx
.LBB27_13:
	movq	%rdi, %rcx
	movq	%rsi, %r8
	callq	"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z"
	jmp	.LBB27_8
.LBB27_14:
	incq	%rsi
	movq	40(%rsp), %rdx
	movq	%rdi, %rcx
	movq	%rsi, %r8
	movq	%rbx, %r9
	callq	"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z"
	cmpq	%rbx, %rax
	je	.LBB27_16
# %bb.15:
	movq	%rax, %rsi
	cmpb	$125, (%rax)
	jne	.LBB27_16
.LBB27_8:
	incq	%rsi
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB27_18:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB27_17:
	leaq	"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB27_19:
	leaq	"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB27_16:
	leaq	"??_C@_0BK@NMCHMIGI@Unknown?5format?5specifier?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??0format_error@std@@QEAA@PEBD@Z";
	.scl	3;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@PEBD@Z"
	.p2align	4, 0x90                         # -- Begin function ??0format_error@std@@QEAA@PEBD@Z
"??0format_error@std@@QEAA@PEBD@Z":     # @"??0format_error@std@@QEAA@PEBD@Z"
.Lfunc_begin16:
.seh_proc "??0format_error@std@@QEAA@PEBD@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	movq	%rdx, -16(%rbp)
	movb	$1, -8(%rbp)
.Ltmp62:
	leaq	-16(%rbp), %rcx
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp63:
# %bb.1:
	leaq	"??_7format_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0format_error@std@@QEAA@PEBD@Z")@IMGREL
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@PEBD@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0format_error@std@@QEAA@PEBD@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0format_error@std@@QEAA@PEBD@Z@4HA":
.seh_proc "?dtor$2@?0???0format_error@std@@QEAA@PEBD@Z@4HA"
.LBB28_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end16:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@PEBD@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0format_error@std@@QEAA@PEBD@Z"
	.p2align	2, 0x0
"$cppxdata$??0format_error@std@@QEAA@PEBD@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0format_error@std@@QEAA@PEBD@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0format_error@std@@QEAA@PEBD@Z")@IMGREL # IPToStateXData
	.long	48                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0format_error@std@@QEAA@PEBD@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0format_error@std@@QEAA@PEBD@Z@4HA"@IMGREL # Action
"$ip2state$??0format_error@std@@QEAA@PEBD@Z":
	.long	.Lfunc_begin16@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp62@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp63@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@PEBD@Z"
                                        # -- End function
	.def	"??0format_error@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@AEBV01@@Z"
	.globl	"??0format_error@std@@QEAA@AEBV01@@Z" # -- Begin function ??0format_error@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0format_error@std@@QEAA@AEBV01@@Z":  # @"??0format_error@std@@QEAA@AEBV01@@Z"
.Lfunc_begin17:
.seh_proc "??0format_error@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp64:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp65:
# %bb.1:
	leaq	"??_7format_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0format_error@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0format_error@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0format_error@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0format_error@std@@QEAA@AEBV01@@Z@4HA"
.LBB29_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end17:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0format_error@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0format_error@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0format_error@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0format_error@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0format_error@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0format_error@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0format_error@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin17@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp64@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp65@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0format_error@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??0runtime_error@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0runtime_error@std@@QEAA@AEBV01@@Z"
	.globl	"??0runtime_error@std@@QEAA@AEBV01@@Z" # -- Begin function ??0runtime_error@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0runtime_error@std@@QEAA@AEBV01@@Z": # @"??0runtime_error@std@@QEAA@AEBV01@@Z"
.Lfunc_begin18:
.seh_proc "??0runtime_error@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp66:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp67:
# %bb.1:
	leaq	"??_7runtime_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0runtime_error@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0runtime_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0runtime_error@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0runtime_error@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0runtime_error@std@@QEAA@AEBV01@@Z@4HA"
.LBB30_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end18:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0runtime_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0runtime_error@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0runtime_error@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0runtime_error@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0runtime_error@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0runtime_error@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0runtime_error@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0runtime_error@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin18@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp66@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp67@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0runtime_error@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??_Gformat_error@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gformat_error@std@@UEAAPEAXI@Z"
	.globl	"??_Gformat_error@std@@UEAAPEAXI@Z" # -- Begin function ??_Gformat_error@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gformat_error@std@@UEAAPEAXI@Z":    # @"??_Gformat_error@std@@UEAAPEAXI@Z"
.Lfunc_begin19:
.seh_proc "??_Gformat_error@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp68:
	callq	__std_exception_destroy
.Ltmp69:
# %bb.1:
	testl	%edi, %edi
	je	.LBB31_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB31_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gformat_error@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gformat_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gformat_error@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gformat_error@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gformat_error@std@@UEAAPEAXI@Z@4HA"
.LBB31_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end19:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gformat_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gformat_error@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gformat_error@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gformat_error@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gformat_error@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gformat_error@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gformat_error@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gformat_error@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin19@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp68@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp69@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gformat_error@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"??_Gruntime_error@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gruntime_error@std@@UEAAPEAXI@Z"
	.globl	"??_Gruntime_error@std@@UEAAPEAXI@Z" # -- Begin function ??_Gruntime_error@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gruntime_error@std@@UEAAPEAXI@Z":   # @"??_Gruntime_error@std@@UEAAPEAXI@Z"
.Lfunc_begin20:
.seh_proc "??_Gruntime_error@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp70:
	callq	__std_exception_destroy
.Ltmp71:
# %bb.1:
	testl	%edi, %edi
	je	.LBB32_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB32_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gruntime_error@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gruntime_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gruntime_error@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gruntime_error@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gruntime_error@std@@UEAAPEAXI@Z@4HA"
.LBB32_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end20:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gruntime_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gruntime_error@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gruntime_error@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gruntime_error@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gruntime_error@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gruntime_error@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gruntime_error@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gruntime_error@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin20@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp70@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp71@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gruntime_error@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z"
	.globl	"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z" # -- Begin function ?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z
	.p2align	4, 0x90
"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z": # @"?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z"
.seh_proc "?_On_replacement_field@?$_Format_handler@D@__p2286@std@@QEAAX_KPEBD@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$112, %rsp
	.seh_stackalloc 112
	.seh_endprologue
	movq	40(%rcx), %r8
	cmpq	%rdx, %r8
	jbe	.LBB33_8
# %bb.1:
	movq	%rcx, %rsi
	movq	48(%rcx), %r10
	movq	(%r10,%rdx,8), %rdx
	movq	%rdx, %rax
	shrq	$60, %rax
	leal	-1(%rax), %r9d
	cmpl	$12, %r9d
	ja	.LBB33_8
# %bb.2:
	leaq	40(%rsi), %rcx
	leaq	(%r10,%r8,8), %r8
	movabsq	$1152921504606846975, %r10      # imm = 0xFFFFFFFFFFFFFFF
	andq	%r10, %rdx
	leaq	.LJTI33_0(%rip), %r10
	movslq	(%r10,%r9,4), %r9
	addq	%r10, %r9
	jmpq	*%r9
.LBB33_6:
	movq	(%r8,%rdx), %rdx
	movq	%rdx, 40(%rsp)
	jmp	.LBB33_10
.LBB33_9:
	movl	(%r8,%rdx), %edx
	movl	%edx, 40(%rsp)
	jmp	.LBB33_10
.LBB33_3:
	movzbl	(%r8,%rdx), %edx
	movb	%dl, 40(%rsp)
	jmp	.LBB33_10
.LBB33_5:
	movsd	(%r8,%rdx), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB33_10
.LBB33_7:
	movq	(%r8,%rdx), %r9
	movq	%r9, 40(%rsp)
	movq	8(%r8,%rdx), %rdx
	jmp	.LBB33_11
.LBB33_4:
	movss	(%r8,%rdx), %xmm0               # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB33_10:
                                        # implicit-def: $rdx
.LBB33_11:
	movb	%al, 56(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	%rdx, 72(%rsp)
	movq	32(%rsi), %rax
	movq	%rax, 80(%rsp)
	movups	(%rcx), %xmm0
	movups	%xmm0, 88(%rsp)
	movq	56(%rsi), %rax
	movq	%rax, 104(%rsp)
	leaq	48(%rsp), %rcx
	leaq	80(%rsp), %rdx
	leaq	56(%rsp), %r8
	callq	"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	movq	48(%rsp), %rax
	movq	%rax, 32(%rsi)
	addq	$112, %rsp
	popq	%rsi
	retq
.LBB33_8:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI33_0:
	.long	.LBB33_9-.LJTI33_0
	.long	.LBB33_9-.LJTI33_0
	.long	.LBB33_6-.LJTI33_0
	.long	.LBB33_6-.LJTI33_0
	.long	.LBB33_3-.LJTI33_0
	.long	.LBB33_3-.LJTI33_0
	.long	.LBB33_4-.LJTI33_0
	.long	.LBB33_5-.LJTI33_0
	.long	.LBB33_5-.LJTI33_0
	.long	.LBB33_6-.LJTI33_0
	.long	.LBB33_6-.LJTI33_0
	.long	.LBB33_7-.LJTI33_0
	.long	.LBB33_7-.LJTI33_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z"
	.globl	"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z" # -- Begin function ??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z
	.p2align	4, 0x90
"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z": # @"??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z"
.seh_proc "??$_Parse_arg_id@DAEAU?$_Id_adapter@D@std@@@std@@YAPEBDPEBD0AEAU?$_Id_adapter@D@0@@Z"
# %bb.0:
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	movzbl	(%rcx), %r9d
	cmpl	$125, %r9d
	je	.LBB34_2
# %bb.1:
	cmpl	$58, %r9d
	jne	.LBB34_5
.LBB34_2:
	movq	(%r8), %rdx
	movq	24(%rdx), %rax
	testq	%rax, %rax
	js	.LBB34_18
# %bb.3:
	leaq	1(%rax), %r9
	movq	%r9, 24(%rdx)
	jmp	.LBB34_4
.LBB34_5:
	leal	-48(%r9), %eax
	cmpb	$9, %al
	ja	.LBB34_19
# %bb.6:
	incq	%rcx
	xorl	%eax, %eax
	cmpb	$48, %r9b
	je	.LBB34_7
	.p2align	4, 0x90
.LBB34_13:                              # =>This Inner Loop Header: Depth=1
	leal	(%rax,%rax,4), %eax
	movzbl	%r9b, %r9d
	leal	(%r9,%rax,2), %eax
	addl	$-48, %eax
	cmpq	%rdx, %rcx
	je	.LBB34_14
# %bb.15:                               #   in Loop: Header=BB34_13 Depth=1
	movzbl	(%rcx), %r9d
	leal	-48(%r9), %r10d
	cmpb	$10, %r10b
	jae	.LBB34_16
# %bb.12:                               #   in Loop: Header=BB34_13 Depth=1
	incq	%rcx
	cmpl	$214748364, %eax                # imm = 0xCCCCCCC
	jbe	.LBB34_13
.LBB34_17:
	leaq	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB34_14:
	movq	%rdx, %rcx
.LBB34_16:
	testl	%eax, %eax
	js	.LBB34_17
.LBB34_7:
	cmpq	%rdx, %rcx
	je	.LBB34_19
# %bb.8:
	movzbl	(%rcx), %edx
	cmpl	$58, %edx
	je	.LBB34_10
# %bb.9:
	cmpl	$125, %edx
	jne	.LBB34_19
.LBB34_10:
	movq	(%r8), %rdx
	cmpq	$0, 24(%rdx)
	jg	.LBB34_20
# %bb.11:
	movl	%eax, %eax
	movq	$-1, 24(%rdx)
.LBB34_4:
	movq	%rax, 8(%r8)
	movq	%rcx, %rax
	addq	$40, %rsp
	retq
.LBB34_19:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB34_18:
	leaq	"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB34_20:
	leaq	"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z"
	.globl	"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z" # -- Begin function ?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z
	.p2align	4, 0x90
"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z": # @"?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z"
.seh_proc "?_On_format_specs@?$_Format_handler@D@__p2286@std@@QEAAPEBD_KPEBD1@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$152, %rsp
	.seh_stackalloc 152
	.seh_endprologue
	movq	%rcx, %rdi
	movq	(%rcx), %rax
	movq	%r8, (%rcx)
	subq	%r8, %rax
	addq	%rax, 8(%rcx)
	movq	40(%rcx), %rcx
	cmpq	%rdx, %rcx
	jbe	.LBB35_8
# %bb.1:
	movq	%r9, %rbx
	movq	48(%rdi), %r9
	movq	(%r9,%rdx,8), %rax
	movq	%rax, %r14
	shrq	$60, %r14
	leal	-1(%r14), %edx
	cmpl	$12, %edx
	ja	.LBB35_8
# %bb.2:
	leaq	32(%rdi), %rsi
	leaq	(%r9,%rcx,8), %r9
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	andq	%rcx, %rax
	leaq	.LJTI35_0(%rip), %rcx
	movslq	(%rcx,%rdx,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB35_6:
	movq	(%r9,%rax), %rax
	movq	%rax, 40(%rsp)
	jmp	.LBB35_11
.LBB35_10:
	movl	(%r9,%rax), %eax
	movl	%eax, 40(%rsp)
	jmp	.LBB35_11
.LBB35_3:
	movzbl	(%r9,%rax), %eax
	movb	%al, 40(%rsp)
	jmp	.LBB35_11
.LBB35_5:
	movsd	(%r9,%rax), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB35_11
.LBB35_4:
	movss	(%r9,%rax), %xmm0               # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB35_11:
                                        # implicit-def: $r15
.LBB35_12:
	movabsq	$-4294967296, %rax              # imm = 0xFFFFFFFF00000000
	movq	%rax, 48(%rsp)
	movl	$0, 56(%rsp)
	movw	$0, 60(%rsp)
	movl	$8193, 62(%rsp)                 # imm = 0x2001
	movb	$0, 66(%rsp)
	leaq	48(%rsp), %r12
	movq	%r12, 96(%rsp)
	movq	%rdi, 104(%rsp)
	movq	%rsi, 112(%rsp)
	movb	%r14b, 120(%rsp)
	movb	$0, 121(%rsp)
	leaq	96(%rsp), %rax
	movq	%r8, %rcx
	movq	%rbx, %rdx
	movq	%rax, %r8
	callq	"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	cmpq	%rbx, %rax
	je	.LBB35_16
# %bb.13:
	movq	%rax, %rdi
	cmpb	$125, (%rax)
	jne	.LBB35_16
# %bb.14:
	movb	%r14b, 128(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	%r15, 144(%rsp)
	movq	%rsi, 80(%rsp)
	movq	%r12, 88(%rsp)
	leaq	72(%rsp), %rcx
	leaq	80(%rsp), %rdx
	leaq	128(%rsp), %r8
	callq	"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	movq	72(%rsp), %rax
	movq	%rax, (%rsi)
.LBB35_15:
	movq	%rdi, %rax
	addq	$152, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	retq
.LBB35_7:
	movq	(%r9,%rax), %rcx
	movq	%rcx, 40(%rsp)
	movq	8(%r9,%rax), %r15
	jmp	.LBB35_12
.LBB35_9:
	movq	(%r9,%rax), %r8
	movq	%rdi, %rcx
	movq	%rsi, %rdx
	callq	*8(%r9,%rax)
	movq	(%rdi), %rdi
	jmp	.LBB35_15
.LBB35_16:
	leaq	"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB35_8:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI35_0:
	.long	.LBB35_10-.LJTI35_0
	.long	.LBB35_10-.LJTI35_0
	.long	.LBB35_6-.LJTI35_0
	.long	.LBB35_6-.LJTI35_0
	.long	.LBB35_3-.LJTI35_0
	.long	.LBB35_3-.LJTI35_0
	.long	.LBB35_4-.LJTI35_0
	.long	.LBB35_5-.LJTI35_0
	.long	.LBB35_5-.LJTI35_0
	.long	.LBB35_6-.LJTI35_0
	.long	.LBB35_6-.LJTI35_0
	.long	.LBB35_7-.LJTI35_0
	.long	.LBB35_9-.LJTI35_0
	.seh_endproc
                                        # -- End function
	.def	"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	.globl	"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z" # -- Begin function ??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z
	.p2align	4, 0x90
"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z": # @"??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
.seh_proc "??$visit_format_arg@U?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Default_arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$136, %rsp
	.seh_stackalloc 136
	.seh_endprologue
	movzbl	(%r8), %eax
	cmpq	$13, %rax
	ja	.LBB36_78
# %bb.1:
	movq	%rcx, %rsi
	leaq	.LJTI36_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB36_2:
	movq	(%rdx), %rax
	jmp	.LBB36_39
.LBB36_3:
	movl	8(%r8), %eax
	testl	%eax, %eax
	js	.LBB36_57
# %bb.4:
	leaq	32(%rsp), %rbx
	jmp	.LBB36_58
.LBB36_5:
	movl	8(%r8), %eax
	movq	(%rdx), %rdi
	xorl	%r14d, %r14d
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB36_6:                               # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r8d
	leal	(%r8,%r8,4), %r8d
	movl	%eax, %r9d
	subl	%r8d, %r9d
	orb	$48, %r9b
	movb	%r9b, 95(%rsp,%r14)
	decq	%r14
	cmpl	$9, %eax
	movl	%edx, %eax
	ja	.LBB36_6
# %bb.7:
	movq	%r14, %r8
	negq	%r8
	cmpq	$25, %r8
	jl	.LBB36_43
# %bb.8:
	leaq	56(%rsp), %rbx
	jmp	.LBB36_45
.LBB36_9:
	movq	8(%r8), %rcx
	testq	%rcx, %rcx
	js	.LBB36_67
# %bb.10:
	leaq	32(%rsp), %rbx
	jmp	.LBB36_68
.LBB36_11:
	movq	8(%r8), %rcx
	movq	(%rdx), %rdi
	xorl	%r14d, %r14d
	movabsq	$-3689348814741910323, %r8      # imm = 0xCCCCCCCCCCCCCCCD
	.p2align	4, 0x90
.LBB36_12:                              # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rax
	mulq	%r8
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	movl	%ecx, %r9d
	subl	%eax, %r9d
	orb	$48, %r9b
	movb	%r9b, 127(%rsp,%r14)
	decq	%r14
	cmpq	$9, %rcx
	movq	%rdx, %rcx
	ja	.LBB36_12
# %bb.13:
	movq	%r14, %r8
	negq	%r8
	cmpq	$25, %r8
	jl	.LBB36_50
# %bb.14:
	leaq	56(%rsp), %rbx
	jmp	.LBB36_52
.LBB36_15:
	cmpb	$0, 8(%r8)
	movq	(%rdx), %rdi
	leaq	"??_C@_05LAPONLG@false?$AA@"(%rip), %rax
	leaq	"??_C@_04LOAJBDKD@true?$AA@"(%rip), %rbx
	cmoveq	%rax, %rbx
	movzbl	(%rbx), %ebp
	testb	%bpl, %bpl
	je	.LBB36_76
# %bb.16:
	incq	%rbx
	jmp	.LBB36_18
	.p2align	4, 0x90
.LBB36_17:                              #   in Loop: Header=BB36_18 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	movzbl	(%rbx), %ebp
	incq	%rbx
	testb	%bpl, %bpl
	je	.LBB36_76
.LBB36_18:                              # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_17
# %bb.19:                               #   in Loop: Header=BB36_18 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_17
.LBB36_20:
	movzbl	8(%r8), %ebx
	movq	(%rdx), %rdi
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_22
# %bb.21:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB36_22:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bl, (%rcx,%rax)
	jmp	.LBB36_76
.LBB36_23:
	movss	8(%r8), %xmm2                   # xmm2 = mem[0],zero,zero,zero
	movq	(%rdx), %rdx
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	jmp	.LBB36_77
.LBB36_24:
	movsd	8(%r8), %xmm2                   # xmm2 = mem[0],zero
	movq	(%rdx), %rdx
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	jmp	.LBB36_77
.LBB36_25:
	movsd	8(%r8), %xmm2                   # xmm2 = mem[0],zero
	movq	(%rdx), %rdx
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	jmp	.LBB36_77
.LBB36_26:
	movq	8(%r8), %r8
	movq	(%rdx), %rdx
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z"
	jmp	.LBB36_77
.LBB36_27:
	movq	8(%r8), %rbx
	testq	%rbx, %rbx
	je	.LBB36_79
# %bb.28:
	movq	(%rdx), %rdi
	movzbl	(%rbx), %ebp
	testb	%bpl, %bpl
	je	.LBB36_76
# %bb.29:
	incq	%rbx
	jmp	.LBB36_31
	.p2align	4, 0x90
.LBB36_30:                              #   in Loop: Header=BB36_31 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	movzbl	(%rbx), %ebp
	incq	%rbx
	testb	%bpl, %bpl
	je	.LBB36_76
.LBB36_31:                              # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_30
# %bb.32:                               #   in Loop: Header=BB36_31 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_30
.LBB36_33:
	movq	16(%r8), %rbx
	movq	(%rdx), %rdi
	testq	%rbx, %rbx
	je	.LBB36_76
# %bb.34:
	movq	8(%r8), %r14
	xorl	%r15d, %r15d
	jmp	.LBB36_36
	.p2align	4, 0x90
.LBB36_35:                              #   in Loop: Header=BB36_36 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%r15
	cmpq	%r15, %rbx
	je	.LBB36_76
.LBB36_36:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%r14,%r15), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_35
# %bb.37:                               #   in Loop: Header=BB36_36 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_35
.LBB36_38:
	movq	8(%r8), %rax
	movq	16(%r8), %r9
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
	movups	8(%rdx), %xmm0
	movups	%xmm0, 40(%rsp)
	movq	(%rdx), %rcx
	movq	%rcx, 32(%rsp)
	movq	24(%rdx), %rcx
	movq	%rcx, 56(%rsp)
	leaq	64(%rsp), %rcx
	leaq	32(%rsp), %rdx
	movq	%rax, %r8
	callq	*%r9
	movq	32(%rsp), %rax
.LBB36_39:
	movq	%rax, (%rsi)
	jmp	.LBB36_77
.LBB36_43:
	leaq	(%rsp,%r14), %rdx
	addq	$96, %rdx
	leaq	32(%rsp), %rbx
	movq	%rbx, %rcx
	callq	memcpy
	testq	%r14, %r14
	je	.LBB36_76
# %bb.44:
	subq	%r14, %rbx
.LBB36_45:
	leaq	32(%rsp), %r14
	jmp	.LBB36_47
	.p2align	4, 0x90
.LBB36_46:                              #   in Loop: Header=BB36_47 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
	cmpq	%rbx, %r14
	je	.LBB36_76
.LBB36_47:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%r14), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_46
# %bb.48:                               #   in Loop: Header=BB36_47 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_46
.LBB36_50:
	leaq	(%rsp,%r14), %rdx
	addq	$128, %rdx
	leaq	32(%rsp), %rbx
	movq	%rbx, %rcx
	callq	memcpy
	testq	%r14, %r14
	je	.LBB36_76
# %bb.51:
	subq	%r14, %rbx
.LBB36_52:
	leaq	32(%rsp), %r14
	jmp	.LBB36_54
	.p2align	4, 0x90
.LBB36_53:                              #   in Loop: Header=BB36_54 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
	cmpq	%rbx, %r14
	je	.LBB36_76
.LBB36_54:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%r14), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_53
# %bb.55:                               #   in Loop: Header=BB36_54 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_53
.LBB36_57:
	leaq	33(%rsp), %rbx
	movb	$45, 32(%rsp)
	negl	%eax
.LBB36_58:
	movq	(%rdx), %rdi
	leaq	56(%rsp), %r14
	xorl	%r15d, %r15d
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB36_59:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r8d
	leal	(%r8,%r8,4), %r8d
	movl	%eax, %r9d
	subl	%r8d, %r9d
	orb	$48, %r9b
	movb	%r9b, 95(%rsp,%r15)
	decq	%r15
	cmpl	$9, %eax
	movl	%edx, %eax
	ja	.LBB36_59
# %bb.60:
	movq	%r15, %r8
	negq	%r8
	movq	%r14, %rax
	subq	%rbx, %rax
	cmpq	%r8, %rax
	jl	.LBB36_62
# %bb.61:
	leaq	(%rsp,%r15), %rdx
	addq	$96, %rdx
	movq	%rbx, %rcx
	callq	memmove
	subq	%r15, %rbx
	leaq	32(%rsp), %rax
	movq	%rbx, %r14
	cmpq	%rax, %rbx
	je	.LBB36_76
.LBB36_62:
	leaq	32(%rsp), %rbx
	jmp	.LBB36_64
	.p2align	4, 0x90
.LBB36_63:                              #   in Loop: Header=BB36_64 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%rbx
	cmpq	%r14, %rbx
	je	.LBB36_76
.LBB36_64:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%rbx), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_63
# %bb.65:                               #   in Loop: Header=BB36_64 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_63
.LBB36_67:
	leaq	33(%rsp), %rbx
	movb	$45, 32(%rsp)
	negq	%rcx
.LBB36_68:
	movq	(%rdx), %rdi
	leaq	56(%rsp), %r14
	xorl	%r15d, %r15d
	movabsq	$-3689348814741910323, %r8      # imm = 0xCCCCCCCCCCCCCCCD
	.p2align	4, 0x90
.LBB36_69:                              # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rax
	mulq	%r8
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	movl	%ecx, %r9d
	subl	%eax, %r9d
	orb	$48, %r9b
	movb	%r9b, 127(%rsp,%r15)
	decq	%r15
	cmpq	$9, %rcx
	movq	%rdx, %rcx
	ja	.LBB36_69
# %bb.70:
	movq	%r15, %r8
	negq	%r8
	movq	%r14, %rax
	subq	%rbx, %rax
	cmpq	%r8, %rax
	jl	.LBB36_72
# %bb.71:
	leaq	(%rsp,%r15), %rdx
	addq	$128, %rdx
	movq	%rbx, %rcx
	callq	memmove
	subq	%r15, %rbx
	leaq	32(%rsp), %rax
	movq	%rbx, %r14
	cmpq	%rax, %rbx
	je	.LBB36_76
.LBB36_72:
	leaq	32(%rsp), %rbx
	jmp	.LBB36_74
	.p2align	4, 0x90
.LBB36_73:                              #   in Loop: Header=BB36_74 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%rbx
	cmpq	%r14, %rbx
	je	.LBB36_76
.LBB36_74:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%rbx), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB36_73
# %bb.75:                               #   in Loop: Header=BB36_74 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB36_73
.LBB36_76:
	movq	%rdi, (%rsi)
.LBB36_77:
	movq	%rsi, %rax
	addq	$136, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB36_78:
	callq	_invalid_parameter_noinfo_noreturn
.LBB36_79:
	leaq	"??_C@_0BI@KLAHEKGE@String?5pointer?5is?5null?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI36_0:
	.long	.LBB36_2-.LJTI36_0
	.long	.LBB36_3-.LJTI36_0
	.long	.LBB36_5-.LJTI36_0
	.long	.LBB36_9-.LJTI36_0
	.long	.LBB36_11-.LJTI36_0
	.long	.LBB36_15-.LJTI36_0
	.long	.LBB36_20-.LJTI36_0
	.long	.LBB36_23-.LJTI36_0
	.long	.LBB36_24-.LJTI36_0
	.long	.LBB36_25-.LJTI36_0
	.long	.LBB36_26-.LJTI36_0
	.long	.LBB36_27-.LJTI36_0
	.long	.LBB36_33-.LJTI36_0
	.long	.LBB36_38-.LJTI36_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z"
	.globl	"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z" # -- Begin function ??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z": # @"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z"
.seh_proc "??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	.seh_endprologue
                                        # kill: def $r9d killed $r9d def $r9
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	testl	%r9d, %r9d
	jns	.LBB37_4
# %bb.1:
	cmpq	%r8, %rdi
	je	.LBB37_2
# %bb.3:
	movb	$45, (%rdi)
	incq	%rdi
	negl	%r9d
.LBB37_4:
	movl	128(%rsp), %ecx
	leaq	64(%rsp), %rbx
	leal	-2(%rcx), %eax
	cmpl	$30, %eax
	ja	.LBB37_20
# %bb.5:
	leaq	.LJTI37_0(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB37_18:
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB37_19:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
	addb	$48, %dl
	movb	%dl, -1(%r10)
	decq	%r10
	cmpl	%ecx, %r9d
	movl	%eax, %r9d
	jae	.LBB37_19
.LBB37_22:
	subq	%r10, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB37_24
# %bb.23:
	movq	%rdi, %rcx
	movq	%r10, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB37_24:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
.LBB37_25:
	movq	%rsi, %rax
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB37_2:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB37_25
.LBB37_8:
	movq	%rbx, %r10
	movl	%r9d, %eax
	.p2align	4, 0x90
.LBB37_9:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$1, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrl	%eax
	cmpl	$2, %r9d
	movl	%eax, %r9d
	jae	.LBB37_9
	jmp	.LBB37_22
.LBB37_10:
	movq	%rbx, %r10
	movl	%r9d, %eax
	.p2align	4, 0x90
.LBB37_11:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$3, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrl	$2, %eax
	cmpl	$4, %r9d
	movl	%eax, %r9d
	jae	.LBB37_11
	jmp	.LBB37_22
.LBB37_12:
	movq	%rbx, %r10
	movl	%r9d, %eax
	.p2align	4, 0x90
.LBB37_13:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$7, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrl	$3, %eax
	cmpl	$8, %r9d
	movl	%eax, %r9d
	jae	.LBB37_13
	jmp	.LBB37_22
.LBB37_6:
	movl	$3435973837, %eax               # imm = 0xCCCCCCCD
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB37_7:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	imulq	%rax, %rcx
	shrq	$35, %rcx
	leal	(%rcx,%rcx), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%r9d, %r11d
	subl	%edx, %r11d
	orb	$48, %r11b
	movb	%r11b, -1(%r10)
	decq	%r10
	cmpl	$10, %r9d
	movl	%ecx, %r9d
	jae	.LBB37_7
	jmp	.LBB37_22
.LBB37_20:
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB37_21:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r11
	movzbl	(%rdx,%r11), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	cmpl	%ecx, %r9d
	movl	%eax, %r9d
	jae	.LBB37_21
	jmp	.LBB37_22
.LBB37_14:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB37_15:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andl	$15, %ecx
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, -1(%r10)
	decq	%r10
	movl	%r9d, %ecx
	shrl	$4, %ecx
	cmpl	$16, %r9d
	movl	%ecx, %r9d
	jae	.LBB37_15
	jmp	.LBB37_22
.LBB37_16:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB37_17:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andl	$31, %ecx
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, -1(%r10)
	decq	%r10
	movl	%r9d, %ecx
	shrl	$5, %ecx
	cmpl	$32, %r9d
	movl	%ecx, %r9d
	jae	.LBB37_17
	jmp	.LBB37_22
	.p2align	2, 0x90
.LJTI37_0:
	.long	.LBB37_8-.LJTI37_0
	.long	.LBB37_18-.LJTI37_0
	.long	.LBB37_10-.LJTI37_0
	.long	.LBB37_18-.LJTI37_0
	.long	.LBB37_18-.LJTI37_0
	.long	.LBB37_18-.LJTI37_0
	.long	.LBB37_12-.LJTI37_0
	.long	.LBB37_18-.LJTI37_0
	.long	.LBB37_6-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_14-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_20-.LJTI37_0
	.long	.LBB37_16-.LJTI37_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z"
	.globl	"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z" # -- Begin function ??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z": # @"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z"
.seh_proc "??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	.seh_endprologue
	movl	%r9d, %r10d
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	128(%rsp), %ecx
	leaq	64(%rsp), %rbx
	leal	-2(%rcx), %eax
	cmpl	$30, %eax
	ja	.LBB38_16
# %bb.1:
	leaq	.LJTI38_0(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB38_14:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB38_15:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %eax
	xorl	%edx, %edx
	divl	%ecx
	addb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	cmpl	%ecx, %r10d
	movl	%eax, %r10d
	jae	.LBB38_15
.LBB38_18:
	subq	%r9, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB38_20
# %bb.19:
	movq	%rdi, %rcx
	movq	%r9, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB38_20:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
	movq	%rsi, %rax
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB38_4:
	movq	%rbx, %r9
	movl	%r10d, %eax
	.p2align	4, 0x90
.LBB38_5:                               # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	andb	$1, %cl
	orb	$48, %cl
	movb	%cl, -1(%r9)
	decq	%r9
	shrl	%eax
	cmpl	$2, %r10d
	movl	%eax, %r10d
	jae	.LBB38_5
	jmp	.LBB38_18
.LBB38_6:
	movq	%rbx, %r9
	movl	%r10d, %eax
	.p2align	4, 0x90
.LBB38_7:                               # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	andb	$3, %cl
	orb	$48, %cl
	movb	%cl, -1(%r9)
	decq	%r9
	shrl	$2, %eax
	cmpl	$4, %r10d
	movl	%eax, %r10d
	jae	.LBB38_7
	jmp	.LBB38_18
.LBB38_8:
	movq	%rbx, %r9
	movl	%r10d, %eax
	.p2align	4, 0x90
.LBB38_9:                               # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	andb	$7, %cl
	orb	$48, %cl
	movb	%cl, -1(%r9)
	decq	%r9
	shrl	$3, %eax
	cmpl	$8, %r10d
	movl	%eax, %r10d
	jae	.LBB38_9
	jmp	.LBB38_18
.LBB38_2:
	movl	$3435973837, %eax               # imm = 0xCCCCCCCD
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB38_3:                               # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	imulq	%rax, %rcx
	shrq	$35, %rcx
	leal	(%rcx,%rcx), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%r10d, %r11d
	subl	%edx, %r11d
	orb	$48, %r11b
	movb	%r11b, -1(%r9)
	decq	%r9
	cmpl	$10, %r10d
	movl	%ecx, %r10d
	jae	.LBB38_3
	jmp	.LBB38_18
.LBB38_16:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB38_17:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r11
	movzbl	(%rdx,%r11), %edx
	movb	%dl, -1(%r9)
	decq	%r9
	cmpl	%ecx, %r10d
	movl	%eax, %r10d
	jae	.LBB38_17
	jmp	.LBB38_18
.LBB38_10:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB38_11:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	andl	$15, %ecx
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, -1(%r9)
	decq	%r9
	movl	%r10d, %ecx
	shrl	$4, %ecx
	cmpl	$16, %r10d
	movl	%ecx, %r10d
	jae	.LBB38_11
	jmp	.LBB38_18
.LBB38_12:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB38_13:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %ecx
	andl	$31, %ecx
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, -1(%r9)
	decq	%r9
	movl	%r10d, %ecx
	shrl	$5, %ecx
	cmpl	$32, %r10d
	movl	%ecx, %r10d
	jae	.LBB38_13
	jmp	.LBB38_18
	.p2align	2, 0x90
.LJTI38_0:
	.long	.LBB38_4-.LJTI38_0
	.long	.LBB38_14-.LJTI38_0
	.long	.LBB38_6-.LJTI38_0
	.long	.LBB38_14-.LJTI38_0
	.long	.LBB38_14-.LJTI38_0
	.long	.LBB38_14-.LJTI38_0
	.long	.LBB38_8-.LJTI38_0
	.long	.LBB38_14-.LJTI38_0
	.long	.LBB38_2-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_10-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_16-.LJTI38_0
	.long	.LBB38_12-.LJTI38_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z"
	.globl	"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z" # -- Begin function ??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z": # @"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z"
.seh_proc "??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	.seh_endprologue
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	testq	%r9, %r9
	jns	.LBB39_4
# %bb.1:
	cmpq	%r8, %rdi
	je	.LBB39_2
# %bb.3:
	movb	$45, (%rdi)
	incq	%rdi
	negq	%r9
.LBB39_4:
	movl	176(%rsp), %ecx
	leaq	96(%rsp), %rbx
	leal	-2(%rcx), %eax
	cmpl	$30, %eax
	ja	.LBB39_23
# %bb.5:
	leaq	.LJTI39_0(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB39_18:
	movl	%ecx, %r11d
	movq	%rbx, %r10
	jmp	.LBB39_19
	.p2align	4, 0x90
.LBB39_21:                              #   in Loop: Header=BB39_19 Depth=1
	movq	%r9, %rax
	xorl	%edx, %edx
	divq	%r11
.LBB39_22:                              #   in Loop: Header=BB39_19 Depth=1
	addb	$48, %dl
	movb	%dl, -1(%r10)
	decq	%r10
	cmpq	%r11, %r9
	movq	%rax, %r9
	jb	.LBB39_28
.LBB39_19:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	shrq	$32, %rax
	jne	.LBB39_21
# %bb.20:                               #   in Loop: Header=BB39_19 Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
                                        # kill: def $eax killed $eax def $rax
	jmp	.LBB39_22
.LBB39_2:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB39_31
.LBB39_8:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB39_9:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$1, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	%rax
	cmpq	$2, %r9
	movq	%rax, %r9
	jae	.LBB39_9
	jmp	.LBB39_28
.LBB39_10:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB39_11:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$3, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	$2, %rax
	cmpq	$4, %r9
	movq	%rax, %r9
	jae	.LBB39_11
	jmp	.LBB39_28
.LBB39_12:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB39_13:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$7, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	$3, %rax
	cmpq	$8, %r9
	movq	%rax, %r9
	jae	.LBB39_13
	jmp	.LBB39_28
.LBB39_6:
	movabsq	$-3689348814741910323, %rcx     # imm = 0xCCCCCCCCCCCCCCCD
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB39_7:                               # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	mulq	%rcx
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	movl	%r9d, %r11d
	subl	%eax, %r11d
	orb	$48, %r11b
	movb	%r11b, -1(%r10)
	decq	%r10
	cmpq	$10, %r9
	movq	%rdx, %r9
	jae	.LBB39_7
	jmp	.LBB39_28
.LBB39_23:
	movslq	%ecx, %r11
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r14
	movq	%rbx, %r10
	jmp	.LBB39_24
	.p2align	4, 0x90
.LBB39_26:                              #   in Loop: Header=BB39_24 Depth=1
	movq	%r9, %rax
	xorl	%edx, %edx
	divq	%r11
.LBB39_27:                              #   in Loop: Header=BB39_24 Depth=1
	movzbl	(%rdx,%r14), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	cmpq	%r11, %r9
	movq	%rax, %r9
	jb	.LBB39_28
.LBB39_24:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	jne	.LBB39_26
# %bb.25:                               #   in Loop: Header=BB39_24 Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
                                        # kill: def $eax killed $eax def $rax
	jmp	.LBB39_27
.LBB39_14:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	movq	%r9, %rcx
	.p2align	4, 0x90
.LBB39_15:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rax), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	shrq	$4, %rcx
	cmpq	$16, %r9
	movq	%rcx, %r9
	jae	.LBB39_15
	jmp	.LBB39_28
.LBB39_16:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	movq	%r9, %rcx
	.p2align	4, 0x90
.LBB39_17:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %edx
	andl	$31, %edx
	movzbl	(%rdx,%rax), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	shrq	$5, %rcx
	cmpq	$32, %r9
	movq	%rcx, %r9
	jae	.LBB39_17
.LBB39_28:
	subq	%r10, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB39_30
# %bb.29:
	movq	%rdi, %rcx
	movq	%r10, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB39_30:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
.LBB39_31:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
	.p2align	2, 0x90
.LJTI39_0:
	.long	.LBB39_8-.LJTI39_0
	.long	.LBB39_18-.LJTI39_0
	.long	.LBB39_10-.LJTI39_0
	.long	.LBB39_18-.LJTI39_0
	.long	.LBB39_18-.LJTI39_0
	.long	.LBB39_18-.LJTI39_0
	.long	.LBB39_12-.LJTI39_0
	.long	.LBB39_18-.LJTI39_0
	.long	.LBB39_6-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_14-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_23-.LJTI39_0
	.long	.LBB39_16-.LJTI39_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z"
	.globl	"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z" # -- Begin function ??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z": # @"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z"
.seh_proc "??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	.seh_endprologue
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	176(%rsp), %ecx
	leaq	96(%rsp), %rbx
	leal	-2(%rcx), %eax
	cmpl	$30, %eax
	ja	.LBB40_19
# %bb.1:
	leaq	.LJTI40_0(%rip), %rdx
	movslq	(%rdx,%rax,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB40_14:
	movl	%ecx, %r11d
	movq	%rbx, %r10
	jmp	.LBB40_15
	.p2align	4, 0x90
.LBB40_17:                              #   in Loop: Header=BB40_15 Depth=1
	movq	%r9, %rax
	xorl	%edx, %edx
	divq	%r11
.LBB40_18:                              #   in Loop: Header=BB40_15 Depth=1
	addb	$48, %dl
	movb	%dl, -1(%r10)
	decq	%r10
	cmpq	%r11, %r9
	movq	%rax, %r9
	jb	.LBB40_24
.LBB40_15:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	shrq	$32, %rax
	jne	.LBB40_17
# %bb.16:                               #   in Loop: Header=BB40_15 Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
                                        # kill: def $eax killed $eax def $rax
	jmp	.LBB40_18
.LBB40_4:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB40_5:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$1, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	%rax
	cmpq	$2, %r9
	movq	%rax, %r9
	jae	.LBB40_5
	jmp	.LBB40_24
.LBB40_6:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB40_7:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$3, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	$2, %rax
	cmpq	$4, %r9
	movq	%rax, %r9
	jae	.LBB40_7
	jmp	.LBB40_24
.LBB40_8:
	movq	%rbx, %r10
	movq	%r9, %rax
	.p2align	4, 0x90
.LBB40_9:                               # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ecx
	andb	$7, %cl
	orb	$48, %cl
	movb	%cl, -1(%r10)
	decq	%r10
	shrq	$3, %rax
	cmpq	$8, %r9
	movq	%rax, %r9
	jae	.LBB40_9
	jmp	.LBB40_24
.LBB40_2:
	movabsq	$-3689348814741910323, %rcx     # imm = 0xCCCCCCCCCCCCCCCD
	movq	%rbx, %r10
	.p2align	4, 0x90
.LBB40_3:                               # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	mulq	%rcx
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	movl	%r9d, %r11d
	subl	%eax, %r11d
	orb	$48, %r11b
	movb	%r11b, -1(%r10)
	decq	%r10
	cmpq	$10, %r9
	movq	%rdx, %r9
	jae	.LBB40_3
	jmp	.LBB40_24
.LBB40_19:
	movslq	%ecx, %r11
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r14
	movq	%rbx, %r10
	jmp	.LBB40_20
	.p2align	4, 0x90
.LBB40_22:                              #   in Loop: Header=BB40_20 Depth=1
	movq	%r9, %rax
	xorl	%edx, %edx
	divq	%r11
.LBB40_23:                              #   in Loop: Header=BB40_20 Depth=1
	movzbl	(%rdx,%r14), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	cmpq	%r11, %r9
	movq	%rax, %r9
	jb	.LBB40_24
.LBB40_20:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	jne	.LBB40_22
# %bb.21:                               #   in Loop: Header=BB40_20 Depth=1
	movl	%r9d, %eax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $edx killed $edx def $rdx
                                        # kill: def $eax killed $eax def $rax
	jmp	.LBB40_23
.LBB40_10:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	movq	%r9, %rcx
	.p2align	4, 0x90
.LBB40_11:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rax), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	shrq	$4, %rcx
	cmpq	$16, %r9
	movq	%rcx, %r9
	jae	.LBB40_11
	jmp	.LBB40_24
.LBB40_12:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%rbx, %r10
	movq	%r9, %rcx
	.p2align	4, 0x90
.LBB40_13:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %edx
	andl	$31, %edx
	movzbl	(%rdx,%rax), %edx
	movb	%dl, -1(%r10)
	decq	%r10
	shrq	$5, %rcx
	cmpq	$32, %r9
	movq	%rcx, %r9
	jae	.LBB40_13
.LBB40_24:
	subq	%r10, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB40_26
# %bb.25:
	movq	%rdi, %rcx
	movq	%r10, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB40_26:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
	.p2align	2, 0x90
.LJTI40_0:
	.long	.LBB40_4-.LJTI40_0
	.long	.LBB40_14-.LJTI40_0
	.long	.LBB40_6-.LJTI40_0
	.long	.LBB40_14-.LJTI40_0
	.long	.LBB40_14-.LJTI40_0
	.long	.LBB40_14-.LJTI40_0
	.long	.LBB40_8-.LJTI40_0
	.long	.LBB40_14-.LJTI40_0
	.long	.LBB40_2-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_10-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_19-.LJTI40_0
	.long	.LBB40_12-.LJTI40_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
.Lfunc_begin21:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$136, %rsp
	.seh_stackalloc 136
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	movaps	%xmm6, -16(%rbp)                # 16-byte Spill
	.seh_savexmm %xmm6, 112
	.seh_endprologue
	movq	$-2, -24(%rbp)
	movdqa	%xmm2, %xmm6
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movd	%xmm2, -48(%rbp)
.Ltmp72:
	leaq	-48(%rbp), %rbx
	movq	%rbx, %rcx
	callq	_fdtest
.Ltmp73:
# %bb.1:
	cmpw	$2, %ax
	jne	.LBB41_6
# %bb.2:
.Ltmp74:
	movdqa	%xmm6, %xmm0
	callq	_fdsign
.Ltmp75:
# %bb.3:
	leaq	-48(%rbp), %rcx
	movq	%rcx, %r14
	testl	%eax, %eax
	je	.LBB41_5
# %bb.4:
	leaq	-47(%rbp), %r14
	movb	$45, -48(%rbp)
.LBB41_5:
	movb	$110, 2(%r14)
	movw	$24942, (%r14)                  # imm = 0x616E
	addq	$3, %r14
	cmpq	%rcx, %r14
	jne	.LBB41_23
.LBB41_6:
	movd	%xmm6, %eax
	testl	%eax, %eax
	js	.LBB41_8
# %bb.7:
	leaq	-48(%rbp), %r15
	movl	%eax, %ecx
	jmp	.LBB41_9
.LBB41_8:
	leaq	-47(%rbp), %r15
	movb	$45, -48(%rbp)
	movl	%eax, %ecx
	andl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	movd	%ecx, %xmm6
.LBB41_9:
	leaq	-24(%rbp), %r14
	movl	%ecx, %edx
	notl	%edx
	testl	$2139095040, %edx               # imm = 0x7F800000
	jne	.LBB41_18
# %bb.10:
	movl	%ecx, %edx
	andl	$8388607, %edx                  # imm = 0x7FFFFF
	je	.LBB41_11
# %bb.12:
	testl	%eax, %eax
	jns	.LBB41_15
# %bb.13:
	cmpl	$4194304, %edx                  # imm = 0x400000
	jne	.LBB41_15
# %bb.14:
	movl	$8, %r12d
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	movq	%r14, %rax
	subq	%r15, %rax
	cmpq	%r12, %rax
	jge	.LBB41_17
	jmp	.LBB41_24
.LBB41_18:
	movd	%xmm6, %r12d
	testl	%r12d, %r12d
	je	.LBB41_19
# %bb.20:
	movl	%r12d, %r13d
	andl	$8388607, %r13d                 # imm = 0x7FFFFF
	shrl	$23, %r12d
.Ltmp76:
	movl	%r13d, %ecx
	movl	%r12d, %edx
	callq	"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
.Ltmp77:
# %bb.21:
.Ltmp78:
	movl	%r12d, 48(%rsp)
	movl	%r13d, 40(%rsp)
	movl	$0, 32(%rsp)
	leaq	-64(%rbp), %rcx
	movq	%r15, %rdx
	movq	%r14, %r8
	movq	%rax, %r9
	callq	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z"
.Ltmp79:
# %bb.22:
	movq	-64(%rbp), %r14
	jmp	.LBB41_23
.LBB41_11:
	movl	$3, %r12d
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	movq	%r14, %rax
	subq	%r15, %rax
	cmpq	%r12, %rax
	jge	.LBB41_17
	jmp	.LBB41_24
.LBB41_19:
	movb	$48, (%r15)
	incq	%r15
	movq	%r15, %r14
	jmp	.LBB41_23
.LBB41_15:
	testl	$4194304, %ecx                  # imm = 0x400000
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmoveq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %r12d
	cmoveq	%rax, %r12
	movq	%r14, %rax
	subq	%r15, %rax
	cmpq	%r12, %rax
	jl	.LBB41_24
.LBB41_17:
	movq	%r15, %rcx
	movq	%r12, %r8
	callq	memcpy
	addq	%r12, %r15
	movq	%r15, %r14
	jmp	.LBB41_23
.LBB41_23:
	cmpq	%r14, %rbx
	je	.LBB41_27
.LBB41_24:
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB41_26
# %bb.25:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB41_26:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
	jmp	.LBB41_23
.LBB41_27:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	movaps	-16(%rbp), %xmm6                # 16-byte Reload
	addq	$136, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.seh_endproc
	.def	"?dtor$28@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$28@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA":
.seh_proc "?dtor$28@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"
.LBB41_28:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.seh_endproc
	.def	"?dtor$29@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$29@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA":
.seh_proc "?dtor$29@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"
.LBB41_29:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.seh_endproc
	.def	"?dtor$30@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$30@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA":
.seh_proc "?dtor$30@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"
.LBB41_30:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end21:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z":
	.long	429065506                       # MagicNumber
	.long	3                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z")@IMGREL # IPToStateXData
	.long	104                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z":
	.long	-1                              # ToState
	.long	"?dtor$28@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$29@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$30@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z":
	.long	.Lfunc_begin21@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp72@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp74@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp76@IMGREL+1                # IP
	.long	2                               # ToState
	.long	.Ltmp79@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@M@Z"
                                        # -- End function
	.def	"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z"
	.globl	"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z" # -- Begin function ??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z
	.p2align	4, 0x90
"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z": # @"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z"
.seh_proc "??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	144(%rsp), %r15d
	movd	%xmm3, %eax
	testl	%eax, %eax
	je	.LBB42_1
# %bb.8:
	movl	%eax, %ebp
	andl	$8388607, %ebp                  # imm = 0x7FFFFF
	movl	%eax, %r14d
	shrl	$23, %r14d
	cmpl	$2, %r15d
	jne	.LBB42_9
# %bb.11:
	cmpl	$1266679808, %eax               # imm = 0x4B800000
	jae	.LBB42_12
# %bb.14:
	movl	%ebp, %ecx
	movl	%r14d, %edx
	callq	"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
	movl	%r14d, 48(%rsp)
	movl	%ebp, 40(%rsp)
	movl	$2, 32(%rsp)
	jmp	.LBB42_10
.LBB42_1:
	cmpl	$1, %r15d
	jne	.LBB42_5
# %bb.2:
	movq	%rbx, %rax
	subq	%rdi, %rax
	cmpq	$4, %rax
	jle	.LBB42_3
# %bb.4:
	movb	$48, 4(%rdi)
	movl	$808150320, (%rdi)              # imm = 0x302B6530
	addq	$5, %rdi
	jmp	.LBB42_7
.LBB42_9:
	movl	%ebp, %ecx
	movl	%r14d, %edx
	callq	"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
	movl	%r14d, 48(%rsp)
	movl	%ebp, 40(%rsp)
	movl	%r15d, 32(%rsp)
.LBB42_10:
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	movq	%rax, %r9
	callq	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z"
	jmp	.LBB42_13
.LBB42_5:
	cmpq	%rdi, %rbx
	je	.LBB42_3
# %bb.6:
	movb	$48, (%rdi)
	incq	%rdi
.LBB42_7:
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB42_13
.LBB42_12:
	addl	$-150, %r14d
	orl	$8388608, %ebp                  # imm = 0x800000
	movl	%r14d, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	movl	%ebp, %r9d
	callq	"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z"
	jmp	.LBB42_13
.LBB42_3:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
.LBB42_13:
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z"
	.globl	"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z" # -- Begin function ??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z
	.p2align	4, 0x90
"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z": # @"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z"
.seh_proc "??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%rdx, %r11
	movq	%rcx, 24(%rsp)                  # 8-byte Spill
	movl	160(%rsp), %ecx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	leal	55(%rcx), %esi
	shrl	$5, %esi
	leal	-1(%rsi), %edi
	andl	$31, %ecx
	movl	%r9d, %eax
	shll	%cl, %eax
	cmpl	$9, %ecx
	jb	.LBB43_2
# %bb.1:
	leal	-2(%rsi), %edx
	movl	%eax, (%rsp,%rdx,4)
	negb	%cl
                                        # kill: def $cl killed $cl killed $rcx
	shrl	%cl, %r9d
	movl	%r9d, %eax
.LBB43_2:
	movl	%edi, %ecx
	movl	%eax, (%rsp,%rcx,4)
	testl	%edi, %edi
	je	.LBB43_3
# %bb.4:
	addl	$-2, %esi
	xorl	%r9d, %r9d
	movabsq	$19342813113834067, %rbx        # imm = 0x44B82FA09B5A53
	xorl	%ecx, %ecx
	jmp	.LBB43_5
	.p2align	4, 0x90
.LBB43_13:                              #   in Loop: Header=BB43_5 Depth=1
	incl	%r9d
	decl	%edi
	je	.LBB43_14
.LBB43_5:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB43_6 Depth 2
                                        #       Child Loop BB43_11 Depth 3
	movl	%edi, %r14d
	leal	-1(%rdi), %r15d
	jmp	.LBB43_6
	.p2align	4, 0x90
.LBB43_12:                              #   in Loop: Header=BB43_6 Depth=2
	movl	%eax, 32(%rsp,%rcx,4)
	incq	%rcx
	cmpl	$999999999, %ebp                # imm = 0x3B9AC9FF
	jbe	.LBB43_13
.LBB43_6:                               #   Parent Loop BB43_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB43_11 Depth 3
	movl	(%rsp,%r14,4), %ebp
	movl	%ebp, %eax
	shrl	$9, %eax
	imulq	$281475, %rax, %rdx             # imm = 0x44B83
	shrq	$39, %rdx
	imull	$1000000000, %edx, %r12d        # imm = 0x3B9ACA00
	movl	%ebp, %eax
	subl	%r12d, %eax
	movl	%edx, (%rsp,%r14,4)
	testb	$1, %dil
	jne	.LBB43_8
# %bb.7:                                #   in Loop: Header=BB43_6 Depth=2
	movl	%edi, %r12d
	cmpl	%r9d, %esi
	je	.LBB43_12
	jmp	.LBB43_10
	.p2align	4, 0x90
.LBB43_8:                               #   in Loop: Header=BB43_6 Depth=2
	shlq	$32, %rax
	movl	(%rsp,%r15,4), %r12d
	orq	%r12, %rax
	shrq	$9, %rax
	mulq	%rbx
	shrq	$11, %rdx
	imull	$-1000000000, %edx, %eax        # imm = 0xC4653600
	addl	%r12d, %eax
	movl	%edx, (%rsp,%r15,4)
	movl	%r15d, %r12d
	cmpl	%r9d, %esi
	je	.LBB43_12
.LBB43_10:                              #   in Loop: Header=BB43_6 Depth=2
	decl	%r12d
	.p2align	4, 0x90
.LBB43_11:                              #   Parent Loop BB43_5 Depth=1
                                        #     Parent Loop BB43_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	shlq	$32, %rax
	movl	%r12d, %r13d
	movl	(%rsp,%r13,4), %r10d
	orq	%r10, %rax
	shrq	$9, %rax
	mulq	%rbx
	shrq	$11, %rdx
	imull	$-1000000000, %edx, %eax        # imm = 0xC4653600
	addl	%r10d, %eax
	movl	%edx, (%rsp,%r13,4)
	leal	-1(%r12), %r10d
	shlq	$32, %rax
	movl	(%rsp,%r10,4), %r13d
	orq	%r13, %rax
	shrq	$9, %rax
	mulq	%rbx
	shrq	$11, %rdx
	imull	$-1000000000, %edx, %eax        # imm = 0xC4653600
	addl	%r13d, %eax
	movl	%edx, (%rsp,%r10,4)
	addl	$-2, %r12d
	cmpl	$-1, %r12d
	jne	.LBB43_11
	jmp	.LBB43_12
.LBB43_3:
	xorl	%ecx, %ecx
.LBB43_14:
	movl	(%rsp), %eax
	movl	$10, %r9d
	cmpl	$999999999, %eax                # imm = 0x3B9AC9FF
	ja	.LBB43_23
# %bb.15:
	movl	$9, %r9d
	cmpl	$99999999, %eax                 # imm = 0x5F5E0FF
	ja	.LBB43_23
# %bb.16:
	movl	$8, %r9d
	cmpl	$9999999, %eax                  # imm = 0x98967F
	ja	.LBB43_23
# %bb.17:
	movl	$7, %r9d
	cmpl	$999999, %eax                   # imm = 0xF423F
	ja	.LBB43_23
# %bb.18:
	movl	$6, %r9d
	cmpl	$99999, %eax                    # imm = 0x1869F
	ja	.LBB43_23
# %bb.19:
	movl	$5, %r9d
	cmpl	$9999, %eax                     # imm = 0x270F
	ja	.LBB43_23
# %bb.20:
	movl	$4, %r9d
	cmpl	$999, %eax                      # imm = 0x3E7
	ja	.LBB43_23
# %bb.21:
	movl	$3, %r9d
	cmpl	$99, %eax
	ja	.LBB43_23
# %bb.22:
	cmpl	$10, %eax
	movl	$1, %r9d
	sbbl	$-1, %r9d
.LBB43_23:
	leal	(%rcx,%rcx,8), %r10d
	addl	%r9d, %r10d
	movq	%r8, %rsi
	subq	%r11, %rsi
	movl	$132, %edx
	cmpq	%r10, %rsi
	jl	.LBB43_40
# %bb.24:
	xorl	%r8d, %r8d
	movl	%r9d, %edx
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB43_25
# %bb.26:
	leaq	(%r11,%rdx), %rsi
	xorl	%r8d, %r8d
	movl	$3518437209, %edi               # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rbx
	.p2align	4, 0x90
.LBB43_27:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %r9d
	imulq	%rdi, %r9
	shrq	$45, %r9
	imull	$-10000, %r9d, %r10d            # imm = 0xD8F0
	addl	%eax, %r10d
	imulq	$1374389535, %r10, %r14         # imm = 0x51EB851F
	shrq	$37, %r14
	imull	$100, %r14d, %ebp
	subl	%ebp, %r10d
	movl	%r8d, %r15d
	movq	%rsi, %r12
	subq	%r15, %r12
	movzwl	(%rbx,%r10,2), %r10d
	movw	%r10w, -2(%r12)
	movzwl	(%rbx,%r14,2), %r10d
	movw	%r10w, -4(%r12)
	addl	$4, %r8d
	cmpl	$99999999, %eax                 # imm = 0x5F5E0FF
	movl	%r9d, %eax
	ja	.LBB43_27
# %bb.28:
	cmpl	$100, %r9d
	jb	.LBB43_30
.LBB43_29:
	movzwl	%r9w, %eax
	shrl	$2, %eax
	imull	$5243, %eax, %eax               # imm = 0x147B
	shrl	$17, %eax
	imull	$100, %eax, %r10d
	subl	%r10d, %r9d
	movzwl	%r9w, %r9d
	leaq	(%r11,%rdx), %r10
	movl	%r8d, %esi
	subq	%rsi, %r10
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rsi
	movzwl	(%rsi,%r9,2), %r9d
	movw	%r9w, -2(%r10)
	orl	$2, %r8d
	movl	%eax, %r9d
.LBB43_30:
	cmpl	$10, %r9d
	jb	.LBB43_32
# %bb.31:
	movl	%r9d, %eax
	leaq	(%r11,%rdx), %r9
	movl	%r8d, %r8d
	subq	%r8, %r9
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r8
	movzwl	(%r8,%rax,2), %eax
	movw	%ax, -2(%r9)
	addq	%rdx, %r11
	xorl	%edx, %edx
	testl	%ecx, %ecx
	jg	.LBB43_34
	jmp	.LBB43_39
.LBB43_25:
	movl	%eax, %r9d
	cmpl	$100, %r9d
	jae	.LBB43_29
	jmp	.LBB43_30
.LBB43_32:
	addb	$48, %r9b
	movb	%r9b, (%r11)
	addq	%rdx, %r11
	xorl	%edx, %edx
	testl	%ecx, %ecx
	jle	.LBB43_39
.LBB43_34:
	movl	%ecx, %eax
	incq	%rax
	movabsq	$3472328296227680304, %rcx      # imm = 0x3030303030303030
	movl	$3518437209, %r8d               # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r9
	jmp	.LBB43_35
	.p2align	4, 0x90
.LBB43_37:                              #   in Loop: Header=BB43_35 Depth=1
	movq	%rcx, (%r11)
	movb	$48, 8(%r11)
	addq	$9, %r11
	decq	%rax
	cmpq	$1, %rax
	jbe	.LBB43_39
.LBB43_35:                              # =>This Inner Loop Header: Depth=1
	leal	-2(%rax), %r10d
	movl	32(%rsp,%r10,4), %esi
	testl	%esi, %esi
	je	.LBB43_37
# %bb.36:                               #   in Loop: Header=BB43_35 Depth=1
	movl	%esi, %r10d
	imulq	$1441151881, %r10, %rdi         # imm = 0x55E63B89
	imulq	%r8, %r10
	shrq	$45, %r10
	imull	$-10000, %r10d, %ebx            # imm = 0xD8F0
	addl	%esi, %ebx
	imulq	$1374389535, %rbx, %rsi         # imm = 0x51EB851F
	shrq	$37, %rsi
	imull	$100, %esi, %ebp
	subl	%ebp, %ebx
	movzwl	(%r9,%rbx,2), %ebx
	movw	%bx, 7(%r11)
	movzwl	(%r9,%rsi,2), %esi
	movw	%si, 5(%r11)
	shrq	$57, %rdi
	imull	$-10000, %edi, %esi             # imm = 0xD8F0
	addl	%r10d, %esi
	imulq	$1374389535, %rsi, %r10         # imm = 0x51EB851F
	shrq	$37, %r10
	imull	$100, %r10d, %ebx
	subl	%ebx, %esi
	movzwl	(%r9,%rsi,2), %esi
	movw	%si, 3(%r11)
	movzwl	(%r9,%r10,2), %r10d
	movw	%r10w, 1(%r11)
	addb	$48, %dil
	movb	%dil, (%r11)
	addq	$9, %r11
	decq	%rax
	cmpq	$1, %rax
	ja	.LBB43_35
.LBB43_39:
	movq	%r11, %r8
.LBB43_40:
	movq	24(%rsp), %rax                  # 8-byte Reload
	movq	%r8, (%rax)
	movl	%edx, 8(%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
	.globl	"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z" # -- Begin function ?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z
	.p2align	4, 0x90
"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z": # @"?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
.seh_proc "?__f2d@std@@YA?AU__floating_decimal_32@1@II@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	.seh_endprologue
                                        # kill: def $edx killed $edx def $rdx
	leal	-152(%rdx), %eax
	movl	%ecx, %r8d
	orl	$8388608, %r8d                  # imm = 0x800000
	testl	%edx, %edx
	cmovel	%ecx, %r8d
	movl	$-151, %r11d
	cmovnel	%eax, %r11d
	leal	(,%r8,4), %r14d
	leal	2(,%r8,4), %r15d
	testl	%ecx, %ecx
	setne	%al
	cmpl	$2, %edx
	setb	%sil
	orb	%al, %sil
	movzbl	%sil, %eax
	notl	%eax
	leal	(%rax,%r8,4), %r13d
	movl	%r14d, %r12d
	movl	%r15d, %ebp
	movl	%r13d, %r10d
	testl	%r11d, %r11d
	js	.LBB44_3
# %bb.1:
	imull	$78913, %r11d, %esi             # imm = 0x13441
	movl	%esi, %ebx
	shrl	$18, %ebx
	imull	$1217359, %ebx, %ecx            # imm = 0x12934F
	shrl	$19, %ecx
	movl	%ebx, %eax
	subl	%r11d, %eax
	leaq	"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB"(%rip), %rdx
	movq	(%rdx,%rbx,8), %r11
	movl	%r11d, %r9d
	shrq	$32, %r11
	movq	%r9, %rdx
	imulq	%r12, %rdx
	movq	%r11, %rdi
	imulq	%r12, %rdi
	shrq	$32, %rdx
	addq	%rdi, %rdx
	addl	%eax, %ecx
	addb	$27, %cl
	shrq	%cl, %rdx
	movq	%r9, %rdi
	imulq	%rbp, %rdi
	imulq	%r11, %rbp
	shrq	$32, %rdi
	addq	%rbp, %rdi
	shrq	%cl, %rdi
	imulq	%r10, %r9
	imulq	%r10, %r11
	shrq	$32, %r9
	addq	%r11, %r9
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %r9
	cmpl	$262144, %esi                   # imm = 0x40000
	jae	.LBB44_5
# %bb.2:
	xorl	%r10d, %r10d
	jmp	.LBB44_12
.LBB44_3:
	imull	$-732923, %r11d, %ebx           # imm = 0xFFF4D105
	movl	%ebx, %eax
	shrl	$20, %eax
	addl	%eax, %r11d
	movl	%r11d, %ecx
	negl	%ecx
	imull	$-1217359, %r11d, %edi          # imm = 0xFFED6CB1
	shrl	$19, %edi
	leaq	"?__FLOAT_POW5_SPLIT@std@@3QB_KB"(%rip), %r15
	movq	(%r15,%rcx,8), %r13
	movl	%r13d, %r9d
	shrq	$32, %r13
	movq	%r9, %rdx
	imulq	%r12, %rdx
	movq	%r13, %rcx
	imulq	%r12, %rcx
	shrq	$32, %rdx
	addq	%rcx, %rdx
	movl	%eax, %ecx
	subl	%edi, %ecx
	addb	$28, %cl
	shrq	%cl, %rdx
	movq	%r9, %rdi
	imulq	%rbp, %rdi
	imulq	%r13, %rbp
	shrq	$32, %rdi
	addq	%rbp, %rdi
	shrq	%cl, %rdi
	imulq	%r10, %r9
	imulq	%r10, %r13
	shrq	$32, %r9
	addq	%r13, %r9
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %r9
	cmpl	$1048576, %ebx                  # imm = 0x100000
	jae	.LBB44_7
# %bb.4:
	xorl	%r10d, %r10d
	jmp	.LBB44_34
.LBB44_5:
	leal	-1(%rdi), %ecx
	movl	$3435973837, %ebp               # imm = 0xCCCCCCCD
	imulq	%rbp, %rcx
	shrq	$35, %rcx
	movl	%r9d, %r10d
	imulq	%rbp, %r10
	shrq	$35, %r10
	cmpl	%r10d, %ecx
	jbe	.LBB44_11
# %bb.6:
	xorl	%r10d, %r10d
	cmpl	$2621439, %esi                  # imm = 0x27FFFF
	jbe	.LBB44_12
	jmp	.LBB44_18
.LBB44_7:
	leal	-1(%rdi), %ecx
	movl	$3435973837, %r13d              # imm = 0xCCCCCCCD
	imulq	%r13, %rcx
	shrq	$35, %rcx
	movl	%r9d, %r10d
	imulq	%r13, %r10
	shrq	$35, %r10
	cmpl	%r10d, %ecx
	jbe	.LBB44_33
# %bb.8:
	xorl	%r10d, %r10d
	cmpl	$2097151, %ebx                  # imm = 0x1FFFFF
	jbe	.LBB44_34
.LBB44_9:
	cmpl	$32505855, %ebx                 # imm = 0x1EFFFFF
	ja	.LBB44_35
# %bb.10:
	decb	%al
	movl	$-1, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	notl	%esi
	testl	%esi, %r14d
	sete	%al
	xorl	%esi, %esi
	movl	%r11d, %ebx
	testb	%al, %al
	je	.LBB44_26
	jmp	.LBB44_37
.LBB44_11:
	leal	-1(%rbx), %ecx
	imull	$1217359, %ecx, %r11d           # imm = 0x12934F
	shrl	$19, %r11d
	leaq	"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB"(%rip), %r10
	movq	(%r10,%rcx,8), %rcx
	movl	%ecx, %r10d
	shrq	$32, %rcx
	imulq	%r12, %r10
	imulq	%r12, %rcx
	shrq	$32, %r10
	addq	%rcx, %r10
	addl	%r11d, %eax
	addb	$26, %al
	movl	%eax, %ecx
	shrq	%cl, %r10
	movl	%r10d, %eax
	imulq	%rbp, %rax
	shrq	$35, %rax
	addl	%eax, %eax
	leal	(%rax,%rax,4), %eax
	subl	%eax, %r10d
	cmpl	$2621439, %esi                  # imm = 0x27FFFF
	ja	.LBB44_18
.LBB44_12:
	imull	$-858993459, %r14d, %eax        # imm = 0xCCCCCCCD
	cmpl	$858993459, %eax                # imm = 0x33333333
	jbe	.LBB44_19
# %bb.13:
	testb	$1, %r8b
	je	.LBB44_22
# %bb.14:
	imull	$-858993459, %r15d, %ecx        # imm = 0xCCCCCCCD
	xorl	%eax, %eax
	cmpl	$858993459, %ecx                # imm = 0x33333333
	ja	.LBB44_17
# %bb.15:
	xorl	%eax, %eax
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB44_16:                              # =>This Inner Loop Header: Depth=1
	movl	%r15d, %r15d
	imulq	%rcx, %r15
	shrq	$34, %r15
	incl	%eax
	imull	$-858993459, %r15d, %r11d       # imm = 0xCCCCCCCD
	cmpl	$858993460, %r11d               # imm = 0x33333334
	jb	.LBB44_16
.LBB44_17:
	cmpl	%ebx, %eax
	adcl	$-1, %edi
.LBB44_18:
	xorl	%eax, %eax
	xorl	%esi, %esi
	testb	%al, %al
	je	.LBB44_26
	jmp	.LBB44_37
.LBB44_19:
	xorl	%eax, %eax
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB44_20:                              # =>This Inner Loop Header: Depth=1
	movl	%r14d, %r14d
	imulq	%rcx, %r14
	shrq	$34, %r14
	incl	%eax
	imull	$-858993459, %r14d, %r11d       # imm = 0xCCCCCCCD
	cmpl	$858993460, %r11d               # imm = 0x33333334
	jb	.LBB44_20
# %bb.21:
	cmpl	%ebx, %eax
	setae	%al
	xorl	%esi, %esi
	testb	%al, %al
	je	.LBB44_26
	jmp	.LBB44_37
.LBB44_22:
	imull	$-858993459, %r13d, %ecx        # imm = 0xCCCCCCCD
	xorl	%eax, %eax
	cmpl	$858993459, %ecx                # imm = 0x33333333
	ja	.LBB44_25
# %bb.23:
	xorl	%eax, %eax
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB44_24:                              # =>This Inner Loop Header: Depth=1
	movl	%r13d, %r13d
	imulq	%rcx, %r13
	shrq	$34, %r13
	incl	%eax
	imull	$-858993459, %r13d, %r11d       # imm = 0xCCCCCCCD
	cmpl	$858993460, %r11d               # imm = 0x33333334
	jb	.LBB44_24
.LBB44_25:
	cmpl	%ebx, %eax
	setae	%sil
	xorl	%eax, %eax
	testb	%al, %al
	je	.LBB44_26
	jmp	.LBB44_37
.LBB44_33:
	movl	$1, %ecx
	subl	%r11d, %ecx
	imull	$1217359, %ecx, %ebp            # imm = 0x12934F
	shrl	$19, %ebp
	movq	(%r15,%rcx,8), %rcx
	movl	%ecx, %r10d
	shrq	$32, %rcx
	imulq	%r12, %r10
	imulq	%r12, %rcx
	shrq	$32, %r10
	addq	%rcx, %r10
	movl	%eax, %ecx
	subl	%ebp, %ecx
	addb	$27, %cl
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %r10
	movl	%r10d, %ecx
	imulq	%r13, %rcx
	shrq	$35, %rcx
	addl	%ecx, %ecx
	leal	(%rcx,%rcx,4), %ecx
	subl	%ecx, %r10d
	cmpl	$2097151, %ebx                  # imm = 0x1FFFFF
	ja	.LBB44_9
.LBB44_34:
	movl	%r8d, %eax
	andl	$1, %eax
	sete	%cl
	andb	%cl, %sil
	subl	%eax, %edi
	movb	$1, %al
	jmp	.LBB44_38
.LBB44_35:
	xorl	%eax, %eax
	xorl	%esi, %esi
	movl	%r11d, %ebx
	testb	%al, %al
	jne	.LBB44_37
.LBB44_26:
	testb	%sil, %sil
	jne	.LBB44_37
# %bb.27:
	movl	%edi, %eax
	movl	$3435973837, %r8d               # imm = 0xCCCCCCCD
	imulq	%r8, %rax
	shrq	$35, %rax
	movl	%r9d, %r11d
	imulq	%r8, %r11
	shrq	$35, %r11
	xorl	%ecx, %ecx
	cmpl	%r11d, %eax
	jbe	.LBB44_31
# %bb.28:
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB44_29:                              # =>This Inner Loop Header: Depth=1
	movl	%edx, %r10d
	movl	%r11d, %r9d
	movl	%edx, %edx
	imulq	%r8, %rdx
	shrq	$35, %rdx
	incl	%ecx
	movl	%eax, %eax
	imulq	%r8, %rax
	shrq	$35, %rax
	movl	%r11d, %r11d
	imulq	%r8, %r11
	shrq	$35, %r11
	cmpl	%r11d, %eax
	ja	.LBB44_29
# %bb.30:
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	subl	%eax, %r10d
.LBB44_31:
	cmpl	%r9d, %edx
	sete	%al
	cmpb	$5, %r10b
	setae	%r10b
	orb	%al, %r10b
	movl	%ebx, %r11d
	jmp	.LBB44_48
.LBB44_37:
	movl	%ebx, %r11d
.LBB44_38:
	movl	%edi, %ebx
	movl	$3435973837, %edi               # imm = 0xCCCCCCCD
	imulq	%rdi, %rbx
	shrq	$35, %rbx
	movl	%r9d, %r14d
	imulq	%rdi, %r14
	shrq	$35, %r14
	xorl	%ecx, %ecx
	cmpl	%r14d, %ebx
	jbe	.LBB44_42
# %bb.39:
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB44_40:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %r15d
	movl	%edx, %ebp
	movl	%r14d, %r9d
	leal	(%r9,%r9), %edx
	leal	(%rdx,%rdx,4), %edx
	cmpl	%r15d, %edx
	sete	%dl
	andb	%dl, %sil
	testb	%r10b, %r10b
	sete	%dl
	andb	%dl, %al
	movl	%ebp, %edx
	imulq	%rdi, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r10d
	leal	(%r10,%r10,4), %r10d
	subl	%r10d, %ebp
	incl	%ecx
	movl	%ebx, %ebx
	imulq	%rdi, %rbx
	shrq	$35, %rbx
	movl	%r14d, %r14d
	imulq	%rdi, %r14
	shrq	$35, %r14
	movl	%ebp, %r10d
	cmpl	%r14d, %ebx
	ja	.LBB44_40
# %bb.41:
	movl	%ebp, %r10d
.LBB44_42:
	xorb	$1, %sil
	jne	.LBB44_47
# %bb.43:
	movl	%r9d, %ebx
	imulq	%rdi, %rbx
	shrq	$35, %rbx
	addl	%ebx, %ebx
	leal	(%rbx,%rbx,4), %edi
	movl	%r9d, %ebx
	subl	%edi, %ebx
	jne	.LBB44_47
# %bb.44:
	movl	$3435973837, %edi               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB44_45:                              # =>This Inner Loop Header: Depth=1
	movl	%edx, %ebx
	testb	%r10b, %r10b
	sete	%dl
	andb	%dl, %al
	movl	%ebx, %edx
	imulq	%rdi, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r10d
	leal	(%r10,%r10,4), %r10d
	subl	%r10d, %ebx
	movl	%r9d, %r9d
	imulq	%rdi, %r9
	shrq	$35, %r9
	incl	%ecx
	imull	$-858993459, %r9d, %ebp         # imm = 0xCCCCCCCD
	rorl	%ebp
	movl	%ebx, %r10d
	cmpl	$429496730, %ebp                # imm = 0x1999999A
	jb	.LBB44_45
# %bb.46:
	movl	%ebx, %r10d
.LBB44_47:
	notb	%al
	cmpb	$5, %r10b
	setne	%bl
	setae	%dil
	movl	%edx, %r10d
	orb	%al, %r10b
	orb	%bl, %r10b
	cmpl	%r9d, %edx
	sete	%al
	orb	%sil, %r8b
	andb	%al, %r8b
	andb	%dil, %r10b
	orb	%r8b, %r10b
.LBB44_48:
	addl	%ecx, %r11d
	movzbl	%r10b, %eax
	addl	%edx, %eax
	shlq	$32, %r11
	orq	%r11, %rax
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z"
	.globl	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z" # -- Begin function ??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z
	.p2align	4, 0x90
"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z": # @"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z"
.seh_proc "??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_32@0@W4chars_format@0@II@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r8, %r10
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	160(%rsp), %ecx
	movq	%r9, %r8
	shrq	$32, %r8
	movl	$9, %edx
	cmpl	$99999999, %r9d                 # imm = 0x5F5E0FF
	ja	.LBB45_8
# %bb.1:
	movl	$8, %edx
	cmpl	$9999999, %r9d                  # imm = 0x98967F
	ja	.LBB45_8
# %bb.2:
	movl	$7, %edx
	cmpl	$999999, %r9d                   # imm = 0xF423F
	ja	.LBB45_8
# %bb.3:
	movl	$6, %edx
	cmpl	$99999, %r9d                    # imm = 0x1869F
	ja	.LBB45_8
# %bb.4:
	movl	$5, %edx
	cmpl	$9999, %r9d                     # imm = 0x270F
	ja	.LBB45_8
# %bb.5:
	movl	$4, %edx
	cmpl	$999, %r9d                      # imm = 0x3E7
	ja	.LBB45_8
# %bb.6:
	movl	$3, %edx
	cmpl	$99, %r9d
	ja	.LBB45_8
# %bb.7:
	cmpl	$10, %r9d
	movl	$1, %edx
	sbbl	$-1, %edx
.LBB45_8:
	leal	(%rdx,%r8), %r13d
	cmpl	$3, %ecx
	je	.LBB45_22
# %bb.9:
	cmpl	$2, %ecx
	je	.LBB45_23
# %bb.10:
	testl	%ecx, %ecx
	jne	.LBB45_13
# %bb.11:
	movl	$-3, %ebx
	movl	$-3, %ebp
	subl	%edx, %ebp
	xorl	%ecx, %ecx
	cmpl	$1, %edx
	sete	%r11b
	cmovel	%ebx, %ebp
	cmpl	%r8d, %ebp
	jg	.LBB45_13
# %bb.12:
	movb	%r11b, %cl
	xorl	$5, %ecx
	cmpl	%r8d, %ecx
	jl	.LBB45_13
.LBB45_23:
	testq	%r9, %r9
	js	.LBB45_26
# %bb.24:
	movl	%r13d, %ecx
	cmpl	$1, %r9d
	jne	.LBB45_29
# %bb.25:
	leaq	"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBEB"(%rip), %rcx
	movzbl	(%r8,%rcx), %r11d
	movl	%r13d, %ecx
	subl	%r11d, %ecx
	jmp	.LBB45_29
.LBB45_22:
	leal	3(%r13), %ecx
	cmpl	$9, %ecx
	jbe	.LBB45_23
.LBB45_13:
	cmpl	$2, %edx
	movl	%edx, %ecx
	sbbl	$-1, %ecx
	addl	$4, %ecx
	movq	%r10, %r11
	subq	%rdi, %r11
	cmpq	%rcx, %r11
	jl	.LBB45_30
# %bb.14:
	xorl	%r10d, %r10d
	movl	%edx, %ebx
	cmpl	$10000, %r9d                    # imm = 0x2710
	jae	.LBB45_15
# %bb.18:
	cmpl	$100, %r9d
	jae	.LBB45_19
.LBB45_20:
	cmpl	$10, %r9d
	jb	.LBB45_53
.LBB45_21:
	movl	%r9d, %eax
	leaq	(%rax,%rax), %r9
	movl	%r9d, %r9d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzbl	1(%r9,%r10), %r9d
	movb	%r9b, 2(%rdi)
	movzbl	(%r10,%rax,2), %r9d
	movb	%r9b, (%rdi)
	movl	$1, %r9d
	cmpl	$2, %edx
	jae	.LBB45_55
	jmp	.LBB45_56
.LBB45_26:
	testl	%r13d, %r13d
	jle	.LBB45_28
# %bb.27:
	leal	1(%rdx), %ecx
	jmp	.LBB45_29
.LBB45_15:
	movq	%r13, 48(%rsp)                  # 8-byte Spill
	movq	%rbx, 40(%rsp)                  # 8-byte Spill
	leaq	(%rdi,%rbx), %r11
	movl	$3518437209, %r14d              # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r15
	.p2align	4, 0x90
.LBB45_16:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %ebp
	movl	%r9d, %r9d
	imulq	%r14, %r9
	shrq	$45, %r9
	imull	$-10000, %r9d, %r12d            # imm = 0xD8F0
	addl	%ebp, %r12d
	imulq	$1374389535, %r12, %r13         # imm = 0x51EB851F
	shrq	$37, %r13
	imull	$100, %r13d, %eax
	subl	%eax, %r12d
	movl	%r10d, %eax
	movq	%r11, %rbx
	subq	%rax, %rbx
	movzwl	(%r15,%r12,2), %eax
	movw	%ax, -1(%rbx)
	movzwl	(%r15,%r13,2), %eax
	movw	%ax, -3(%rbx)
	addl	$4, %r10d
	cmpl	$99999999, %ebp                 # imm = 0x5F5E0FF
	ja	.LBB45_16
# %bb.17:
	movl	%r10d, %r10d
	movq	48(%rsp), %r13                  # 8-byte Reload
	movq	40(%rsp), %rbx                  # 8-byte Reload
	cmpl	$100, %r9d
	jb	.LBB45_20
.LBB45_19:
	movzwl	%r9w, %eax
	shrl	$2, %eax
	imull	$5243, %eax, %eax               # imm = 0x147B
	shrl	$17, %eax
	imull	$100, %eax, %r11d
	subl	%r11d, %r9d
	movzwl	%r9w, %r9d
	addq	%rdi, %rbx
	notq	%r10
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r11
	movzwl	(%r11,%r9,2), %r9d
	movw	%r9w, (%r10,%rbx)
	movl	%eax, %r9d
	cmpl	$10, %r9d
	jae	.LBB45_21
.LBB45_53:
	addb	$48, %r9b
	movb	%r9b, (%rdi)
	movl	$1, %r9d
	cmpl	$2, %edx
	jb	.LBB45_56
.LBB45_55:
	movb	$46, 1(%rdi)
	leal	1(%rdx), %r9d
.LBB45_56:
	leal	1(%r9), %r10d
	movl	%r9d, %eax
	movb	$101, (%rdi,%rax)
	testl	%r13d, %r13d
	jle	.LBB45_57
# %bb.58:
	addl	%r8d, %edx
	decl	%edx
	movb	$43, (%rdi,%r10)
	jmp	.LBB45_59
.LBB45_57:
	movb	$45, (%rdi,%r10)
	movl	$1, %edx
	subl	%r13d, %edx
.LBB45_59:
	addl	$2, %r9d
	movslq	%edx, %rax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rdx
	movzwl	(%rdx,%rax,2), %eax
	movw	%ax, (%rdi,%r9)
	addq	%rdi, %rcx
	movq	%rcx, (%rsi)
	jmp	.LBB45_60
.LBB45_28:
	movl	$2, %ecx
	subl	%r8d, %ecx
.LBB45_29:
	movq	%r10, %r11
	subq	%rdi, %r11
	movl	%ecx, %r14d
	cmpq	%r14, %r11
	jge	.LBB45_31
.LBB45_30:
	movq	%r10, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB45_61
.LBB45_31:
	movq	%r14, %rcx
	testl	%r8d, %r8d
	jle	.LBB45_35
# %bb.32:
	cmpl	$10, %r8d
	ja	.LBB45_62
# %bb.33:
	rep		bsfl	%r9d, %ecx
	movl	%r9d, %r11d
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %r11d
	leaq	"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBIB"(%rip), %rcx
	cmpl	(%rcx,%r8,4), %r11d
	jbe	.LBB45_34
.LBB45_62:
	movl	176(%rsp), %eax
	movl	168(%rsp), %r9d
	orl	$8388608, %r9d                  # imm = 0x800000
	addl	$-150, %eax
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%r10, %r8
	callq	"??$_Large_integer_to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0IH@Z"
	jmp	.LBB45_61
.LBB45_34:
	movl	%edx, %ecx
.LBB45_35:
	addq	%rdi, %rcx
	cmpl	$10000, %r9d                    # imm = 0x2710
	jb	.LBB45_36
# %bb.37:
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rbx
	.p2align	4, 0x90
.LBB45_38:                              # =>This Inner Loop Header: Depth=1
	movl	%r9d, %r10d
	imulq	%r11, %r10
	shrq	$45, %r10
	imull	$-10000, %r10d, %r15d           # imm = 0xD8F0
	addl	%r9d, %r15d
	imulq	$1374389535, %r15, %r12         # imm = 0x51EB851F
	shrq	$37, %r12
	imull	$100, %r12d, %ebp
	subl	%ebp, %r15d
	movzwl	(%rbx,%r15,2), %ebp
	movw	%bp, -2(%rcx)
	movzwl	(%rbx,%r12,2), %ebp
	movw	%bp, -4(%rcx)
	addq	$-4, %rcx
	cmpl	$99999999, %r9d                 # imm = 0x5F5E0FF
	movl	%r10d, %r9d
	ja	.LBB45_38
# %bb.39:
	cmpl	$100, %r10d
	jb	.LBB45_41
.LBB45_40:
	movzwl	%r10w, %r9d
	shrl	$2, %r9d
	imull	$5243, %r9d, %r9d               # imm = 0x147B
	shrl	$17, %r9d
	imull	$100, %r9d, %r11d
	subl	%r11d, %r10d
	movzwl	%r10w, %r10d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r11
	movzwl	(%r11,%r10,2), %r10d
	movw	%r10w, -2(%rcx)
	addq	$-2, %rcx
	movl	%r9d, %r10d
.LBB45_41:
	cmpl	$10, %r10d
	jb	.LBB45_43
# %bb.42:
	movl	%r10d, %r9d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzwl	(%r10,%r9,2), %r9d
	movw	%r9w, -2(%rcx)
	testl	%r8d, %r8d
	jg	.LBB45_45
.LBB45_46:
	je	.LBB45_52
# %bb.47:
	testl	%r13d, %r13d
	jle	.LBB45_49
# %bb.48:
	leaq	1(%rdi), %rdx
	movl	%r13d, %ebx
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memmove
	movb	$46, (%rdi,%rbx)
	jmp	.LBB45_52
.LBB45_36:
	movl	%r9d, %r10d
	cmpl	$100, %r10d
	jae	.LBB45_40
	jmp	.LBB45_41
.LBB45_43:
	addb	$48, %r10b
	movb	%r10b, -1(%rcx)
	testl	%r8d, %r8d
	jle	.LBB45_46
.LBB45_45:
	movl	%edx, %ecx
	addq	%rdi, %rcx
	movb	$48, %dl
.LBB45_51:
	callq	memset
.LBB45_52:
	addq	%r14, %rdi
	movq	%rdi, (%rsi)
.LBB45_60:
	movl	$0, 8(%rsi)
.LBB45_61:
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB45_49:
	movw	$11824, (%rdi)                  # imm = 0x2E30
	je	.LBB45_52
# %bb.50:
	negl	%r13d
	leaq	2(%rdi), %rcx
	movb	$48, %dl
	movq	%r13, %r8
	jmp	.LBB45_51
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
.Lfunc_begin22:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$120, %rsp
	.seh_stackalloc 120
	leaq	112(%rsp), %rbp
	.seh_setframe %rbp, 112
	movaps	%xmm6, -16(%rbp)                # 16-byte Spill
	.seh_savexmm %xmm6, 96
	.seh_endprologue
	movq	$-2, -24(%rbp)
	movaps	%xmm2, %xmm6
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movsd	%xmm2, -48(%rbp)
.Ltmp80:
	leaq	-48(%rbp), %rbx
	movq	%rbx, %rcx
	callq	_dtest
.Ltmp81:
# %bb.1:
	cmpw	$2, %ax
	jne	.LBB46_6
# %bb.2:
.Ltmp82:
	movaps	%xmm6, %xmm0
	callq	_dsign
.Ltmp83:
# %bb.3:
	leaq	-48(%rbp), %rcx
	movq	%rcx, %r14
	testl	%eax, %eax
	je	.LBB46_5
# %bb.4:
	leaq	-47(%rbp), %r14
	movb	$45, -48(%rbp)
.LBB46_5:
	movb	$110, 2(%r14)
	movw	$24942, (%r14)                  # imm = 0x616E
	addq	$3, %r14
	cmpq	%rcx, %r14
	jne	.LBB46_7
.LBB46_6:
	leaq	-24(%rbp), %r8
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	leaq	-64(%rbp), %rcx
	leaq	-48(%rbp), %rdx
	movaps	%xmm6, %xmm3
	callq	"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	movq	-64(%rbp), %r14
	jmp	.LBB46_7
	.p2align	4, 0x90
.LBB46_10:                              #   in Loop: Header=BB46_7 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB46_7:                               # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB46_11
# %bb.8:                                #   in Loop: Header=BB46_7 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB46_10
# %bb.9:                                #   in Loop: Header=BB46_7 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB46_10
.LBB46_11:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	movaps	-16(%rbp), %xmm6                # 16-byte Reload
	addq	$120, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.seh_endproc
	.def	"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA":
.seh_proc "?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA"
.LBB46_12:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	112(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.seh_endproc
	.def	"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA":
.seh_proc "?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA"
.LBB46_13:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	112(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end22:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z":
	.long	-1                              # ToState
	.long	"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z":
	.long	.Lfunc_begin22@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp80@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp82@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp83@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@N@Z"
                                        # -- End function
	.def	"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.globl	"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z" # -- Begin function ??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z
	.p2align	4, 0x90
"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z": # @"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
.Lfunc_begin23:
.seh_proc "??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$112, %rsp
	.seh_stackalloc 112
	leaq	112(%rsp), %rbp
	.seh_setframe %rbp, 112
	movdqa	%xmm6, -16(%rbp)                # 16-byte Spill
	.seh_savexmm %xmm6, 96
	.seh_endprologue
	movq	$-2, -24(%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rbx
	movq	%rcx, %rsi
	movq	%xmm3, %rax
	testq	%rax, %rax
	js	.LBB47_2
# %bb.1:
	movdqa	%xmm3, %xmm6
	movq	%rax, %rcx
	jmp	.LBB47_5
.LBB47_2:
	cmpq	%rdi, %rbx
	je	.LBB47_3
# %bb.4:
	movb	$45, (%rbx)
	incq	%rbx
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rax, %rcx
	movq	%rcx, %xmm6
.LBB47_5:
	movq	%rcx, %rdx
	notq	%rdx
	movabsq	$9218868437227405312, %r8       # imm = 0x7FF0000000000000
	testq	%r8, %rdx
	jne	.LBB47_15
# %bb.6:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %rdx
	je	.LBB47_7
# %bb.8:
	testq	%rax, %rax
	jns	.LBB47_11
# %bb.9:
	movabsq	$2251799813685248, %rax         # imm = 0x8000000000000
	cmpq	%rax, %rdx
	jne	.LBB47_11
# %bb.10:
	movl	$8, %r14d
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	movq	%rdi, %rax
	subq	%rbx, %rax
	cmpq	%r14, %rax
	jl	.LBB47_13
	jmp	.LBB47_14
.LBB47_15:
	movq	%xmm6, %r8
	testq	%r8, %r8
	je	.LBB47_16
# %bb.18:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%r8, %rdx
	shrq	$52, %r8
	leal	-1076(%r8), %eax
	cmpl	$-53, %eax
	jb	.LBB47_23
# %bb.19:
	movl	$1075, %ecx                     # imm = 0x433
	subl	%r8d, %ecx
	movq	$-1, %r9
	shlq	%cl, %r9
	movabsq	$4503599627370496, %rax         # imm = 0x10000000000000
	orq	%rdx, %rax
	notq	%r9
	testq	%r9, %rax
	je	.LBB47_20
.LBB47_23:
.Ltmp84:
	leaq	-40(%rbp), %rcx
                                        # kill: def $r8d killed $r8d killed $r8
	callq	"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z"
.Ltmp85:
# %bb.24:
	movq	-40(%rbp), %rcx
	movq	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
.LBB47_25:
	movq	%rcx, -40(%rbp)
	movq	%xmm0, -32(%rbp)
.Ltmp86:
	movq	%xmm6, 40(%rsp)
	movl	$0, 32(%rsp)
	leaq	-56(%rbp), %rcx
	leaq	-40(%rbp), %r9
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z"
.Ltmp87:
# %bb.26:
	movq	-56(%rbp), %rdi
	movl	-48(%rbp), %eax
	jmp	.LBB47_29
.LBB47_7:
	movl	$3, %r14d
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	movq	%rdi, %rax
	subq	%rbx, %rax
	cmpq	%r14, %rax
	jge	.LBB47_14
.LBB47_13:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB47_30
.LBB47_16:
	cmpq	%rdi, %rbx
	je	.LBB47_17
# %bb.28:
	movb	$48, (%rbx)
	incq	%rbx
	xorl	%eax, %eax
	movq	%rbx, %rdi
	jmp	.LBB47_29
.LBB47_3:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB47_30
.LBB47_11:
	btq	$51, %rcx
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmovaeq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %r14d
	cmovaeq	%rax, %r14
	movq	%rdi, %rax
	subq	%rbx, %rax
	cmpq	%r14, %rax
	jl	.LBB47_13
.LBB47_14:
	movq	%rbx, %rcx
	movq	%r14, %r8
	callq	memcpy
	addq	%r14, %rbx
	movq	%rbx, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB47_30
.LBB47_17:
	movl	$132, %eax
.LBB47_29:
	movq	%rdi, (%rsi)
	movl	%eax, 8(%rsi)
.LBB47_30:
	movq	%rsi, %rax
	movaps	-16(%rbp), %xmm6                # 16-byte Reload
	addq	$112, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq
.LBB47_20:
                                        # kill: def $cl killed $cl killed $rcx
	shrq	%cl, %rax
	movl	$-1, %r8d
	movabsq	$-3689348814741910323, %r9      # imm = 0xCCCCCCCCCCCCCCCD
	.p2align	4, 0x90
.LBB47_21:                              # =>This Inner Loop Header: Depth=1
	movq	%rax, %rcx
	mulq	%r9
	movq	%rdx, %rax
	shrq	$3, %rax
	leal	(%rax,%rax), %edx
	leal	(%rdx,%rdx,4), %edx
	incl	%r8d
	cmpl	%ecx, %edx
	je	.LBB47_21
# %bb.22:
	movd	%r8d, %xmm0
	jmp	.LBB47_25
	.seh_handlerdata
	.long	("$cppxdata$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_endproc
	.def	"?dtor$27@?0???$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$27@?0???$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA":
.seh_proc "?dtor$27@?0???$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"
.LBB47_27:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	112(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end23:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	-1                              # ToState
	.long	"?dtor$27@?0???$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"@IMGREL # Action
"$ip2state$??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	.Lfunc_begin23@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp84@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp87@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
                                        # -- End function
	.def	"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z"
	.globl	"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z" # -- Begin function ??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z
	.p2align	4, 0x90
"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z": # @"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z"
.seh_proc "??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	movdqa	%xmm6, 80(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 80
	.seh_endprologue
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	176(%rsp), %ebp
	movq	%xmm3, %rax
	testq	%rax, %rax
	je	.LBB48_1
# %bb.8:
	movdqa	%xmm3, %xmm6
	movq	%rax, %r8
	shrq	$52, %r8
	cmpl	$2, %ebp
	jne	.LBB48_11
# %bb.9:
	cmpl	$1076, %r8d                     # imm = 0x434
	jb	.LBB48_11
# %bb.10:
	movl	$0, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	movdqa	%xmm6, %xmm3
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
	jmp	.LBB48_17
.LBB48_1:
	cmpl	$1, %ebp
	jne	.LBB48_5
# %bb.2:
	movq	%rbx, %rax
	subq	%rdi, %rax
	cmpq	$4, %rax
	jle	.LBB48_3
# %bb.4:
	movb	$48, 4(%rdi)
	movl	$808150320, (%rdi)              # imm = 0x302B6530
	addq	$5, %rdi
	jmp	.LBB48_7
.LBB48_11:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%rdx, %rax
	leal	-1076(%r8), %ecx
	cmpl	$-53, %ecx
	jb	.LBB48_18
# %bb.12:
	movl	$1075, %ecx                     # imm = 0x433
	subl	%r8d, %ecx
	movq	$-1, %r9
	shlq	%cl, %r9
	incq	%rdx
	orq	%rax, %rdx
	notq	%r9
	testq	%r9, %rdx
	je	.LBB48_13
.LBB48_18:
	leaq	64(%rsp), %rcx
	movq	%rax, %rdx
                                        # kill: def $r8d killed $r8d killed $r8
	callq	"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z"
	movq	64(%rsp), %rcx
	movq	72(%rsp), %xmm0                 # xmm0 = mem[0],zero
.LBB48_16:
	movq	%rcx, 48(%rsp)
	movq	%xmm0, 56(%rsp)
	movq	%xmm6, 40(%rsp)
	movl	%ebp, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r8
	callq	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z"
	jmp	.LBB48_17
.LBB48_5:
	cmpq	%rdi, %rbx
	je	.LBB48_3
# %bb.6:
	movb	$48, (%rdi)
	incq	%rdi
.LBB48_7:
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB48_17
.LBB48_3:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
.LBB48_17:
	movq	%rsi, %rax
	movaps	80(%rsp), %xmm6                 # 16-byte Reload
	addq	$104, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	retq
.LBB48_13:
                                        # kill: def $cl killed $cl killed $rcx
	shrq	%cl, %rdx
	movl	$-1, %r8d
	movabsq	$-3689348814741910323, %r9      # imm = 0xCCCCCCCCCCCCCCCD
	.p2align	4, 0x90
.LBB48_14:                              # =>This Inner Loop Header: Depth=1
	movq	%rdx, %rcx
	movq	%rdx, %rax
	mulq	%r9
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	incl	%r8d
	cmpl	%ecx, %eax
	je	.LBB48_14
# %bb.15:
	movd	%r8d, %xmm0
	jmp	.LBB48_16
	.seh_endproc
                                        # -- End function
	.def	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
	.globl	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z" # -- Begin function ??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z
	.p2align	4, 0x90
"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z": # @"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
.seh_proc "??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$120, %rsp
	.seh_stackalloc 120
	.seh_endprologue
	movq	%rcx, %rsi
	movl	224(%rsp), %r13d
	movq	%xmm3, %rax
	testq	%rax, %rax
	je	.LBB49_30
# %bb.1:
	movabsq	$4503599627370495, %rcx         # imm = 0xFFFFFFFFFFFFF
	movq	%rax, %r10
	andq	%rcx, %r10
	shrq	$52, %rax
	leal	-1075(%rax), %r9d
	testq	%rax, %rax
	leaq	1(%r10,%rcx), %r15
	cmoveq	%r10, %r15
	movl	$-1074, %r10d                   # imm = 0xFBCE
	cmovnel	%r9d, %r10d
	movq	%rdx, %r12
	cmpl	$-52, %r10d
	jl	.LBB49_34
# %bb.2:
	movq	%r8, 40(%rsp)                   # 8-byte Spill
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	leal	15(%r10), %ecx
	shrl	$4, %ecx
	xorl	%eax, %eax
	testl	%r10d, %r10d
	movl	$0, 48(%rsp)                    # 4-byte Folded Spill
	cmovsl	%eax, %ecx
	imull	$1262608, %ecx, %eax            # imm = 0x134410
	leaq	"?__POW10_OFFSET@std@@3QBGB"(%rip), %r8
	movzwl	(%r8,%rcx,2), %r8d
	movq	%r8, 88(%rsp)                   # 8-byte Spill
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	shll	$4, %ecx
	movq	%r15, 56(%rsp)                  # 8-byte Spill
	shlq	$8, %r15
	movq	%r15, 80(%rsp)                  # 8-byte Spill
	movq	%r10, 72(%rsp)                  # 8-byte Spill
	subl	%r10d, %ecx
	shrl	$18, %eax
	imull	$7282, %eax, %esi               # imm = 0x1C72
	addl	$182050, %esi                   # imm = 0x2C722
	shrl	$16, %esi
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r15
	movq	%rdx, 64(%rsp)                  # 8-byte Spill
	movq	%rdx, %r12
	jmp	.LBB49_6
	.p2align	4, 0x90
.LBB49_3:                               #   in Loop: Header=BB49_6 Depth=1
	movl	%edx, %eax
	imulq	$1441151881, %rax, %r9          # imm = 0x55E63B89
	movl	$3518437209, %r8d               # imm = 0xD1B71759
	imulq	%r8, %rax
	shrq	$45, %rax
	imull	$-10000, %eax, %r10d            # imm = 0xD8F0
	addl	%edx, %r10d
	imulq	$1374389535, %r10, %rdx         # imm = 0x51EB851F
	shrq	$37, %rdx
	imull	$100, %edx, %r11d
	subl	%r11d, %r10d
	movzwl	(%r15,%r10,2), %r10d
	movw	%r10w, 7(%r12)
	movzwl	(%r15,%rdx,2), %edx
	movw	%dx, 5(%r12)
	shrq	$57, %r9
	imull	$-10000, %r9d, %edx             # imm = 0xD8F0
	addl	%eax, %edx
	imulq	$1374389535, %rdx, %rax         # imm = 0x51EB851F
	shrq	$37, %rax
	imull	$100, %eax, %r10d
	subl	%r10d, %edx
	movzwl	(%r15,%rdx,2), %edx
	movw	%dx, 3(%r12)
	movzwl	(%r15,%rax,2), %eax
	movw	%ax, 1(%r12)
	addb	$48, %r9b
	movb	%r9b, (%r12)
.LBB49_4:                               #   in Loop: Header=BB49_6 Depth=1
	addq	$9, %r12
.LBB49_5:                               #   in Loop: Header=BB49_6 Depth=1
	cmpq	$1, %rdi
	jle	.LBB49_33
.LBB49_6:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB49_19 Depth 2
	movq	%r12, %rbp
	movq	%rsi, %rdi
	decq	%rsi
	movq	88(%rsp), %rax                  # 8-byte Reload
	addl	%esi, %eax
	leaq	(%rax,%rax,2), %r12
	movq	80(%rsp), %r8                   # 8-byte Reload
	movq	%r8, %rax
	leaq	"?__POW10_SPLIT@std@@3QAY02$$CB_KA"(%rip), %rbx
	mulq	(%rbx,%r12,8)
	movq	%rdx, %r10
	movq	%r8, %rax
	mulq	8(%rbx,%r12,8)
	movq	%rdx, %r9
	movq	%rax, %r11
	movq	%r8, %rax
	mulq	16(%rbx,%r12,8)
	addq	%r10, %r11
	adcq	%rax, %r9
	cmpq	%rax, %r9
	adcq	$0, %rdx
	movq	%rdx, %r10
	shrq	%cl, %r10
	shrdq	%cl, %rdx, %r9
	movq	%r9, %rax
	movabsq	$3560107088838733873, %r14      # imm = 0x31680A88F8953031
	mulq	%r14
	movq	%rdx, %r11
	movq	%r9, %rax
	movabsq	$-8543223759426509417, %rbx     # imm = 0x89705F4136B4A597
	mulq	%rbx
	movq	%rdx, %r12
	movq	%rax, %r13
	movq	%r10, %rax
	mulq	%r14
	imulq	%rbx, %r10
	leaq	(%r11,%rax), %rbx
	xorl	%r14d, %r14d
	addq	%rbx, %r13
	setb	%r14b
	addq	%r12, %rdx
	addq	%r10, %rdx
	addq	%rax, %r11
	adcq	%rdx, %r14
	shrq	$29, %r14
	imull	$-1000000000, %r14d, %edx       # imm = 0xC4653600
	addl	%r9d, %edx
	testb	$1, 48(%rsp)                    # 1-byte Folded Reload
	jne	.LBB49_23
# %bb.7:                                #   in Loop: Header=BB49_6 Depth=1
	testl	%edx, %edx
	movq	%rbp, %r12
	je	.LBB49_5
# %bb.8:                                #   in Loop: Header=BB49_6 Depth=1
	movl	$9, %eax
	cmpl	$99999999, %edx                 # imm = 0x5F5E0FF
	ja	.LBB49_16
# %bb.9:                                #   in Loop: Header=BB49_6 Depth=1
	movl	$8, %eax
	cmpl	$9999999, %edx                  # imm = 0x98967F
	ja	.LBB49_16
# %bb.10:                               #   in Loop: Header=BB49_6 Depth=1
	movl	$7, %eax
	cmpl	$999999, %edx                   # imm = 0xF423F
	ja	.LBB49_16
# %bb.11:                               #   in Loop: Header=BB49_6 Depth=1
	movl	$6, %eax
	cmpl	$99999, %edx                    # imm = 0x1869F
	ja	.LBB49_16
# %bb.12:                               #   in Loop: Header=BB49_6 Depth=1
	movl	$5, %eax
	cmpl	$9999, %edx                     # imm = 0x270F
	ja	.LBB49_16
# %bb.13:                               #   in Loop: Header=BB49_6 Depth=1
	movl	$4, %eax
	cmpl	$999, %edx                      # imm = 0x3E7
	ja	.LBB49_16
# %bb.14:                               #   in Loop: Header=BB49_6 Depth=1
	movl	$3, %eax
	cmpl	$99, %edx
	ja	.LBB49_16
# %bb.15:                               #   in Loop: Header=BB49_6 Depth=1
	cmpl	$10, %edx
	movl	$1, %eax
	sbbq	$-1, %rax
	.p2align	4, 0x90
.LBB49_16:                              #   in Loop: Header=BB49_6 Depth=1
	movq	40(%rsp), %r9                   # 8-byte Reload
	subq	%r12, %r9
	cmpq	%rax, %r9
	jl	.LBB49_45
# %bb.17:                               #   in Loop: Header=BB49_6 Depth=1
	xorl	%r9d, %r9d
	cmpl	$10000, %edx                    # imm = 0x2710
	jb	.LBB49_26
# %bb.18:                               #   in Loop: Header=BB49_6 Depth=1
	leaq	(%r12,%rax), %r11
	xorl	%r9d, %r9d
	movl	$3518437209, %r8d               # imm = 0xD1B71759
	.p2align	4, 0x90
.LBB49_19:                              #   Parent Loop BB49_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	%edx, %r10d
	imulq	%r8, %r10
	shrq	$45, %r10
	imull	$-10000, %r10d, %ebx            # imm = 0xD8F0
	addl	%edx, %ebx
	imulq	$1374389535, %rbx, %r14         # imm = 0x51EB851F
	shrq	$37, %r14
	imull	$100, %r14d, %r12d
	subl	%r12d, %ebx
	movl	%r9d, %r12d
	movq	%r11, %r13
	subq	%r12, %r13
	movzwl	(%r15,%rbx,2), %ebx
	movw	%bx, -2(%r13)
	movzwl	(%r15,%r14,2), %ebx
	movw	%bx, -4(%r13)
	addl	$4, %r9d
	cmpl	$99999999, %edx                 # imm = 0x5F5E0FF
	movl	%r10d, %edx
	ja	.LBB49_19
# %bb.20:                               #   in Loop: Header=BB49_6 Depth=1
	cmpl	$100, %r10d
	jb	.LBB49_27
.LBB49_21:                              #   in Loop: Header=BB49_6 Depth=1
	movzwl	%r10w, %edx
	shrl	$2, %edx
	imull	$5243, %edx, %edx               # imm = 0x147B
	shrl	$17, %edx
	imull	$100, %edx, %r11d
	subl	%r11d, %r10d
	movzwl	%r10w, %r10d
	movq	%rbp, %r12
	leaq	(%rax,%rbp), %r11
	movl	%r9d, %ebx
	subq	%rbx, %r11
	movzwl	(%r15,%r10,2), %r10d
	movw	%r10w, -2(%r11)
	orl	$2, %r9d
	movl	%edx, %r10d
	cmpl	$10, %r10d
	jae	.LBB49_28
.LBB49_22:                              #   in Loop: Header=BB49_6 Depth=1
	addb	$48, %r10b
	movb	%r10b, (%r12)
	jmp	.LBB49_29
	.p2align	4, 0x90
.LBB49_23:                              #   in Loop: Header=BB49_6 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	subq	%rbp, %rax
	cmpq	$9, %rax
	jl	.LBB49_45
# %bb.24:                               #   in Loop: Header=BB49_6 Depth=1
	movq	%rbp, %r12
	testl	%edx, %edx
	jne	.LBB49_3
# %bb.25:                               #   in Loop: Header=BB49_6 Depth=1
	movabsq	$3472328296227680304, %rax      # imm = 0x3030303030303030
	movq	%rax, (%r12)
	movb	$48, 8(%r12)
	jmp	.LBB49_4
.LBB49_26:                              #   in Loop: Header=BB49_6 Depth=1
	movl	%edx, %r10d
	cmpl	$100, %r10d
	jae	.LBB49_21
.LBB49_27:                              #   in Loop: Header=BB49_6 Depth=1
	movq	%rbp, %r12
	cmpl	$10, %r10d
	jb	.LBB49_22
.LBB49_28:                              #   in Loop: Header=BB49_6 Depth=1
	movl	%r10d, %edx
	leaq	(%r12,%rax), %r10
	movl	%r9d, %r9d
	subq	%r9, %r10
	movzwl	(%r15,%rdx,2), %edx
	movw	%dx, -2(%r10)
.LBB49_29:                              #   in Loop: Header=BB49_6 Depth=1
	addq	%rax, %r12
	movb	$1, %al
	movl	%eax, 48(%rsp)                  # 4-byte Spill
	jmp	.LBB49_5
.LBB49_30:
	cmpl	$1, %r13d
	movl	%r13d, %eax
	sbbl	$0, %eax
	addl	$2, %eax
	movq	%r8, %rcx
	subq	%rdx, %rcx
	cltq
	movl	$132, %r15d
	cmpq	%rax, %rcx
	jl	.LBB49_75
# %bb.31:
	xorl	%r15d, %r15d
	movb	$48, (%rdx)
	testl	%r13d, %r13d
	je	.LBB49_52
# %bb.32:
	leaq	2(%rdx), %rcx
	movb	$46, 1(%rdx)
	movq	%rdx, %rbx
	movl	%r13d, %edi
	movb	$48, %dl
	movq	%rdi, %r8
	callq	memset
	leaq	(%rbx,%rdi), %r8
	addq	$2, %r8
	jmp	.LBB49_75
.LBB49_33:
	testb	$1, 48(%rsp)                    # 1-byte Folded Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movq	40(%rsp), %r8                   # 8-byte Reload
	movq	64(%rsp), %rdx                  # 8-byte Reload
	movl	224(%rsp), %r13d
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	jne	.LBB49_36
.LBB49_34:
	cmpq	%r8, %r12
	je	.LBB49_44
# %bb.35:
	movb	$48, (%r12)
	incq	%r12
.LBB49_36:
	testl	%r13d, %r13d
	je	.LBB49_39
# %bb.37:
	cmpq	%r8, %r12
	je	.LBB49_44
# %bb.38:
	movb	$46, (%r12)
	incq	%r12
.LBB49_39:
	testl	%r10d, %r10d
	js	.LBB49_46
# %bb.40:
	movq	%r8, %rax
	subq	%r12, %rax
	movl	%r13d, %r14d
	movl	$132, %r15d
	cmpq	%r14, %rax
	jl	.LBB49_75
# %bb.41:
	testl	%r13d, %r13d
	je	.LBB49_43
# %bb.42:
	movq	%r12, %rcx
	movb	$48, %dl
	movq	%r14, %r8
	callq	memset
.LBB49_43:
	addq	%r14, %r12
	jmp	.LBB49_74
.LBB49_45:
	movl	$132, %r15d
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movq	40(%rsp), %r8                   # 8-byte Reload
	jmp	.LBB49_75
.LBB49_46:
	movq	%rdx, 64(%rsp)                  # 8-byte Spill
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	movq	%r10, 72(%rsp)                  # 8-byte Spill
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
	negl	%r10d
	movq	%r10, 48(%rsp)                  # 8-byte Spill
	movl	%r10d, %esi
	shrq	$4, %rsi
	movl	%r13d, %ebx
	imulq	$954437177, %rbx, %rdx          # imm = 0x38E38E39
	shrq	$33, %rdx
	leaq	"?__MIN_BLOCK_2@std@@3QBEB"(%rip), %rax
	movzbl	(%rsi,%rax), %edi
	cmpl	%edi, %edx
	jae	.LBB49_53
# %bb.47:
	movq	%r8, %rax
	subq	%r12, %rax
	movl	$132, %r15d
	cmpq	%rbx, %rax
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jl	.LBB49_75
# %bb.48:
	testl	%r13d, %r13d
	je	.LBB49_50
# %bb.49:
	movq	%r12, %rcx
	movb	$48, %dl
	movq	%rbx, %r8
	callq	memset
.LBB49_50:
	addq	%rbx, %r12
	jmp	.LBB49_74
.LBB49_52:
	incq	%rdx
	movq	%rdx, %r8
	jmp	.LBB49_75
.LBB49_53:
	movq	%rbx, 112(%rsp)                 # 8-byte Spill
	leaq	-68(%rsi), %rax
	xorl	%r14d, %r14d
	cmpq	$-62, %rax
	jb	.LBB49_57
# %bb.54:
	movq	%r15, 56(%rsp)                  # 8-byte Spill
	movq	%r8, %rbx
	movq	%r8, %rax
	subq	%r12, %rax
	leaq	(%rdi,%rdi,8), %rbp
	movl	$132, %r15d
	cmpq	%rbp, %rax
	jge	.LBB49_56
# %bb.55:
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movq	%rbx, %r8
	jmp	.LBB49_75
.LBB49_56:
	movq	%r12, %rcx
	movq	%rdx, %r14
	movb	$48, %dl
	movq	%rbp, %r8
	callq	memset
	movq	%r14, %rdx
	addq	%rbp, %r12
	movl	%edi, %r14d
	movq	%rbx, %r8
	movq	56(%rsp), %r15                  # 8-byte Reload
.LBB49_57:
	leaq	"?__POW10_OFFSET_2@std@@3QBGB"(%rip), %rax
	movzwl	(%rax,%rsi,2), %r9d
	movzwl	2(%rax,%rsi,2), %ecx
	movl	%r14d, %eax
	subl	%edi, %eax
	addl	%r9d, %eax
	movl	%ecx, 88(%rsp)                  # 4-byte Spill
	cmpl	%ecx, %eax
	jae	.LBB49_70
# %bb.58:
	movq	48(%rsp), %rcx                  # 8-byte Reload
	andl	$15, %ecx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movq	%r15, 56(%rsp)                  # 8-byte Spill
	shlq	$8, %r15
	movq	%r15, 80(%rsp)                  # 8-byte Spill
	movq	%rdx, %rcx
	movq	%rdx, 104(%rsp)                 # 8-byte Spill
	movl	%edx, %ecx
	movl	%r14d, %r14d
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	leaq	(%rcx,%rcx,8), %rcx
	movq	%rcx, 96(%rsp)                  # 8-byte Spill
	movl	%eax, %eax
	leaq	(%rax,%rax,2), %rax
	leaq	"?__POW10_SPLIT_2@std@@3QAY02$$CB_KA"(%rip), %rcx
	movq	%r12, %rdx
	leaq	(%rcx,%rax,8), %r12
	addq	$16, %r12
	movq	%r8, %rsi
	movq	%rdx, %r13
	subq	%rdx, %rsi
	subl	%edi, %r9d
	jmp	.LBB49_61
.LBB49_59:                              #   in Loop: Header=BB49_61 Depth=1
	movabsq	$3472328296227680304, %rax      # imm = 0x3030303030303030
	movq	%rax, (%r13)
	movb	$48, 8(%r13)
.LBB49_60:                              #   in Loop: Header=BB49_61 Depth=1
	movq	%r15, %r9
	addq	$9, %r13
	incq	%r14
	addq	$24, %r12
	addq	$-9, %rsi
	leal	(%r15,%r14), %eax
	cmpl	88(%rsp), %eax                  # 4-byte Folded Reload
	jae	.LBB49_69
.LBB49_61:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %r15
	movq	80(%rsp), %r11                  # 8-byte Reload
	movq	%r11, %rax
	mulq	-16(%r12)
	movq	%rdx, %rcx
	movq	%r11, %rax
	mulq	-8(%r12)
	movq	%rdx, %r9
	movq	%rax, %r10
	movq	%r11, %rax
	mulq	(%r12)
	addq	%rcx, %r10
	adcq	%rax, %r9
	cmpq	%rax, %r9
	adcq	$0, %rdx
	movq	%rdx, %r10
	movq	48(%rsp), %rcx                  # 8-byte Reload
	shrq	%cl, %r10
                                        # kill: def $cl killed $cl killed $rcx
	shrdq	%cl, %rdx, %r9
	movq	%r9, %rax
	movabsq	$3560107088838733873, %rbx      # imm = 0x31680A88F8953031
	mulq	%rbx
	movq	%rdx, %rcx
	movq	%r9, %rax
	movabsq	$-8543223759426509417, %rdi     # imm = 0x89705F4136B4A597
	mulq	%rdi
	movq	%rdx, %r11
	movq	%rax, %rbp
	movq	%r10, %rax
	mulq	%rbx
	imulq	%rdi, %r10
	leaq	(%rcx,%rax), %rdi
	xorl	%ebx, %ebx
	addq	%rdi, %rbp
	setb	%bl
	addq	%r11, %rdx
	addq	%r10, %rdx
	addq	%rax, %rcx
	adcq	%rdx, %rbx
	shrq	$29, %rbx
	imull	$-1000000000, %ebx, %eax        # imm = 0xC4653600
	addl	%r9d, %eax
	cmpq	%r14, 40(%rsp)                  # 8-byte Folded Reload
	je	.LBB49_65
# %bb.62:                               #   in Loop: Header=BB49_61 Depth=1
	cmpq	$9, %rsi
	jl	.LBB49_68
# %bb.63:                               #   in Loop: Header=BB49_61 Depth=1
	testl	%eax, %eax
	je	.LBB49_59
# %bb.64:                               #   in Loop: Header=BB49_61 Depth=1
	movl	%eax, %ecx
	imulq	$1441151881, %rcx, %rdx         # imm = 0x55E63B89
	movl	$3518437209, %r9d               # imm = 0xD1B71759
	imulq	%r9, %rcx
	shrq	$45, %rcx
	imull	$-10000, %ecx, %r9d             # imm = 0xD8F0
	addl	%eax, %r9d
	imulq	$1374389535, %r9, %rax          # imm = 0x51EB851F
	shrq	$37, %rax
	imull	$100, %eax, %r10d
	subl	%r10d, %r9d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzwl	(%r10,%r9,2), %r9d
	movw	%r9w, 7(%r13)
	movzwl	(%r10,%rax,2), %eax
	movw	%ax, 5(%r13)
	shrq	$57, %rdx
	imull	$-10000, %edx, %eax             # imm = 0xD8F0
	addl	%ecx, %eax
	imulq	$1374389535, %rax, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %r9d
	subl	%r9d, %eax
	movzwl	(%r10,%rax,2), %eax
	movw	%ax, 3(%r13)
	movzwl	(%r10,%rcx,2), %eax
	movw	%ax, 1(%r13)
	addb	$48, %dl
	movb	%dl, (%r13)
	jmp	.LBB49_60
.LBB49_65:
	movq	104(%rsp), %rcx                 # 8-byte Reload
	leal	(%rcx,%rcx,8), %ecx
	movl	224(%rsp), %edx
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	subl	%ecx, %edx
	xorl	%r9d, %r9d
	cmpl	$9, %edx
	movq	64(%rsp), %rdi                  # 8-byte Reload
	je	.LBB49_87
# %bb.66:
	movl	$9, %ecx
	subl	%edx, %ecx
	cmpl	$2, %ecx
	movl	$1, %r11d
	cmovael	%ecx, %r11d
	leal	-1(%r11), %r9d
	movl	%r11d, %ebx
	andl	$3, %ebx
	cmpl	$3, %r9d
	jae	.LBB49_76
# %bb.67:
                                        # implicit-def: $r9d
	movl	224(%rsp), %ecx
	movq	56(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB49_79
.LBB49_68:
	movl	$132, %r15d
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB49_75
.LBB49_69:
	movq	%r13, %r12
	movl	224(%rsp), %r13d
.LBB49_70:
	leal	(%r14,%r14,8), %eax
	subl	%eax, %r13d
	movq	%r8, %rax
	subq	%r12, %rax
	movl	$132, %r15d
	cmpq	%r13, %rax
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jl	.LBB49_75
# %bb.71:
	testq	%r13, %r13
	je	.LBB49_73
# %bb.72:
	movq	%r12, %rcx
	movb	$48, %dl
	movq	%r13, %r8
	callq	memset
.LBB49_73:
	addq	%r13, %r12
.LBB49_74:
	xorl	%r15d, %r15d
	movq	%r12, %r8
	jmp	.LBB49_75
.LBB49_76:
	andl	$-4, %r11d
	movl	$3518437209, %r9d               # imm = 0xD1B71759
	movl	224(%rsp), %ecx
	movq	56(%rsp), %r15                  # 8-byte Reload
.LBB49_77:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %r10d
	movq	%r10, %rax
	imulq	%r9, %rax
	shrq	$45, %rax
	addl	$-4, %r11d
	jne	.LBB49_77
# %bb.78:
	imulq	$274877907, %r10, %r9           # imm = 0x10624DD3
	shrq	$38, %r9
.LBB49_79:
	testl	%ebx, %ebx
	je	.LBB49_82
# %bb.80:
	negl	%ebx
	movl	$3435973837, %r10d              # imm = 0xCCCCCCCD
.LBB49_81:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %r9d
	movl	%eax, %eax
	imulq	%r10, %rax
	shrq	$35, %rax
	incl	%ebx
	jne	.LBB49_81
.LBB49_82:
	movl	%r9d, %r11d
	movl	$3435973837, %r10d              # imm = 0xCCCCCCCD
	imulq	%r11, %r10
	shrq	$35, %r10
	addl	%r10d, %r10d
	leal	(%r10,%r10,4), %r10d
	subl	%r10d, %r9d
	cmpl	$5, %r9d
	jne	.LBB49_87
# %bb.83:
	notl	%ecx
	subl	72(%rsp), %ecx                  # 4-byte Folded Reload
	testl	%ecx, %ecx
	jle	.LBB49_86
# %bb.84:
	movl	$1, %ebx
	cmpl	$59, %ecx
	ja	.LBB49_88
# %bb.85:
	movq	$-1, %r9
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %r9
	notq	%r9
	testq	%r9, %r15
	jne	.LBB49_88
.LBB49_86:
	movl	$2, %ebx
	jmp	.LBB49_88
.LBB49_87:
	xorl	%ebx, %ebx
	cmpl	$6, %r9d
	setae	%bl
.LBB49_88:
	testl	%edx, %edx
	je	.LBB49_91
# %bb.89:
	movl	%edx, %ecx
	movl	$132, %r15d
	cmpq	%rcx, %rsi
	jge	.LBB49_92
# %bb.90:
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB49_75
.LBB49_91:
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB49_100
.LBB49_92:
	movl	%edx, %r9d
	decl	%r9d
	je	.LBB49_96
# %bb.93:
	movq	112(%rsp), %r10                 # 8-byte Reload
	subq	96(%rsp), %r10                  # 8-byte Folded Reload
	addq	%r13, %r10
	addq	$-2, %r10
	movl	%r9d, %r11d
	xorl	%r9d, %r9d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r15
.LBB49_94:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %esi
	movl	%eax, %eax
	imulq	$1374389535, %rax, %rax         # imm = 0x51EB851F
	shrq	$37, %rax
	imull	$100, %eax, %edi
	subl	%edi, %esi
	movzwl	(%r15,%rsi,2), %esi
	movw	%si, (%r10)
	addq	$2, %r9
	addq	$-2, %r10
	cmpq	%r11, %r9
	jb	.LBB49_94
# %bb.95:
	movq	64(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB49_97
.LBB49_96:
	xorl	%r9d, %r9d
.LBB49_97:
	cmpl	%edx, %r9d
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jae	.LBB49_99
# %bb.98:
	movl	%eax, %r10d
	movl	$3435973837, %r11d              # imm = 0xCCCCCCCD
	imulq	%r10, %r11
	shrq	$35, %r11
	addl	%r11d, %r11d
	leal	(%r11,%r11,4), %r10d
	subl	%r10d, %eax
	orb	$48, %al
	notl	%r9d
	addl	%r9d, %edx
	movb	%al, (%r13,%rdx)
.LBB49_99:
	addq	%rcx, %r13
.LBB49_100:
	xorl	%r15d, %r15d
	testl	%ebx, %ebx
	je	.LBB49_108
# %bb.101:
	cmpq	%rdi, %r13
	je	.LBB49_111
# %bb.102:
	leaq	-1(%r13), %rax
	movq	%r8, %rcx
	jmp	.LBB49_105
.LBB49_103:                             #   in Loop: Header=BB49_105 Depth=1
	movb	$48, (%rax)
	movl	$1, %ebx
	leaq	-1(%rax), %rdx
	cmpq	%rdi, %rax
	movq	%rdx, %rax
	je	.LBB49_109
.LBB49_105:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%rax), %edx
	cmpl	$57, %edx
	je	.LBB49_103
# %bb.106:                              #   in Loop: Header=BB49_105 Depth=1
	cmpl	$46, %edx
	jne	.LBB49_115
# %bb.107:                              #   in Loop: Header=BB49_105 Depth=1
	movq	%rax, %rcx
	leaq	-1(%rax), %rdx
	cmpq	%rdi, %rax
	movq	%rdx, %rax
	jne	.LBB49_105
.LBB49_109:
	movb	$49, (%rdi)
	cmpq	%r8, %rcx
	je	.LBB49_112
# %bb.110:
	movw	$11824, (%rcx)                  # imm = 0x2E30
	jmp	.LBB49_112
.LBB49_111:
	movb	$49, (%rdi)
.LBB49_112:
	cmpq	%r8, %r13
	je	.LBB49_44
# %bb.113:
	movb	$48, (%r13)
	incq	%r13
	movq	%r13, %r8
	jmp	.LBB49_75
.LBB49_44:
	movl	$132, %r15d
.LBB49_75:
	movq	%r8, (%rsi)
	movl	%r15d, 8(%rsi)
	movq	%rsi, %rax
	addq	$120, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB49_115:
	cmpl	$1, %ebx
	je	.LBB49_118
# %bb.116:
	movl	%edx, %ecx
	andb	$1, %cl
	jne	.LBB49_118
.LBB49_108:
	movq	%r13, %r8
	jmp	.LBB49_75
.LBB49_118:
	incb	%dl
	movb	%dl, (%rax)
	movq	%r13, %r8
	jmp	.LBB49_75
	.seh_endproc
                                        # -- End function
	.def	"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z"
	.globl	"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z" # -- Begin function ?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z
	.p2align	4, 0x90
"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z": # @"?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z"
.seh_proc "?__d2d@std@@YA?AU__floating_decimal_64@1@_KI@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	pushq	%rax
	.seh_stackalloc 8
	.seh_endprologue
                                        # kill: def $r8d killed $r8d def $r8
	movabsq	$4503599627370496, %rbp         # imm = 0x10000000000000
	orq	%rdx, %rbp
	testl	%r8d, %r8d
	cmoveq	%rdx, %rbp
	leal	-1077(%r8), %eax
	movl	$-1076, %r15d                   # imm = 0xFBCC
	cmovnel	%eax, %r15d
	leaq	(,%rbp,4), %rsi
	testq	%rdx, %rdx
	setne	%al
	cmpl	$2, %r8d
	setb	%r12b
	orb	%al, %r12b
	testl	%r15d, %r15d
	movq	%rcx, (%rsp)                    # 8-byte Spill
	js	.LBB50_14
# %bb.1:
	imull	$78913, %r15d, %r13d            # imm = 0x13441
	shrl	$18, %r13d
	cmpl	$4, %r15d
	adcl	$-1, %r13d
	imull	$1217359, %r13d, %eax           # imm = 0x12934F
	shrl	$19, %eax
	movl	%r13d, %ecx
	subl	%r15d, %ecx
	addl	%eax, %ecx
	addl	$122, %ecx
	movq	%r13, %rax
	shlq	$4, %rax
	leaq	"?__DOUBLE_POW5_INV_SPLIT@std@@3QAY01$$CB_KA"(%rip), %rdx
	movq	%rsi, %rdi
	orq	$2, %rdi
	movq	(%rax,%rdx), %r9
	movq	8(%rax,%rdx), %r14
	movq	%r14, %rax
	mulq	%rdi
	movq	%rdx, %r8
	movq	%rax, %r10
	movq	%r9, %rax
	mulq	%rdi
	movq	%rdx, %r11
	addq	%r10, %r11
	adcq	$0, %r8
	shrdq	%cl, %r8, %r11
	movzbl	%r12b, %ebx
	movq	%rbx, %r10
	notq	%r10
	addq	%rsi, %r10
	movq	%r14, %rax
	mulq	%r10
	movq	%rdx, %r8
	movq	%rax, %r12
	movq	%r9, %rax
	mulq	%r10
	movq	%rdx, %r10
	addq	%r12, %r10
	adcq	$0, %r8
	shrdq	%cl, %r8, %r10
	movq	%r14, %rax
	mulq	%rsi
	movq	%rdx, %r8
	movq	%rax, %r14
	movq	%r9, %rax
	mulq	%rsi
	movq	%rdx, %r9
	addq	%r14, %r9
	adcq	$0, %r8
                                        # kill: def $cl killed $cl killed $ecx
	shrdq	%cl, %r8, %r9
	cmpl	$21, %r13d
	ja	.LBB50_2
# %bb.3:
	movabsq	$-3689348814741910323, %rcx     # imm = 0xCCCCCCCCCCCCCCCD
	movq	%rsi, %rax
	mulq	%rcx
	shrq	$2, %rdx
	leal	(%rdx,%rdx,4), %eax
	cmpl	%esi, %eax
	jne	.LBB50_7
# %bb.4:
	movl	$-1, %r8d
	.p2align	4, 0x90
.LBB50_5:                               # =>This Inner Loop Header: Depth=1
	movq	%rsi, %rax
	mulq	%rcx
	shrq	$2, %rdx
	leal	(%rdx,%rdx,4), %eax
	incl	%r8d
	cmpl	%esi, %eax
	movq	%rdx, %rsi
	je	.LBB50_5
# %bb.6:
	cmpl	%r13d, %r8d
	setae	%dil
	xorl	%r12d, %r12d
	testb	%dil, %dil
	je	.LBB50_21
	jmp	.LBB50_22
.LBB50_14:
	imull	$-732923, %r15d, %edi           # imm = 0xFFF4D105
	shrl	$20, %edi
	xorl	%eax, %eax
	cmpl	$-1, %r15d
	setne	%al
	subl	%eax, %edi
	addl	%edi, %r15d
	movl	%r15d, %eax
	negl	%eax
	imull	$-1217359, %r15d, %ecx          # imm = 0xFFED6CB1
	shrl	$19, %ecx
	negl	%ecx
	addl	%edi, %ecx
	addl	$120, %ecx
	cltq
	shlq	$4, %rax
	leaq	"?__DOUBLE_POW5_SPLIT@std@@3QAY01$$CB_KA"(%rip), %rdx
	movq	%rsi, %r11
	orq	$2, %r11
	movq	(%rax,%rdx), %r9
	movq	8(%rax,%rdx), %rbx
	movq	%rbx, %rax
	mulq	%r11
	movq	%rdx, %r8
	movq	%rax, %r10
	movq	%r9, %rax
	mulq	%r11
	movq	%rdx, %r11
	addq	%r10, %r11
	adcq	$0, %r8
	shrdq	%cl, %r8, %r11
	movzbl	%r12b, %r10d
	notq	%r10
	addq	%rsi, %r10
	movq	%rbx, %rax
	mulq	%r10
	movq	%rdx, %r8
	movq	%rax, %r14
	movq	%r9, %rax
	mulq	%r10
	movq	%rdx, %r10
	addq	%r14, %r10
	adcq	$0, %r8
	shrdq	%cl, %r8, %r10
	movq	%rbx, %rax
	mulq	%rsi
	movq	%rdx, %r8
	movq	%rax, %rbx
	movq	%r9, %rax
	mulq	%rsi
	movq	%rdx, %r9
	addq	%rbx, %r9
	adcq	$0, %r8
                                        # kill: def $cl killed $cl killed $ecx
	shrdq	%cl, %r8, %r9
	cmpl	$1, %edi
	ja	.LBB50_16
# %bb.15:
	movl	%ebp, %eax
	andl	$1, %eax
	sete	%cl
	subq	%rax, %r11
	andb	%cl, %r12b
	movb	$1, %dil
	movl	%r15d, %r13d
	jmp	.LBB50_22
.LBB50_16:
	cmpl	$62, %edi
	ja	.LBB50_17
# %bb.18:
	decb	%dil
	movq	$-1, %rax
	movl	%edi, %ecx
	shlq	%cl, %rax
	notq	%rax
	testq	%rax, %rsi
	sete	%dil
	jmp	.LBB50_19
.LBB50_7:
	testb	$1, %bpl
	je	.LBB50_11
# %bb.8:
	movl	$-1, %r8d
	.p2align	4, 0x90
.LBB50_9:                               # =>This Inner Loop Header: Depth=1
	movq	%rdi, %rax
	mulq	%rcx
	shrq	$2, %rdx
	leal	(%rdx,%rdx,4), %eax
	incl	%r8d
	cmpl	%edi, %eax
	movq	%rdx, %rdi
	je	.LBB50_9
# %bb.10:
	cmpl	%r13d, %r8d
	adcq	$-1, %r11
.LBB50_2:
	xorl	%edi, %edi
	xorl	%r12d, %r12d
	testb	%dil, %dil
	je	.LBB50_21
	jmp	.LBB50_22
.LBB50_17:
	xorl	%edi, %edi
.LBB50_19:
	xorl	%r12d, %r12d
	movl	%r15d, %r13d
	testb	%dil, %dil
	je	.LBB50_21
	jmp	.LBB50_22
.LBB50_11:
	notq	%rbx
	addq	%rsi, %rbx
	movl	$-1, %r8d
	.p2align	4, 0x90
.LBB50_12:                              # =>This Inner Loop Header: Depth=1
	movq	%rbx, %rax
	mulq	%rcx
	shrq	$2, %rdx
	leal	(%rdx,%rdx,4), %eax
	incl	%r8d
	cmpl	%ebx, %eax
	movq	%rdx, %rbx
	je	.LBB50_12
# %bb.13:
	cmpl	%r13d, %r8d
	setae	%r12b
	xorl	%edi, %edi
	testb	%dil, %dil
	jne	.LBB50_22
.LBB50_21:
	testb	%r12b, %r12b
	jne	.LBB50_22
# %bb.31:
	movq	%r11, %rax
	shrq	$2, %rax
	movabsq	$2951479051793528259, %r8       # imm = 0x28F5C28F5C28F5C3
	mulq	%r8
	movq	%rdx, %rsi
	shrq	$2, %rsi
	movq	%r10, %rax
	shrq	$2, %rax
	mulq	%r8
	movq	%rdx, %rcx
	shrq	$2, %rcx
	xorl	%edi, %edi
	cmpq	%rcx, %rsi
	jbe	.LBB50_32
# %bb.33:
	movq	%r9, %rax
	shrq	$2, %rax
	mulq	%r8
	shrq	$2, %rdx
	imull	$-100, %edx, %eax
	addl	%r9d, %eax
	cmpl	$50, %eax
	setae	%dil
	movl	$2, %r8d
	movq	%rdx, %r9
	jmp	.LBB50_34
.LBB50_22:
	movabsq	$-3689348814741910323, %rbx     # imm = 0xCCCCCCCCCCCCCCCD
	movq	%r11, %rax
	mulq	%rbx
	movq	%rdx, %rsi
	shrq	$3, %rsi
	movq	%r10, %rax
	mulq	%rbx
	shrq	$3, %rdx
	xorl	%r14d, %r14d
	cmpq	%rdx, %rsi
	jbe	.LBB50_23
# %bb.24:
	xorl	%r8d, %r8d
	xorl	%r15d, %r15d
	.p2align	4, 0x90
.LBB50_25:                              # =>This Inner Loop Header: Depth=1
	movq	%rdx, %rcx
	leal	(%rdx,%rdx), %r14d
	movq	%r9, %rax
	mulq	%rbx
	movq	%rdx, %r11
	leal	(%r14,%r14,4), %eax
	shrq	$3, %r11
	leal	(%r11,%r11), %edx
	leal	(%rdx,%rdx,4), %r14d
	negl	%r14d
	addb	%r9b, %r14b
	cmpl	%r10d, %eax
	sete	%al
	andb	%al, %r12b
	testb	%r15b, %r15b
	sete	%al
	andb	%al, %dil
	movq	%rsi, %rax
	mulq	%rbx
	incl	%r8d
	movq	%rdx, %rsi
	shrq	$3, %rsi
	movq	%rcx, %rax
	mulq	%rbx
	shrq	$3, %rdx
	movq	%r11, %r9
	movl	%r14d, %r15d
	movq	%rcx, %r10
	cmpq	%rdx, %rsi
	ja	.LBB50_25
# %bb.26:
	xorb	$1, %r12b
	je	.LBB50_28
	jmp	.LBB50_27
.LBB50_23:
	movq	%r10, %rcx
	xorl	%r8d, %r8d
	movq	%r9, %r11
	xorb	$1, %r12b
	jne	.LBB50_27
.LBB50_28:
	movq	%rcx, %rax
	mulq	%rbx
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	cmpl	%ecx, %eax
	jne	.LBB50_27
	.p2align	4, 0x90
.LBB50_29:                              # =>This Inner Loop Header: Depth=1
	movq	%rdx, %rcx
	movq	%r11, %rax
	mulq	%rbx
	movq	%rdx, %r9
	shrq	$3, %r9
	leal	(%r9,%r9), %eax
	leal	(%rax,%rax,4), %r10d
	negl	%r10d
	addb	%r11b, %r10b
	testb	%r14b, %r14b
	sete	%al
	andb	%al, %dil
	movq	%rcx, %rax
	mulq	%rbx
	incl	%r8d
	shrq	$3, %rdx
	leal	(%rdx,%rdx), %eax
	leal	(%rax,%rax,4), %eax
	movq	%r9, %r11
	movl	%r10d, %r14d
	cmpl	%ecx, %eax
	je	.LBB50_29
	jmp	.LBB50_30
.LBB50_27:
	movl	%r14d, %r10d
	movq	%r11, %r9
.LBB50_30:
	notb	%dil
	cmpb	$5, %r10b
	setne	%dl
	setae	%r10b
	movl	%r9d, %r11d
	orb	%dil, %r11b
	orb	%dl, %r11b
	cmpq	%rcx, %r9
	sete	%cl
	orb	%r12b, %bpl
	andb	%cl, %bpl
	andb	%r10b, %r11b
	orb	%bpl, %r11b
	movq	(%rsp), %rax                    # 8-byte Reload
	jmp	.LBB50_38
.LBB50_32:
	movq	%r11, %rsi
	movq	%r10, %rcx
	xorl	%r8d, %r8d
.LBB50_34:
	movabsq	$-3689348814741910323, %rbx     # imm = 0xCCCCCCCCCCCCCCCD
	movq	%rsi, %rax
	mulq	%rbx
	movq	%rdx, %r10
	movq	%rcx, %rax
	mulq	%rbx
	shrq	$3, %r10
	shrq	$3, %rdx
	cmpq	%rdx, %r10
	jbe	.LBB50_37
	.p2align	4, 0x90
.LBB50_35:                              # =>This Inner Loop Header: Depth=1
	movq	%r9, %r11
	movq	%rdx, %rcx
	movq	%r9, %rax
	mulq	%rbx
	movq	%rdx, %r9
	shrq	$3, %r9
	incl	%r8d
	movq	%r10, %rax
	mulq	%rbx
	movq	%rdx, %r10
	movq	%rcx, %rax
	mulq	%rbx
	shrq	$3, %r10
	shrq	$3, %rdx
	cmpq	%rdx, %r10
	ja	.LBB50_35
# %bb.36:
	leal	(%r9,%r9), %eax
	leal	(%rax,%rax,4), %eax
	subl	%eax, %r11d
	cmpl	$5, %r11d
	setae	%dil
.LBB50_37:
	movq	(%rsp), %rax                    # 8-byte Reload
	cmpq	%rcx, %r9
	sete	%cl
	testb	%dil, %dil
	setne	%r11b
	orb	%cl, %r11b
.LBB50_38:
	addl	%r8d, %r13d
	movzbl	%r11b, %ecx
	addq	%r9, %rcx
	movl	%r13d, 8(%rax)
	movq	%rcx, (%rax)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z"
	.globl	"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z" # -- Begin function ??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z
	.p2align	4, 0x90
"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z": # @"??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z"
.seh_proc "??$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0U__floating_decimal_64@0@W4chars_format@0@N@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r8, %rax
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	160(%rsp), %ecx
	movq	(%r9), %r10
	movl	8(%r9), %r8d
	movl	$17, %r11d
	movabsq	$9999999999999999, %rdx         # imm = 0x2386F26FC0FFFF
	cmpq	%rdx, %r10
	ja	.LBB51_16
# %bb.1:
	movl	$16, %r11d
	movabsq	$999999999999999, %rdx          # imm = 0x38D7EA4C67FFF
	cmpq	%rdx, %r10
	ja	.LBB51_16
# %bb.2:
	movl	$15, %r11d
	movabsq	$99999999999999, %rdx           # imm = 0x5AF3107A3FFF
	cmpq	%rdx, %r10
	ja	.LBB51_16
# %bb.3:
	movq	%r10, %rdx
	shrq	$13, %rdx
	movl	$14, %r11d
	cmpq	$1220703124, %rdx               # imm = 0x48C27394
	ja	.LBB51_16
# %bb.4:
	movq	%r10, %rdx
	shrq	$12, %rdx
	movl	$13, %r11d
	cmpq	$244140624, %rdx                # imm = 0xE8D4A50
	ja	.LBB51_16
# %bb.5:
	movq	%r10, %rdx
	shrq	$11, %rdx
	movl	$12, %r11d
	cmpq	$48828124, %rdx                 # imm = 0x2E90EDC
	ja	.LBB51_16
# %bb.6:
	movq	%r10, %rdx
	shrq	$10, %rdx
	movl	$11, %r11d
	cmpq	$9765624, %rdx                  # imm = 0x9502F8
	ja	.LBB51_16
# %bb.7:
	movl	$10, %r11d
	cmpq	$999999999, %r10                # imm = 0x3B9AC9FF
	ja	.LBB51_16
# %bb.8:
	movl	$9, %r11d
	cmpq	$99999999, %r10                 # imm = 0x5F5E0FF
	ja	.LBB51_16
# %bb.9:
	movl	$8, %r11d
	cmpq	$9999999, %r10                  # imm = 0x98967F
	ja	.LBB51_16
# %bb.10:
	movl	$7, %r11d
	cmpq	$999999, %r10                   # imm = 0xF423F
	ja	.LBB51_16
# %bb.11:
	movl	$6, %r11d
	cmpq	$99999, %r10                    # imm = 0x1869F
	ja	.LBB51_16
# %bb.12:
	movl	$5, %r11d
	cmpq	$9999, %r10                     # imm = 0x270F
	ja	.LBB51_16
# %bb.13:
	movl	$4, %r11d
	cmpq	$999, %r10                      # imm = 0x3E7
	ja	.LBB51_16
# %bb.14:
	movl	$3, %r11d
	cmpq	$99, %r10
	ja	.LBB51_16
# %bb.15:
	cmpq	$10, %r10
	movl	$1, %r11d
	sbbl	$-1, %r11d
.LBB51_16:
	leal	(%r11,%r8), %r9d
	cmpl	$3, %ecx
	je	.LBB51_24
# %bb.17:
	cmpl	$2, %ecx
	je	.LBB51_21
# %bb.18:
	testl	%ecx, %ecx
	jne	.LBB51_25
# %bb.19:
	movl	$-3, %ebx
	movl	$-3, %ebp
	subl	%r11d, %ebp
	xorl	%ecx, %ecx
	cmpl	$1, %r11d
	sete	%dl
	cmovel	%ebx, %ebp
	cmpl	%r8d, %ebp
	jg	.LBB51_25
# %bb.20:
	movb	%dl, %cl
	xorl	$5, %ecx
	cmpl	%ecx, %r8d
	jg	.LBB51_25
.LBB51_21:
	testl	%r8d, %r8d
	js	.LBB51_29
# %bb.22:
	movl	%r9d, %ecx
	cmpq	$1, %r10
	jne	.LBB51_47
# %bb.23:
	leaq	"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QBEB"(%rip), %rcx
	movzbl	(%r8,%rcx), %edx
	movl	%r9d, %ecx
	subl	%edx, %ecx
	jmp	.LBB51_47
.LBB51_24:
	leal	3(%r9), %ecx
	cmpl	$9, %ecx
	jbe	.LBB51_21
.LBB51_25:
	cmpl	$2, %r11d
	movl	%r11d, %ecx
	sbbl	$-1, %ecx
	leal	98(%r9), %edx
	cmpl	$199, %edx
	sbbl	$0, %ecx
	addl	$5, %ecx
	movq	%rax, %rdx
	subq	%rdi, %rdx
	cmpq	%rcx, %rdx
	jl	.LBB51_48
# %bb.26:
	movq	%r10, %rax
	shrq	$32, %rax
	jne	.LBB51_31
# %bb.27:
	xorl	%eax, %eax
	movq	%rsi, 48(%rsp)                  # 8-byte Spill
	cmpl	$10000, %r10d                   # imm = 0x2710
	jae	.LBB51_32
.LBB51_28:
	movl	%r10d, %edx
	jmp	.LBB51_34
.LBB51_29:
	testl	%r9d, %r9d
	jle	.LBB51_46
# %bb.30:
	leal	1(%r11), %ecx
	jmp	.LBB51_47
.LBB51_31:
	movabsq	$-6067343680855748867, %rdx     # imm = 0xABCC77118461CEFD
	movq	%r10, %rax
	mulq	%rdx
	shrq	$26, %rdx
	imull	$-100000000, %edx, %ebx         # imm = 0xFA0A1F00
	addl	%r10d, %ebx
	movl	$3518437209, %eax               # imm = 0xD1B71759
	imulq	%rbx, %rax
	shrq	$45, %rax
	imull	$10000, %eax, %r10d             # imm = 0x2710
	subl	%r10d, %ebx
	imulq	$429497, %rax, %r10             # imm = 0x68DB9
	shrq	$32, %r10
	imull	$10000, %r10d, %r10d            # imm = 0x2710
	subl	%r10d, %eax
	imull	$5243, %ebx, %r10d              # imm = 0x147B
	shrl	$19, %r10d
	imull	$100, %r10d, %ebp
	subl	%ebp, %ebx
	movzwl	%bx, %ebx
	imull	$5243, %eax, %r14d              # imm = 0x147B
	shrl	$19, %r14d
	imull	$100, %r14d, %ebp
	subl	%ebp, %eax
	movzwl	%ax, %eax
	movl	%r11d, %r15d
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r12
	movzwl	(%r12,%rbx,2), %ebx
	movw	%bx, -1(%rdi,%r15)
	movzwl	(%r12,%r10,2), %r10d
	movw	%r10w, -3(%rdi,%r15)
	movzwl	(%r12,%rax,2), %eax
	movw	%ax, -5(%rdi,%r15)
	movzwl	(%r12,%r14,2), %eax
	movw	%ax, -7(%rdi,%r15)
	movl	$8, %eax
	movl	%edx, %r10d
	movq	%rsi, 48(%rsp)                  # 8-byte Spill
	cmpl	$10000, %r10d                   # imm = 0x2710
	jb	.LBB51_28
.LBB51_32:
	movl	%r11d, %esi
	addq	%rdi, %rsi
	movl	$3518437209, %r14d              # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r15
	.p2align	4, 0x90
.LBB51_33:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %edx
	imulq	%r14, %rdx
	shrq	$45, %rdx
	imull	$-10000, %edx, %r12d            # imm = 0xD8F0
	addl	%r10d, %r12d
	imulq	$1374389535, %r12, %r13         # imm = 0x51EB851F
	shrq	$37, %r13
	imull	$100, %r13d, %ebp
	subl	%ebp, %r12d
	movl	%eax, %ebp
	movq	%rsi, %rbx
	subq	%rbp, %rbx
	movzwl	(%r15,%r12,2), %ebp
	movw	%bp, -1(%rbx)
	movzwl	(%r15,%r13,2), %ebp
	movw	%bp, -3(%rbx)
	addl	$4, %eax
	cmpl	$99999999, %r10d                # imm = 0x5F5E0FF
	movl	%edx, %r10d
	ja	.LBB51_33
.LBB51_34:
	cmpl	$100, %edx
	jb	.LBB51_36
# %bb.35:
	movzwl	%dx, %r10d
	shrl	$2, %r10d
	imull	$5243, %r10d, %r10d             # imm = 0x147B
	shrl	$17, %r10d
	imull	$100, %r10d, %esi
	subl	%esi, %edx
	movzwl	%dx, %edx
	movl	%r11d, %esi
	addq	%rdi, %rsi
	movl	%eax, %eax
	notq	%rax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rbx
	movzwl	(%rbx,%rdx,2), %edx
	movw	%dx, (%rax,%rsi)
	movl	%r10d, %edx
.LBB51_36:
	movq	48(%rsp), %rsi                  # 8-byte Reload
	cmpl	$10, %edx
	jb	.LBB51_38
# %bb.37:
	movl	%edx, %eax
	leaq	(%rax,%rax), %rdx
	movl	%edx, %edx
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzbl	1(%rdx,%r10), %edx
	movb	%dl, 2(%rdi)
	movzbl	(%r10,%rax,2), %edx
	movb	%dl, (%rdi)
	movl	$1, %eax
	cmpl	$2, %r11d
	jae	.LBB51_39
	jmp	.LBB51_40
.LBB51_38:
	addb	$48, %dl
	movb	%dl, (%rdi)
	movl	$1, %eax
	cmpl	$2, %r11d
	jb	.LBB51_40
.LBB51_39:
	movb	$46, 1(%rdi)
	leal	1(%r11), %eax
.LBB51_40:
	leal	1(%rax), %r10d
	movl	%eax, %edx
	movb	$101, (%rdi,%rdx)
	testl	%r9d, %r9d
	jle	.LBB51_43
# %bb.41:
	leal	(%r11,%r8), %edx
	decl	%edx
	movb	$43, (%rdi,%r10)
	leal	2(%rax), %r8d
	cmpl	$100, %edx
	jl	.LBB51_44
.LBB51_42:
	movl	%r8d, %r8d
	movl	%edx, %r9d
	movl	$3435973837, %r10d              # imm = 0xCCCCCCCD
	imulq	%r9, %r10
	shrq	$35, %r10
	leal	(%r10,%r10), %r9d
	leal	(%r9,%r9,4), %r9d
	subl	%r9d, %edx
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r9
	movzwl	(%r9,%r10,2), %r9d
	movw	%r9w, (%rdi,%r8)
	orb	$48, %dl
	addl	$4, %eax
	movb	%dl, (%rdi,%rax)
	jmp	.LBB51_45
.LBB51_43:
	movb	$45, (%rdi,%r10)
	movl	$1, %edx
	subl	%r9d, %edx
	leal	2(%rax), %r8d
	cmpl	$100, %edx
	jge	.LBB51_42
.LBB51_44:
	movl	%r8d, %eax
	movslq	%edx, %rdx
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r8
	movzwl	(%r8,%rdx,2), %edx
	movw	%dx, (%rdi,%rax)
.LBB51_45:
	addq	%rcx, %rdi
	jmp	.LBB51_71
.LBB51_46:
	movl	$2, %ecx
	subl	%r8d, %ecx
.LBB51_47:
	movq	%rax, %rdx
	subq	%rdi, %rdx
	movl	%ecx, %r14d
	cmpq	%r14, %rdx
	jge	.LBB51_49
.LBB51_48:
	movq	%rax, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB51_72
.LBB51_49:
	movq	%r14, %rcx
	testl	%r8d, %r8d
	jle	.LBB51_54
# %bb.50:
	cmpl	$22, %r8d
	ja	.LBB51_52
# %bb.51:
	xorl	%edx, %edx
	bsfq	%r10, %rcx
	cmovel	%edx, %ecx
	movq	%r10, %rdx
                                        # kill: def $cl killed $cl killed $rcx
	shrq	%cl, %rdx
	leaq	"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QB_KB"(%rip), %rcx
	cmpq	(%rcx,%r8,8), %rdx
	jbe	.LBB51_53
.LBB51_52:
	movsd	168(%rsp), %xmm3                # xmm3 = mem[0],zero
	movl	$0, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rax, %r8
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
	jmp	.LBB51_72
.LBB51_53:
	movl	%r11d, %ecx
.LBB51_54:
	addq	%rdi, %rcx
	movq	%r10, %rax
	shrq	$32, %rax
	je	.LBB51_56
# %bb.55:
	movabsq	$-6067343680855748867, %rdx     # imm = 0xABCC77118461CEFD
	movq	%r10, %rax
	mulq	%rdx
	shrq	$26, %rdx
	imull	$-100000000, %edx, %eax         # imm = 0xFA0A1F00
	addl	%eax, %r10d
	movl	$3518437209, %eax               # imm = 0xD1B71759
	imulq	%r10, %rax
	shrq	$45, %rax
	imull	$10000, %eax, %ebx              # imm = 0x2710
	subl	%ebx, %r10d
	imulq	$429497, %rax, %rbx             # imm = 0x68DB9
	shrq	$32, %rbx
	imull	$10000, %ebx, %ebx              # imm = 0x2710
	subl	%ebx, %eax
	imull	$5243, %r10d, %ebx              # imm = 0x147B
	shrl	$19, %ebx
	imull	$100, %ebx, %ebp
	subl	%ebp, %r10d
	movzwl	%r10w, %r10d
	imull	$5243, %eax, %r15d              # imm = 0x147B
	shrl	$19, %r15d
	imull	$100, %r15d, %ebp
	subl	%ebp, %eax
	movzwl	%ax, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r12
	movzwl	(%r12,%r10,2), %r10d
	movw	%r10w, -2(%rcx)
	movzwl	(%r12,%rbx,2), %r10d
	movw	%r10w, -4(%rcx)
	movzwl	(%r12,%rax,2), %eax
	movw	%ax, -6(%rcx)
	movzwl	(%r12,%r15,2), %eax
	movw	%ax, -8(%rcx)
	addq	$-8, %rcx
	movq	%rdx, %r10
.LBB51_56:
	cmpl	$10000, %r10d                   # imm = 0x2710
	jb	.LBB51_66
# %bb.57:
	movl	$3518437209, %edx               # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rbx
	.p2align	4, 0x90
.LBB51_58:                              # =>This Inner Loop Header: Depth=1
	movl	%r10d, %eax
	imulq	%rdx, %rax
	shrq	$45, %rax
	imull	$-10000, %eax, %r15d            # imm = 0xD8F0
	addl	%r10d, %r15d
	imulq	$1374389535, %r15, %r12         # imm = 0x51EB851F
	shrq	$37, %r12
	imull	$100, %r12d, %ebp
	subl	%ebp, %r15d
	movzwl	(%rbx,%r15,2), %ebp
	movw	%bp, -2(%rcx)
	movzwl	(%rbx,%r12,2), %ebp
	movw	%bp, -4(%rcx)
	addq	$-4, %rcx
	cmpl	$99999999, %r10d                # imm = 0x5F5E0FF
	movl	%eax, %r10d
	ja	.LBB51_58
# %bb.59:
	cmpl	$100, %eax
	jb	.LBB51_61
.LBB51_60:
	movzwl	%ax, %edx
	shrl	$2, %edx
	imull	$5243, %edx, %edx               # imm = 0x147B
	shrl	$17, %edx
	imull	$100, %edx, %r10d
	subl	%r10d, %eax
	movzwl	%ax, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzwl	(%r10,%rax,2), %eax
	movw	%ax, -2(%rcx)
	addq	$-2, %rcx
	movl	%edx, %eax
.LBB51_61:
	cmpl	$10, %eax
	jb	.LBB51_67
# %bb.62:
	movl	%eax, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rdx
	movzwl	(%rdx,%rax,2), %eax
	movw	%ax, -2(%rcx)
	testl	%r8d, %r8d
	jg	.LBB51_68
.LBB51_63:
	testq	%r8, %r8
	je	.LBB51_70
# %bb.64:
	testl	%r9d, %r9d
	jle	.LBB51_73
# %bb.65:
	leaq	1(%rdi), %rdx
	movl	%r9d, %ebx
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memmove
	movb	$46, (%rdi,%rbx)
	jmp	.LBB51_70
.LBB51_66:
	movl	%r10d, %eax
	cmpl	$100, %eax
	jae	.LBB51_60
	jmp	.LBB51_61
.LBB51_67:
	addb	$48, %al
	movb	%al, -1(%rcx)
	testl	%r8d, %r8d
	jle	.LBB51_63
.LBB51_68:
	movl	%r11d, %ecx
	addq	%rdi, %rcx
	movb	$48, %dl
.LBB51_69:
	callq	memset
.LBB51_70:
	addq	%r14, %rdi
.LBB51_71:
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
.LBB51_72:
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB51_73:
	movw	$11824, (%rdi)                  # imm = 0x2E30
	je	.LBB51_70
# %bb.74:
	negl	%r9d
	leaq	2(%rdi), %rcx
	movb	$48, %dl
	movq	%r9, %r8
	jmp	.LBB51_69
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
.Lfunc_begin24:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$120, %rsp
	.seh_stackalloc 120
	leaq	112(%rsp), %rbp
	.seh_setframe %rbp, 112
	movaps	%xmm6, -16(%rbp)                # 16-byte Spill
	.seh_savexmm %xmm6, 96
	.seh_endprologue
	movq	$-2, -24(%rbp)
	movaps	%xmm2, %xmm6
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movsd	%xmm2, -48(%rbp)
.Ltmp88:
	leaq	-48(%rbp), %rbx
	movq	%rbx, %rcx
	callq	_ldtest
.Ltmp89:
# %bb.1:
	cmpw	$2, %ax
	jne	.LBB52_6
# %bb.2:
.Ltmp90:
	movaps	%xmm6, %xmm0
	callq	_ldsign
.Ltmp91:
# %bb.3:
	leaq	-48(%rbp), %rcx
	movq	%rcx, %r14
	testl	%eax, %eax
	je	.LBB52_5
# %bb.4:
	leaq	-47(%rbp), %r14
	movb	$45, -48(%rbp)
.LBB52_5:
	movb	$110, 2(%r14)
	movw	$24942, (%r14)                  # imm = 0x616E
	addq	$3, %r14
	cmpq	%rcx, %r14
	jne	.LBB52_7
.LBB52_6:
	leaq	-24(%rbp), %r8
	movl	$0, 40(%rsp)
	movl	$0, 32(%rsp)
	leaq	-64(%rbp), %rcx
	leaq	-48(%rbp), %rdx
	movaps	%xmm6, %xmm3
	callq	"??$_Floating_to_chars@$0A@N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	movq	-64(%rbp), %r14
	jmp	.LBB52_7
	.p2align	4, 0x90
.LBB52_10:                              #   in Loop: Header=BB52_7 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB52_7:                               # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB52_11
# %bb.8:                                #   in Loop: Header=BB52_7 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB52_10
# %bb.9:                                #   in Loop: Header=BB52_7 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB52_10
.LBB52_11:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	movaps	-16(%rbp), %xmm6                # 16-byte Reload
	addq	$120, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.seh_endproc
	.def	"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA":
.seh_proc "?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA"
.LBB52_12:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	112(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.seh_endproc
	.def	"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA":
.seh_proc "?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA"
.LBB52_13:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	112(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end24:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z":
	.long	-1                              # ToState
	.long	"?dtor$12@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$13@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z":
	.long	.Lfunc_begin24@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp88@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp90@IMGREL+1                # IP
	.long	1                               # ToState
	.long	.Ltmp91@IMGREL+1                # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@O@Z"
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z"
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$128, %rsp
	.seh_stackalloc 128
	.seh_endprologue
	movq	%rdx, %rsi
	movq	%rcx, %rdi
	xorl	%r14d, %r14d
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rax
	movq	%r8, %rcx
	.p2align	4, 0x90
.LBB53_1:                               # =>This Inner Loop Header: Depth=1
	movl	%r8d, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rax), %edx
	movb	%dl, 127(%rsp,%r14)
	shrq	$4, %rcx
	decq	%r14
	cmpq	$15, %r8
	movq	%rcx, %r8
	ja	.LBB53_1
# %bb.2:
	movq	%r14, %r8
	negq	%r8
	cmpq	$24, %r8
	jle	.LBB53_4
# %bb.3:
	leaq	56(%rsp), %rbx
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jb	.LBB53_6
	jmp	.LBB53_7
.LBB53_4:
	leaq	(%rsp,%r14), %rdx
	addq	$128, %rdx
	leaq	32(%rsp), %rbx
	movq	%rbx, %rcx
	callq	memmove
	subq	%r14, %rbx
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB53_7
.LBB53_6:
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB53_7:
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	$48, (%rcx,%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB53_9
# %bb.8:
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB53_9:
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	$120, (%rcx,%rax)
	leaq	32(%rsp), %r14
	jmp	.LBB53_10
	.p2align	4, 0x90
.LBB53_13:                              #   in Loop: Header=BB53_10 Depth=1
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
.LBB53_10:                              # =>This Inner Loop Header: Depth=1
	cmpq	%rbx, %r14
	je	.LBB53_14
# %bb.11:                               #   in Loop: Header=BB53_10 Depth=1
	movzbl	(%r14), %ebp
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB53_13
# %bb.12:                               #   in Loop: Header=BB53_10 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB53_13
.LBB53_14:
	movq	%rsi, (%rdi)
	movq	%rdi, %rax
	addq	$128, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	.globl	"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z" # -- Begin function ??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z
	.p2align	4, 0x90
"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z": # @"??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
.seh_proc "??$_Parse_format_specs@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	cmpq	%rdx, %rcx
	je	.LBB54_3
# %bb.1:
	cmpb	$125, (%rcx)
	jne	.LBB54_4
.LBB54_3:
	movq	%rcx, %rsi
.LBB54_48:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB54_4:
	movq	%r8, %rdi
	movq	%rdx, %rsi
	callq	"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	cmpq	%rsi, %rax
	je	.LBB54_48
# %bb.5:
	movq	%rax, %rbx
	movsbl	(%rax), %eax
	cmpl	$32, %eax
	je	.LBB54_9
# %bb.6:
	cmpl	$45, %eax
	je	.LBB54_10
# %bb.7:
	cmpl	$43, %eax
	jne	.LBB54_13
# %bb.8:
	movb	$1, 25(%rdi)
	movzbl	24(%rdi), %ecx
	decb	%cl
	movb	$1, %al
	jmp	.LBB54_11
.LBB54_9:
	movb	$1, 25(%rdi)
	movzbl	24(%rdi), %ecx
	decb	%cl
	movb	$3, %al
	jmp	.LBB54_11
.LBB54_10:
	movb	$1, 25(%rdi)
	movzbl	24(%rdi), %ecx
	decb	%cl
	movb	$2, %al
.LBB54_11:
	cmpb	$9, %cl
	jae	.LBB54_49
# %bb.12:
	movq	(%rdi), %rcx
	movb	%al, 10(%rcx)
	incq	%rbx
.LBB54_13:
	cmpq	%rsi, %rbx
	je	.LBB54_48
# %bb.14:
	movzbl	(%rbx), %eax
	cmpb	$35, %al
	jne	.LBB54_18
# %bb.15:
	movb	$1, 25(%rdi)
	movzbl	24(%rdi), %eax
	decb	%al
	cmpb	$9, %al
	jae	.LBB54_49
# %bb.16:
	movq	(%rdi), %rax
	movb	$1, 11(%rax)
	incq	%rbx
	cmpq	%rsi, %rbx
	je	.LBB54_48
# %bb.17:
	movzbl	(%rbx), %eax
.LBB54_18:
	cmpb	$48, %al
	jne	.LBB54_22
# %bb.19:
	movb	$1, 25(%rdi)
	movzbl	24(%rdi), %eax
	decb	%al
	cmpb	$9, %al
	jae	.LBB54_49
# %bb.20:
	movq	(%rdi), %rax
	movb	$1, 13(%rax)
	incq	%rbx
	cmpq	%rsi, %rbx
	je	.LBB54_48
# %bb.21:
	movzbl	(%rbx), %eax
.LBB54_22:
	leal	-49(%rax), %ecx
	cmpb	$8, %cl
	ja	.LBB54_28
# %bb.23:
	incq	%rbx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
.LBB54_24:                              # =>This Inner Loop Header: Depth=1
	leal	(%rcx,%rcx,4), %ecx
	movzbl	%al, %eax
	leal	(%rax,%rcx,2), %ecx
	addl	$-48, %ecx
	cmpq	%rsi, %rbx
	je	.LBB54_33
# %bb.25:                               #   in Loop: Header=BB54_24 Depth=1
	movzbl	(%rbx), %eax
	leal	-48(%rax), %edx
	cmpb	$10, %dl
	jae	.LBB54_34
# %bb.26:                               #   in Loop: Header=BB54_24 Depth=1
	incq	%rbx
	cmpl	$214748364, %ecx                # imm = 0xCCCCCCC
	jbe	.LBB54_24
.LBB54_27:
	leaq	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB54_28:
	cmpb	$123, %al
	jne	.LBB54_36
# %bb.29:
	incq	%rbx
	cmpq	%rsi, %rbx
	je	.LBB54_50
# %bb.30:
	movq	%rdi, 40(%rsp)
	leaq	40(%rsp), %r8
	movq	%rbx, %rcx
	movq	%rsi, %rdx
	callq	"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
	cmpq	%rsi, %rax
	je	.LBB54_50
# %bb.31:
	movq	%rax, %rbx
	cmpb	$125, (%rax)
	jne	.LBB54_50
# %bb.32:
	incq	%rbx
	jmp	.LBB54_36
.LBB54_33:
	movq	%rsi, %rbx
.LBB54_34:
	testl	%ecx, %ecx
	js	.LBB54_27
# %bb.35:
	movq	(%rdi), %rax
	movl	%ecx, (%rax)
.LBB54_36:
	cmpq	%rsi, %rbx
	je	.LBB54_48
# %bb.37:
	movzbl	(%rbx), %edx
	cmpb	$46, %dl
	jne	.LBB54_40
# %bb.38:
	movq	%rbx, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	cmpq	%rsi, %rax
	je	.LBB54_48
# %bb.39:
	movq	%rax, %rbx
	movzbl	(%rax), %edx
.LBB54_40:
	cmpb	$76, %dl
	jne	.LBB54_44
# %bb.41:
	movzbl	24(%rdi), %eax
	decb	%al
	cmpb	$9, %al
	jae	.LBB54_49
# %bb.42:
	movq	(%rdi), %rax
	movb	$1, 12(%rax)
	incq	%rbx
	cmpq	%rsi, %rbx
	je	.LBB54_48
# %bb.43:
	movzbl	(%rbx), %edx
.LBB54_44:
	movq	%rdi, %rcx
	cmpb	$125, %dl
	jne	.LBB54_46
# %bb.45:
	xorl	%edx, %edx
	callq	"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z"
	jmp	.LBB54_47
.LBB54_46:
	callq	"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z"
	incq	%rbx
.LBB54_47:
	movq	%rbx, %rsi
	jmp	.LBB54_48
.LBB54_49:
	leaq	"??_C@_0CM@EFKJINMJ@Format?5specifier?5requires?5numeri@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB54_50:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	.globl	"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z" # -- Begin function ??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z
	.p2align	4, 0x90
"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z": # @"??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
.seh_proc "??$visit_format_arg@U?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@3@@std@@YA?A?<decltype-auto>@@$$QEAU?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	.seh_endprologue
	movzbl	(%r8), %eax
	cmpq	$13, %rax
	ja	.LBB55_17
# %bb.1:
	movq	%rcx, %rsi
	leaq	.LJTI55_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB55_2:
	movq	(%rdx), %rax
	movq	(%rax), %rax
	movq	%rax, (%rsi)
	jmp	.LBB55_16
.LBB55_3:
	movl	8(%r8), %r8d
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movl	16(%rcx), %r9d
	movl	%r9d, 64(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_4:
	movl	8(%r8), %r8d
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movl	16(%rcx), %r9d
	movl	%r9d, 64(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_5:
	movq	8(%r8), %r8
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movl	16(%rcx), %r9d
	movl	%r9d, 64(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_6:
	movq	8(%r8), %r8
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movl	16(%rcx), %r9d
	movl	%r9d, 64(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_7:
	movzbl	8(%r8), %r8d
	movq	(%rdx), %rax
	movq	8(%rdx), %rcx
	movq	24(%rax), %r9
	movl	16(%rcx), %edx
	movl	%edx, 64(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	(%rax), %rdx
	movq	%r9, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_8:
	movzbl	8(%r8), %r8d
	movq	%rdx, %rcx
	movq	%rsi, %rdx
	callq	"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z"
	jmp	.LBB55_16
.LBB55_9:
	movss	8(%r8), %xmm2                   # xmm2 = mem[0],zero,zero,zero
	movq	(%rdx), %rax
	movq	8(%rdx), %r9
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movq	%rax, 32(%rsp)
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_10:
	movsd	8(%r8), %xmm2                   # xmm2 = mem[0],zero
	movq	(%rdx), %rax
	movq	8(%rdx), %r9
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movq	%rax, 32(%rsp)
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_11:
	movsd	8(%r8), %xmm2                   # xmm2 = mem[0],zero
	movq	(%rdx), %rax
	movq	8(%rdx), %r9
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movq	%rax, 32(%rsp)
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB55_16
.LBB55_12:
	movq	8(%r8), %rax
	movq	(%rdx), %rcx
	movq	8(%rdx), %r9
	movq	(%rcx), %rdx
	bsrq	%rax, %rcx
	xorl	$-64, %ecx
	addl	$68, %ecx
	shrl	$2, %ecx
	addl	$2, %ecx
	testq	%rax, %rax
	movl	$3, %r8d
	cmovnel	%ecx, %r8d
	movq	%rax, 48(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z"
	jmp	.LBB55_16
.LBB55_13:
	movq	8(%r8), %rcx
	movq	(%rdx), %rax
	movq	8(%rdx), %rdi
	movq	(%rax), %rbx
	movq	24(%rax), %r14
	movq	%rcx, 48(%rsp)
	callq	strlen
	movq	%rax, 56(%rsp)
	movq	%r14, 32(%rsp)
	leaq	48(%rsp), %r8
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r9
	jmp	.LBB55_15
.LBB55_14:
	movups	8(%r8), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	(%rdx), %rax
	movq	8(%rdx), %r9
	movq	(%rax), %rdx
	movq	24(%rax), %rax
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r8
	movq	%rsi, %rcx
.LBB55_15:
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.LBB55_16:
	movq	%rsi, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
.LBB55_17:
	callq	_invalid_parameter_noinfo_noreturn
	int3
	.p2align	2, 0x90
.LJTI55_0:
	.long	.LBB55_2-.LJTI55_0
	.long	.LBB55_3-.LJTI55_0
	.long	.LBB55_4-.LJTI55_0
	.long	.LBB55_5-.LJTI55_0
	.long	.LBB55_6-.LJTI55_0
	.long	.LBB55_7-.LJTI55_0
	.long	.LBB55_8-.LJTI55_0
	.long	.LBB55_9-.LJTI55_0
	.long	.LBB55_10-.LJTI55_0
	.long	.LBB55_11-.LJTI55_0
	.long	.LBB55_12-.LJTI55_0
	.long	.LBB55_13-.LJTI55_0
	.long	.LBB55_14-.LJTI55_0
	.long	.LBB55_17-.LJTI55_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	.globl	"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z" # -- Begin function ??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z
	.p2align	4, 0x90
"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z": # @"??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
.seh_proc "??$_Parse_align@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r8, %rdi
	movq	%rdx, %rbx
	movq	%rcx, %rsi
	leaq	40(%rsp), %rcx
	leaq	36(%rsp), %r9
	movq	%rsi, %rdx
	movq	%rbx, %r8
	callq	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
	movl	40(%rsp), %ecx
	subl	%esi, %ecx
	xorl	%eax, %eax
	cmpb	$1, 48(%rsp)
	sbbl	%eax, %eax
	orl	%ecx, %eax
	js	.LBB56_17
# %bb.1:
	movl	%eax, %eax
	leaq	(%rsi,%rax), %r14
	xorl	%ecx, %ecx
	cmpq	%rbx, %r14
	cmovneq	%rax, %rcx
	cmoveq	%rsi, %r14
	movsbl	(%rsi,%rcx), %eax
	cmpl	$60, %eax
	je	.LBB56_8
# %bb.2:
	cmpl	$62, %eax
	je	.LBB56_9
# %bb.3:
	movb	$3, %bpl
	cmpl	$94, %eax
	je	.LBB56_10
# %bb.4:
	cmpq	%rsi, %r14
	je	.LBB56_16
# %bb.5:
	movsbl	(%rsi), %eax
	cmpl	$94, %eax
	je	.LBB56_11
# %bb.6:
	movq	%rsi, %r14
	cmpl	$62, %eax
	je	.LBB56_9
# %bb.7:
	movq	%rsi, %r14
	cmpl	$60, %eax
	jne	.LBB56_16
.LBB56_8:
	movb	$1, %bpl
.LBB56_10:
	movq	%r14, %rbx
	subq	%rsi, %rbx
	je	.LBB56_11
.LBB56_12:
	cmpb	$123, (%rsi)
	je	.LBB56_18
# %bb.13:
	cmpq	$5, %rbx
	jae	.LBB56_19
# %bb.14:
	movq	(%rdi), %r15
	leaq	15(%r15), %rcx
	movq	%rsi, %rdx
	movq	%rbx, %r8
	callq	memmove
	leaq	(%r15,%rbx), %rcx
	addq	$15, %rcx
	movq	(%rdi), %r8
	subq	%rcx, %r8
	addq	$19, %r8
	xorl	%edx, %edx
	callq	memset
	movq	(%rdi), %rax
	movb	%bl, 14(%rax)
	movq	%r14, %rsi
	jmp	.LBB56_15
.LBB56_9:
	movb	$2, %bpl
	movq	%r14, %rbx
	subq	%rsi, %rbx
	jne	.LBB56_12
.LBB56_11:
	movq	(%rdi), %rax
.LBB56_15:
	incq	%rsi
	movb	%bpl, 9(%rax)
.LBB56_16:
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB56_17:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB56_18:
	leaq	"??_C@_0BL@KNEDAEPA@invalid?5fill?5character?5?8?$HL?8?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB56_19:
	leaq	"??_C@_0BJ@FNNNKMGD@Invalid?5fill?5?$CItoo?5long?$CJ?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
	.globl	"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z" # -- Begin function ??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z
	.p2align	4, 0x90
"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z": # @"??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
.seh_proc "??$_Parse_precision@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@YAPEBDPEBD0AEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	leaq	1(%rcx), %rax
	cmpq	%rdx, %rax
	je	.LBB57_20
# %bb.1:
	movq	%rdx, %rsi
	movsbl	(%rax), %edx
	movl	%edx, %eax
	addl	$-48, %eax
	cmpl	$9, %eax
	ja	.LBB57_11
# %bb.2:
	addq	$2, %rcx
	xorl	%eax, %eax
	.p2align	4, 0x90
.LBB57_4:                               # =>This Inner Loop Header: Depth=1
	leal	(%rax,%rax,4), %eax
	movsbl	%dl, %edx
	leal	(%rdx,%rax,2), %eax
	addl	$-48, %eax
	cmpq	%rsi, %rcx
	je	.LBB57_7
# %bb.5:                                #   in Loop: Header=BB57_4 Depth=1
	movzbl	(%rcx), %edx
	leal	-48(%rdx), %r9d
	cmpb	$10, %r9b
	jae	.LBB57_6
# %bb.3:                                #   in Loop: Header=BB57_4 Depth=1
	incq	%rcx
	cmpl	$214748364, %eax                # imm = 0xCCCCCCC
	jbe	.LBB57_4
.LBB57_17:
	leaq	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB57_11:
	cmpb	$123, %dl
	jne	.LBB57_20
# %bb.12:
	addq	$2, %rcx
	cmpq	%rsi, %rcx
	je	.LBB57_19
# %bb.13:
	movq	%r8, 40(%rsp)
	leaq	40(%rsp), %r8
	movq	%rsi, %rdx
	callq	"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
	cmpq	%rsi, %rax
	je	.LBB57_19
# %bb.14:
	cmpb	$125, (%rax)
	jne	.LBB57_19
# %bb.15:
	incq	%rax
	movq	%rax, %rsi
	jmp	.LBB57_16
.LBB57_6:
	movq	%rcx, %rsi
.LBB57_7:
	testl	%eax, %eax
	js	.LBB57_17
# %bb.8:
	movzbl	24(%r8), %ecx
	cmpl	$10, %ecx
	ja	.LBB57_10
# %bb.9:
	movl	$1150, %edx                     # imm = 0x47E
	btl	%ecx, %edx
	jb	.LBB57_18
.LBB57_10:
	movq	(%r8), %rcx
	movl	%eax, 4(%rcx)
.LBB57_16:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rsi
	retq
.LBB57_18:
	leaq	"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB57_20:
	leaq	"??_C@_0BN@CAABEHAA@Missing?5precision?5specifier?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB57_19:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z"
	.globl	"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z" # -- Begin function ??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z
	.p2align	4, 0x90
"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z": # @"??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z"
.seh_proc "??$_On_type@D@?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@QEAAXD@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	testb	%dl, %dl
	js	.LBB58_26
# %bb.1:
	cmpb	$120, %dl
	ja	.LBB58_8
# %bb.2:
	movzbl	%dl, %ebx
	movl	$5, %ebp
	movl	$1, %r11d
	movl	$3, %eax
	movb	$1, %r9b
	xorl	%r8d, %r8d
	leaq	.LJTI58_0(%rip), %r10
	movslq	(%r10,%rbx,4), %r13
	addq	%r10, %r13
	movb	$1, %r10b
	xorl	%esi, %esi
	movb	$1, %dil
	xorl	%r14d, %r14d
	movb	$1, %r15b
	movb	$1, %r12b
	jmpq	*%r13
.LBB58_6:
	movl	$2, %eax
	movb	$1, %r8b
	xorl	%r12d, %r12d
	movb	$1, %r9b
	movb	$1, %r10b
	movb	$1, %sil
	movb	$1, %dil
	movl	$2, %r11d
	movb	$1, %r14b
	movb	$1, %r15b
	movl	$2, %ebp
	movl	$2, %ebx
	jmp	.LBB58_10
.LBB58_5:
	movl	$1, %eax
	movb	$1, %r8b
	xorl	%r10d, %r10d
	movb	$1, %r9b
	xorl	%esi, %esi
	movb	$1, %dil
	movb	$1, %r14b
	xorl	%r15d, %r15d
	movl	$1, %ebp
	xorl	%r12d, %r12d
	movl	$1, %ebx
.LBB58_10:
	movzbl	24(%rcx), %r13d
	decl	%r13d
	cmpl	$11, %r13d
	ja	.LBB58_23
# %bb.11:
	leaq	.LJTI58_1(%rip), %rbx
	movslq	(%rbx,%r13,4), %r13
	addq	%rbx, %r13
	jmpq	*%r13
.LBB58_16:
	andb	%dil, %sil
	movl	%r11d, %ebx
	cmpb	$1, %sil
	jne	.LBB58_23
# %bb.17:
	leaq	"??_C@_0CG@PIIJGCKO@Invalid?5presentation?5type?5for?5in@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_18:
	testb	%r10b, %r10b
	jne	.LBB58_25
# %bb.19:
	leaq	"??_C@_0CN@EEOMCCM@Invalid?5presentation?5type?5for?5fl@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_20:
	andb	%r9b, %r8b
	movl	%eax, %ebx
	cmpb	$1, %r8b
	jne	.LBB58_23
# %bb.21:
	leaq	"??_C@_0CF@MMFFCGKF@Invalid?5presentation?5type?5for?5st@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_12:
	andb	%r15b, %r8b
	movl	%eax, %ebx
	cmpb	$1, %r8b
	jne	.LBB58_23
# %bb.13:
	leaq	"??_C@_0CD@PLBGEFIO@Invalid?5presentation?5type?5for?5bo@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_14:
	andb	%r15b, %r14b
	andb	%r14b, %r9b
	movl	%ebp, %ebx
	cmpb	$1, %r9b
	jne	.LBB58_23
# %bb.15:
	leaq	"??_C@_0CD@IFHOEGFC@Invalid?5presentation?5type?5for?5ch@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_22:
	movl	$4, %ebx
	testb	%r12b, %r12b
	je	.LBB58_27
.LBB58_23:
	cmpb	$0, 25(%rcx)
	je	.LBB58_25
# %bb.24:
	addl	$-3, %ebx
	cmpl	$-3, %ebx
	jbe	.LBB58_28
.LBB58_25:
	movq	(%rcx), %rax
	movb	%dl, 8(%rax)
	addq	$40, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB58_9:
	movl	$6, %eax
	movb	$1, %r8b
	xorl	%r9d, %r9d
	xorl	%r10d, %r10d
	movb	$1, %sil
	movb	$1, %dil
	movl	$6, %r11d
	movb	$1, %r14b
	movb	$1, %r15b
	movl	$6, %ebp
	xorl	%r12d, %r12d
	movl	$6, %ebx
	jmp	.LBB58_10
.LBB58_4:
	movl	$5, %eax
	movb	$1, %r8b
	xorl	%r10d, %r10d
	movb	$1, %r9b
	movb	$1, %sil
	xorl	%edi, %edi
	movl	$5, %r11d
	xorl	%r14d, %r14d
	movb	$1, %r15b
	xorl	%r12d, %r12d
	movl	$5, %ebx
	jmp	.LBB58_10
.LBB58_7:
	movl	$4, %eax
	movb	$1, %r8b
	xorl	%r10d, %r10d
	movb	$1, %r9b
	movb	$1, %sil
	movb	$1, %dil
	movl	$4, %r11d
	movb	$1, %r14b
	movb	$1, %r15b
	movl	$4, %ebp
	movb	$1, %r12b
	movl	$4, %ebx
	jmp	.LBB58_10
.LBB58_3:
	movb	$1, %r9b
	xorl	%r8d, %r8d
	xorl	%r10d, %r10d
	movb	$1, %sil
	movb	$1, %dil
	movl	$3, %r11d
	movb	$1, %r14b
	movb	$1, %r15b
	movl	$3, %ebp
	xorl	%r12d, %r12d
	movl	$3, %ebx
	jmp	.LBB58_10
.LBB58_26:
	leaq	"??_C@_0BM@ONFDPAFF@Invalid?5type?5specification?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_28:
	leaq	"??_C@_0DI@JFEOALGI@Modifier?5requires?5an?5integer?5pre@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_27:
	leaq	"??_C@_0CG@LHDOJLDP@Invalid?5presentation?5type?5for?5po@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB58_8:
	leaq	"??_C@_0CE@OLPMMFCN@Invalid?5presentation?5type?5specif@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI58_0:
	.long	.LBB58_10-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_9-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_4-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_6-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
	.long	.LBB58_7-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_3-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_8-.LJTI58_0
	.long	.LBB58_5-.LJTI58_0
.LJTI58_1:
	.long	.LBB58_16-.LJTI58_1
	.long	.LBB58_16-.LJTI58_1
	.long	.LBB58_16-.LJTI58_1
	.long	.LBB58_16-.LJTI58_1
	.long	.LBB58_12-.LJTI58_1
	.long	.LBB58_14-.LJTI58_1
	.long	.LBB58_18-.LJTI58_1
	.long	.LBB58_18-.LJTI58_1
	.long	.LBB58_18-.LJTI58_1
	.long	.LBB58_22-.LJTI58_1
	.long	.LBB58_20-.LJTI58_1
	.long	.LBB58_20-.LJTI58_1
	.seh_endproc
                                        # -- End function
	.def	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
	.globl	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z" # -- Begin function ?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z
	.p2align	4, 0x90
"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z": # @"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
.seh_proc "?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	.seh_endprologue
	movq	%rcx, %rax
	movzbl	(%rdx), %r10d
	movl	%r10d, (%r9)
	testb	%r10b, %r10b
	js	.LBB59_2
# %bb.1:
	incq	%rdx
.LBB59_30:
	movb	$1, %cl
.LBB59_31:
	movq	%rdx, %r8
	jmp	.LBB59_32
.LBB59_2:
	leal	62(%r10), %r11d
	cmpb	$30, %r11b
	jae	.LBB59_4
# %bb.3:
	movl	$2, %ecx
.LBB59_8:
	xorl	%esi, %esi
	leaq	1(%rdx), %rdi
	cmpq	%r8, %rdi
	je	.LBB59_10
.LBB59_11:
	leal	-224(%r10), %ebx
	cmpl	$20, %ebx
	ja	.LBB59_18
# %bb.12:
	leaq	.LJTI59_0(%rip), %r14
	movslq	(%r14,%rbx,4), %rbx
	addq	%r14, %rbx
	jmpq	*%rbx
.LBB59_13:
	cmpb	$-97, (%rdi)
	ja	.LBB59_18
	jmp	.LBB59_14
.LBB59_4:
	movl	%r10d, %ecx
	andb	$-16, %cl
	cmpb	$-32, %cl
	jne	.LBB59_6
# %bb.5:
	movl	$3, %ecx
	movb	$1, %sil
	leaq	1(%rdx), %rdi
	cmpq	%r8, %rdi
	jne	.LBB59_11
.LBB59_10:
	movl	$65533, (%r9)                   # imm = 0xFFFD
	xorl	%ecx, %ecx
	jmp	.LBB59_32
.LBB59_6:
	leal	16(%r10), %ecx
	cmpb	$5, %cl
	jae	.LBB59_33
# %bb.7:
	movl	$4, %ecx
	jmp	.LBB59_8
.LBB59_33:
	movl	$65533, (%r9)                   # imm = 0xFFFD
	incq	%rdx
	xorl	%ecx, %ecx
	jmp	.LBB59_31
.LBB59_15:
	cmpb	$-96, (%rdi)
	jb	.LBB59_18
	jmp	.LBB59_14
.LBB59_16:
	cmpb	$-113, (%rdi)
	ja	.LBB59_18
	jmp	.LBB59_14
.LBB59_17:
	cmpb	$-112, (%rdi)
	jae	.LBB59_14
.LBB59_18:
	leal	-2(%rcx), %edi
	cmpl	$2, %edi
	ja	.LBB59_20
# %bb.19:
	movslq	%edi, %rdi
	leaq	".Lswitch.table.?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"(%rip), %rbx
	andl	(%rbx,%rdi,4), %r10d
	movl	%r10d, (%r9)
.LBB59_20:
	leaq	1(%rdx), %rdi
	cmpq	%r8, %rdi
	jae	.LBB59_14
# %bb.21:
	movzbl	(%rdi), %ebx
	cmpb	$-64, %bl
	jl	.LBB59_22
.LBB59_14:
	movl	$65533, (%r9)                   # imm = 0xFFFD
	xorl	%ecx, %ecx
	movq	%rdi, %r8
.LBB59_32:
	movq	%r8, (%rax)
	movb	%cl, 8(%rax)
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
.LBB59_22:
	shll	$6, %r10d
	andl	$63, %ebx
	orl	%r10d, %ebx
	movl	%ebx, (%r9)
	cmpb	$30, %r11b
	jae	.LBB59_23
.LBB59_29:
	movl	%ecx, %ecx
	addq	%rcx, %rdx
	jmp	.LBB59_30
.LBB59_23:
	leaq	2(%rdx), %rdi
	cmpq	%r8, %rdi
	jae	.LBB59_14
# %bb.24:
	movzbl	(%rdi), %r10d
	cmpb	$-65, %r10b
	jg	.LBB59_14
# %bb.25:
	shll	$6, %ebx
	andl	$63, %r10d
	orl	%ebx, %r10d
	movl	%r10d, (%r9)
	testb	%sil, %sil
	jne	.LBB59_29
# %bb.26:
	leaq	3(%rdx), %rdi
	cmpq	%r8, %rdi
	jae	.LBB59_14
# %bb.27:
	movzbl	(%rdi), %r8d
	cmpb	$-65, %r8b
	jg	.LBB59_14
# %bb.28:
	shll	$6, %r10d
	andl	$63, %r8d
	orl	%r10d, %r8d
	movl	%r8d, (%r9)
	jmp	.LBB59_29
	.p2align	2, 0x90
.LJTI59_0:
	.long	.LBB59_13-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_15-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_16-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_18-.LJTI59_0
	.long	.LBB59_17-.LJTI59_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
	.globl	"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z" # -- Begin function ??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z
	.p2align	4, 0x90
"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z": # @"??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
.seh_proc "??$_Parse_arg_id@DU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Width_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rcx, %rsi
	movzbl	(%rcx), %ecx
	cmpl	$125, %ecx
	je	.LBB60_2
# %bb.1:
	cmpl	$58, %ecx
	jne	.LBB60_4
.LBB60_2:
	movq	(%r8), %rcx
	callq	"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
	jmp	.LBB60_3
.LBB60_4:
	leal	-48(%rcx), %eax
	cmpb	$9, %al
	ja	.LBB60_16
# %bb.5:
	incq	%rsi
	xorl	%eax, %eax
	cmpb	$48, %cl
	je	.LBB60_6
	.p2align	4, 0x90
.LBB60_11:                              # =>This Inner Loop Header: Depth=1
	leal	(%rax,%rax,4), %eax
	movzbl	%cl, %ecx
	leal	(%rcx,%rax,2), %eax
	addl	$-48, %eax
	cmpq	%rdx, %rsi
	je	.LBB60_12
# %bb.13:                               #   in Loop: Header=BB60_11 Depth=1
	movzbl	(%rsi), %ecx
	leal	-48(%rcx), %r9d
	cmpb	$10, %r9b
	jae	.LBB60_14
# %bb.10:                               #   in Loop: Header=BB60_11 Depth=1
	incq	%rsi
	cmpl	$214748364, %eax                # imm = 0xCCCCCCC
	jbe	.LBB60_11
.LBB60_15:
	leaq	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB60_12:
	movq	%rdx, %rsi
.LBB60_14:
	testl	%eax, %eax
	js	.LBB60_15
.LBB60_6:
	cmpq	%rdx, %rsi
	je	.LBB60_16
# %bb.7:
	movzbl	(%rsi), %ecx
	cmpl	$58, %ecx
	je	.LBB60_9
# %bb.8:
	cmpl	$125, %ecx
	jne	.LBB60_16
.LBB60_9:
	movl	%eax, %edx
	movq	(%r8), %rcx
	callq	"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
.LBB60_3:
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rsi
	retq
.LBB60_16:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
	.globl	"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z" # -- Begin function ??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z
	.p2align	4, 0x90
"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z": # @"??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
.seh_proc "??$_On_dynamic_width@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$80, %rsp
	.seh_stackalloc 80
	.seh_endprologue
	movq	%rcx, %rsi
	movq	8(%rcx), %rcx
	movq	24(%rcx), %rax
	testq	%rax, %rax
	js	.LBB61_14
# %bb.1:
	leaq	1(%rax), %rdx
	movq	%rdx, 24(%rcx)
	movq	16(%rsi), %rcx
	movq	8(%rcx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB61_9
# %bb.2:
	movq	16(%rcx), %r9
	movq	(%r9,%rax,8), %rcx
	movq	%rcx, %rax
	shrq	$60, %rax
	leal	-1(%rax), %r8d
	cmpl	$12, %r8d
	ja	.LBB61_9
# %bb.3:
	leaq	(%r9,%rdx,8), %rdx
	movabsq	$1152921504606846975, %r9       # imm = 0xFFFFFFFFFFFFFFF
	andq	%r9, %rcx
	leaq	.LJTI61_0(%rip), %r9
	movslq	(%r9,%r8,4), %r8
	addq	%r9, %r8
	jmpq	*%r8
.LBB61_7:
	movq	(%rdx,%rcx), %rcx
	movq	%rcx, 40(%rsp)
	jmp	.LBB61_11
.LBB61_10:
	movl	(%rdx,%rcx), %ecx
	movl	%ecx, 40(%rsp)
	jmp	.LBB61_11
.LBB61_4:
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 40(%rsp)
	jmp	.LBB61_11
.LBB61_6:
	movsd	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB61_11
.LBB61_8:
	movq	(%rdx,%rcx), %r8
	movq	%r8, 40(%rsp)
	movq	8(%rdx,%rcx), %rcx
	jmp	.LBB61_12
.LBB61_5:
	movss	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB61_11:
                                        # implicit-def: $rcx
.LBB61_12:
	movb	%al, 56(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	%rcx, 72(%rsp)
	leaq	48(%rsp), %rcx
	leaq	56(%rsp), %rdx
	callq	"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	testq	$-2147483648, %rax              # imm = 0x80000000
	jne	.LBB61_15
# %bb.13:
	movq	(%rsi), %rcx
	movl	%eax, (%rcx)
	addq	$80, %rsp
	popq	%rsi
	retq
.LBB61_14:
	leaq	"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB61_9:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB61_15:
	leaq	"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI61_0:
	.long	.LBB61_10-.LJTI61_0
	.long	.LBB61_10-.LJTI61_0
	.long	.LBB61_7-.LJTI61_0
	.long	.LBB61_7-.LJTI61_0
	.long	.LBB61_4-.LJTI61_0
	.long	.LBB61_4-.LJTI61_0
	.long	.LBB61_5-.LJTI61_0
	.long	.LBB61_6-.LJTI61_0
	.long	.LBB61_6-.LJTI61_0
	.long	.LBB61_7-.LJTI61_0
	.long	.LBB61_7-.LJTI61_0
	.long	.LBB61_8-.LJTI61_0
	.long	.LBB61_8-.LJTI61_0
	.seh_endproc
                                        # -- End function
	.def	"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	.globl	"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z" # -- Begin function ??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z
	.p2align	4, 0x90
"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z": # @"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
.seh_proc "??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
# %bb.0:
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	movzbl	(%rdx), %eax
	cmpq	$13, %rax
	ja	.LBB62_7
# %bb.1:
	leaq	.LJTI62_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB62_2:
	movl	8(%rdx), %eax
	testl	%eax, %eax
	js	.LBB62_3
.LBB62_9:
	addq	$40, %rsp
	retq
.LBB62_8:
	movl	8(%rdx), %eax
	addq	$40, %rsp
	retq
.LBB62_5:
	movq	8(%rdx), %rax
	addq	$40, %rsp
	retq
.LBB62_4:
	movq	8(%rdx), %rax
	testq	%rax, %rax
	jns	.LBB62_9
.LBB62_3:
	leaq	"??_C@_0BA@INGMONDA@Negative?5width?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB62_6:
	leaq	"??_C@_0BJ@FLMOJPKL@Width?5is?5not?5an?5integer?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB62_7:
	callq	_invalid_parameter_noinfo_noreturn
	int3
	.p2align	2, 0x90
.LJTI62_0:
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_2-.LJTI62_0
	.long	.LBB62_8-.LJTI62_0
	.long	.LBB62_4-.LJTI62_0
	.long	.LBB62_5-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.long	.LBB62_6-.LJTI62_0
	.seh_endproc
                                        # -- End function
	.def	"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
	.globl	"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z" # -- Begin function ??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z
	.p2align	4, 0x90
"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z": # @"??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
.seh_proc "??$_On_dynamic_width@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$80, %rsp
	.seh_stackalloc 80
	.seh_endprologue
	movq	8(%rcx), %rax
	cmpq	$0, 24(%rax)
	jg	.LBB63_14
# %bb.1:
	movq	%rcx, %rsi
	movq	$-1, 24(%rax)
	movq	16(%rcx), %rax
	movq	8(%rax), %r8
	cmpq	%rdx, %r8
	jbe	.LBB63_9
# %bb.2:
	movq	16(%rax), %r10
	movq	(%r10,%rdx,8), %rcx
	movq	%rcx, %rax
	shrq	$60, %rax
	leal	-1(%rax), %r9d
	cmpl	$12, %r9d
	ja	.LBB63_9
# %bb.3:
	leaq	(%r10,%r8,8), %rdx
	movabsq	$1152921504606846975, %r8       # imm = 0xFFFFFFFFFFFFFFF
	andq	%r8, %rcx
	leaq	.LJTI63_0(%rip), %r8
	movslq	(%r8,%r9,4), %r9
	addq	%r8, %r9
	jmpq	*%r9
.LBB63_7:
	movq	(%rdx,%rcx), %rcx
	movq	%rcx, 40(%rsp)
	jmp	.LBB63_11
.LBB63_10:
	movl	(%rdx,%rcx), %ecx
	movl	%ecx, 40(%rsp)
	jmp	.LBB63_11
.LBB63_4:
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 40(%rsp)
	jmp	.LBB63_11
.LBB63_6:
	movsd	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB63_11
.LBB63_8:
	movq	(%rdx,%rcx), %r8
	movq	%r8, 40(%rsp)
	movq	8(%rdx,%rcx), %rcx
	jmp	.LBB63_12
.LBB63_5:
	movss	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB63_11:
                                        # implicit-def: $rcx
.LBB63_12:
	movb	%al, 56(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	%rcx, 72(%rsp)
	leaq	48(%rsp), %rcx
	leaq	56(%rsp), %rdx
	callq	"??$visit_format_arg@V_Width_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Width_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	testq	$-2147483648, %rax              # imm = 0x80000000
	jne	.LBB63_15
# %bb.13:
	movq	(%rsi), %rcx
	movl	%eax, (%rcx)
	addq	$80, %rsp
	popq	%rsi
	retq
.LBB63_14:
	leaq	"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB63_9:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB63_15:
	leaq	"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI63_0:
	.long	.LBB63_10-.LJTI63_0
	.long	.LBB63_10-.LJTI63_0
	.long	.LBB63_7-.LJTI63_0
	.long	.LBB63_7-.LJTI63_0
	.long	.LBB63_4-.LJTI63_0
	.long	.LBB63_4-.LJTI63_0
	.long	.LBB63_5-.LJTI63_0
	.long	.LBB63_6-.LJTI63_0
	.long	.LBB63_6-.LJTI63_0
	.long	.LBB63_7-.LJTI63_0
	.long	.LBB63_7-.LJTI63_0
	.long	.LBB63_8-.LJTI63_0
	.long	.LBB63_8-.LJTI63_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
	.globl	"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z" # -- Begin function ??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z
	.p2align	4, 0x90
"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z": # @"??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
.seh_proc "??$_Parse_arg_id@DU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@std@@@std@@YAPEBDPEBD0$$QEAU?$_Precision_adapter@DAEAV?$_Specs_checker@V?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@@std@@@0@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rcx, %rsi
	movzbl	(%rcx), %ecx
	cmpl	$125, %ecx
	je	.LBB64_2
# %bb.1:
	cmpl	$58, %ecx
	jne	.LBB64_6
.LBB64_2:
	movq	(%r8), %rcx
	movzbl	24(%rcx), %eax
	cmpl	$10, %eax
	ja	.LBB64_4
# %bb.3:
	movl	$1150, %edx                     # imm = 0x47E
	btl	%eax, %edx
	jb	.LBB64_20
.LBB64_4:
	callq	"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
	jmp	.LBB64_5
.LBB64_6:
	leal	-48(%rcx), %eax
	cmpb	$9, %al
	ja	.LBB64_21
# %bb.7:
	incq	%rsi
	xorl	%eax, %eax
	cmpb	$48, %cl
	je	.LBB64_8
	.p2align	4, 0x90
.LBB64_15:                              # =>This Inner Loop Header: Depth=1
	leal	(%rax,%rax,4), %eax
	movzbl	%cl, %ecx
	leal	(%rcx,%rax,2), %eax
	addl	$-48, %eax
	cmpq	%rdx, %rsi
	je	.LBB64_16
# %bb.17:                               #   in Loop: Header=BB64_15 Depth=1
	movzbl	(%rsi), %ecx
	leal	-48(%rcx), %r9d
	cmpb	$10, %r9b
	jae	.LBB64_18
# %bb.14:                               #   in Loop: Header=BB64_15 Depth=1
	incq	%rsi
	cmpl	$214748364, %eax                # imm = 0xCCCCCCC
	jbe	.LBB64_15
.LBB64_19:
	leaq	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB64_16:
	movq	%rdx, %rsi
.LBB64_18:
	testl	%eax, %eax
	js	.LBB64_19
.LBB64_8:
	cmpq	%rdx, %rsi
	je	.LBB64_21
# %bb.9:
	movzbl	(%rsi), %ecx
	cmpl	$58, %ecx
	je	.LBB64_11
# %bb.10:
	cmpl	$125, %ecx
	jne	.LBB64_21
.LBB64_11:
	movq	(%r8), %rcx
	movzbl	24(%rcx), %edx
	cmpl	$10, %edx
	ja	.LBB64_13
# %bb.12:
	movl	$1150, %r8d                     # imm = 0x47E
	btl	%edx, %r8d
	jb	.LBB64_20
.LBB64_13:
	movl	%eax, %edx
	callq	"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
.LBB64_5:
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rsi
	retq
.LBB64_20:
	leaq	"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB64_21:
	leaq	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
	.globl	"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z" # -- Begin function ??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z
	.p2align	4, 0x90
"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z": # @"??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
.seh_proc "??$_On_dynamic_precision@U_Auto_id_tag@std@@@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAXU_Auto_id_tag@1@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$80, %rsp
	.seh_stackalloc 80
	.seh_endprologue
	movq	%rcx, %rsi
	movq	8(%rcx), %rcx
	movq	24(%rcx), %rax
	testq	%rax, %rax
	js	.LBB65_14
# %bb.1:
	leaq	1(%rax), %rdx
	movq	%rdx, 24(%rcx)
	movq	16(%rsi), %rcx
	movq	8(%rcx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB65_9
# %bb.2:
	movq	16(%rcx), %r9
	movq	(%r9,%rax,8), %rcx
	movq	%rcx, %rax
	shrq	$60, %rax
	leal	-1(%rax), %r8d
	cmpl	$12, %r8d
	ja	.LBB65_9
# %bb.3:
	leaq	(%r9,%rdx,8), %rdx
	movabsq	$1152921504606846975, %r9       # imm = 0xFFFFFFFFFFFFFFF
	andq	%r9, %rcx
	leaq	.LJTI65_0(%rip), %r9
	movslq	(%r9,%r8,4), %r8
	addq	%r9, %r8
	jmpq	*%r8
.LBB65_7:
	movq	(%rdx,%rcx), %rcx
	movq	%rcx, 40(%rsp)
	jmp	.LBB65_11
.LBB65_10:
	movl	(%rdx,%rcx), %ecx
	movl	%ecx, 40(%rsp)
	jmp	.LBB65_11
.LBB65_4:
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 40(%rsp)
	jmp	.LBB65_11
.LBB65_6:
	movsd	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB65_11
.LBB65_8:
	movq	(%rdx,%rcx), %r8
	movq	%r8, 40(%rsp)
	movq	8(%rdx,%rcx), %rcx
	jmp	.LBB65_12
.LBB65_5:
	movss	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB65_11:
                                        # implicit-def: $rcx
.LBB65_12:
	movb	%al, 56(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	%rcx, 72(%rsp)
	leaq	48(%rsp), %rcx
	leaq	56(%rsp), %rdx
	callq	"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	testq	$-2147483648, %rax              # imm = 0x80000000
	jne	.LBB65_15
# %bb.13:
	movq	(%rsi), %rcx
	movl	%eax, 4(%rcx)
	addq	$80, %rsp
	popq	%rsi
	retq
.LBB65_14:
	leaq	"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB65_9:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB65_15:
	leaq	"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI65_0:
	.long	.LBB65_10-.LJTI65_0
	.long	.LBB65_10-.LJTI65_0
	.long	.LBB65_7-.LJTI65_0
	.long	.LBB65_7-.LJTI65_0
	.long	.LBB65_4-.LJTI65_0
	.long	.LBB65_4-.LJTI65_0
	.long	.LBB65_5-.LJTI65_0
	.long	.LBB65_6-.LJTI65_0
	.long	.LBB65_6-.LJTI65_0
	.long	.LBB65_7-.LJTI65_0
	.long	.LBB65_7-.LJTI65_0
	.long	.LBB65_8-.LJTI65_0
	.long	.LBB65_8-.LJTI65_0
	.seh_endproc
                                        # -- End function
	.def	"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	.globl	"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z" # -- Begin function ??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z
	.p2align	4, 0x90
"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z": # @"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
.seh_proc "??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
# %bb.0:
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	movzbl	(%rdx), %eax
	cmpq	$13, %rax
	ja	.LBB66_7
# %bb.1:
	leaq	.LJTI66_0(%rip), %rcx
	movslq	(%rcx,%rax,4), %rax
	addq	%rcx, %rax
	jmpq	*%rax
.LBB66_2:
	movl	8(%rdx), %eax
	testl	%eax, %eax
	js	.LBB66_3
.LBB66_9:
	addq	$40, %rsp
	retq
.LBB66_8:
	movl	8(%rdx), %eax
	addq	$40, %rsp
	retq
.LBB66_5:
	movq	8(%rdx), %rax
	addq	$40, %rsp
	retq
.LBB66_4:
	movq	8(%rdx), %rax
	testq	%rax, %rax
	jns	.LBB66_9
.LBB66_3:
	leaq	"??_C@_0BE@DEGOCOHL@Negative?5precision?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB66_6:
	leaq	"??_C@_0BN@DNNEEKIC@Precision?5is?5not?5an?5integer?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB66_7:
	callq	_invalid_parameter_noinfo_noreturn
	int3
	.p2align	2, 0x90
.LJTI66_0:
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_2-.LJTI66_0
	.long	.LBB66_8-.LJTI66_0
	.long	.LBB66_4-.LJTI66_0
	.long	.LBB66_5-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.long	.LBB66_6-.LJTI66_0
	.seh_endproc
                                        # -- End function
	.def	"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
	.globl	"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z" # -- Begin function ??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z
	.p2align	4, 0x90
"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z": # @"??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
.seh_proc "??$_On_dynamic_precision@_K@?$_Specs_handler@V?$basic_format_parse_context@D@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@QEAAX_K@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$80, %rsp
	.seh_stackalloc 80
	.seh_endprologue
	movq	8(%rcx), %rax
	cmpq	$0, 24(%rax)
	jg	.LBB67_14
# %bb.1:
	movq	%rcx, %rsi
	movq	$-1, 24(%rax)
	movq	16(%rcx), %rax
	movq	8(%rax), %r8
	cmpq	%rdx, %r8
	jbe	.LBB67_9
# %bb.2:
	movq	16(%rax), %r10
	movq	(%r10,%rdx,8), %rcx
	movq	%rcx, %rax
	shrq	$60, %rax
	leal	-1(%rax), %r9d
	cmpl	$12, %r9d
	ja	.LBB67_9
# %bb.3:
	leaq	(%r10,%r8,8), %rdx
	movabsq	$1152921504606846975, %r8       # imm = 0xFFFFFFFFFFFFFFF
	andq	%r8, %rcx
	leaq	.LJTI67_0(%rip), %r8
	movslq	(%r8,%r9,4), %r9
	addq	%r8, %r9
	jmpq	*%r9
.LBB67_7:
	movq	(%rdx,%rcx), %rcx
	movq	%rcx, 40(%rsp)
	jmp	.LBB67_11
.LBB67_10:
	movl	(%rdx,%rcx), %ecx
	movl	%ecx, 40(%rsp)
	jmp	.LBB67_11
.LBB67_4:
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 40(%rsp)
	jmp	.LBB67_11
.LBB67_6:
	movsd	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero
	movsd	%xmm0, 40(%rsp)
	jmp	.LBB67_11
.LBB67_8:
	movq	(%rdx,%rcx), %r8
	movq	%r8, 40(%rsp)
	movq	8(%rdx,%rcx), %rcx
	jmp	.LBB67_12
.LBB67_5:
	movss	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 40(%rsp)
.LBB67_11:
                                        # implicit-def: $rcx
.LBB67_12:
	movb	%al, 56(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	%rcx, 72(%rsp)
	leaq	48(%rsp), %rcx
	leaq	56(%rsp), %rdx
	callq	"??$visit_format_arg@V_Precision_checker@std@@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@2@@std@@YA?A?<decltype-auto>@@$$QEAV_Precision_checker@0@V?$basic_format_arg@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@0@@Z"
	testq	$-2147483648, %rax              # imm = 0x80000000
	jne	.LBB67_15
# %bb.13:
	movq	(%rsi), %rcx
	movl	%eax, 4(%rcx)
	addq	$80, %rsp
	popq	%rsi
	retq
.LBB67_14:
	leaq	"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB67_9:
	leaq	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB67_15:
	leaq	"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
	int3
	.p2align	2, 0x90
.LJTI67_0:
	.long	.LBB67_10-.LJTI67_0
	.long	.LBB67_10-.LJTI67_0
	.long	.LBB67_7-.LJTI67_0
	.long	.LBB67_7-.LJTI67_0
	.long	.LBB67_4-.LJTI67_0
	.long	.LBB67_4-.LJTI67_0
	.long	.LBB67_5-.LJTI67_0
	.long	.LBB67_6-.LJTI67_0
	.long	.LBB67_6-.LJTI67_0
	.long	.LBB67_7-.LJTI67_0
	.long	.LBB67_7-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.long	.LBB67_8-.LJTI67_0
	.seh_endproc
                                        # -- End function
	.def	"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z"
	.globl	"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z" # -- Begin function ??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z
	.p2align	4, 0x90
"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z": # @"??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z"
.seh_proc "??$?RD@?$_Arg_formatter@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@QEAA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@D@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$128, %rsp
	.seh_stackalloc 128
	.seh_endprologue
	movq	%rdx, %rsi
	movq	(%rcx), %rdx
	movq	8(%rcx), %rcx
	movq	24(%rdx), %rax
	movl	16(%rcx), %r9d
	movl	%r9d, 96(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	(%rdx), %rdx
	movb	%r8b, 47(%rsp)
	movzbl	88(%rsp), %ecx
	testl	%ecx, %ecx
	je	.LBB68_5
# %bb.1:
	cmpl	$63, %ecx
	je	.LBB68_4
# %bb.2:
	cmpl	$99, %ecx
	jne	.LBB68_3
.LBB68_5:
	leaq	47(%rsp), %rcx
	movq	%rcx, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r8
	leaq	80(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB68_6
.LBB68_4:
	movl	96(%rsp), %eax
	movl	%eax, 64(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	leaq	47(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$1, 120(%rsp)
	movb	$39, 32(%rsp)
	leaq	112(%rsp), %r8
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB68_6
.LBB68_3:
	movl	96(%rsp), %ecx
	movl	%ecx, 64(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rax, 32(%rsp)
	leaq	48(%rsp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.LBB68_6:
	movq	%rsi, %rax
	addq	$128, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin25:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$376, %rsp                      # imm = 0x178
	.seh_stackalloc 376
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 240(%rbp)
	movq	%r9, %rbx
	movl	%r8d, %r12d
	movq	%rcx, %rsi
	movq	352(%rbp), %r8
	movq	%r8, -8(%rbp)
	movl	%r12d, 188(%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB69_7
# %bb.1:
	movsbl	%r12b, %eax
	cmpl	%r12d, %eax
	jne	.LBB69_72
# %bb.2:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 128(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 112(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 120(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 122(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 123(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 124(%rbp)
	movb	%r12b, 160(%rbp)
	movzbl	120(%rbp), %eax
	testl	%eax, %eax
	je	.LBB69_6
# %bb.3:
	cmpl	$63, %eax
	je	.LBB69_70
# %bb.4:
	cmpl	$99, %eax
	jne	.LBB69_5
.LBB69_6:
	leaq	160(%rbp), %rax
	movq	%rax, 80(%rbp)
	movq	$1, 88(%rbp)
	movq	%r8, 32(%rsp)
	leaq	80(%rbp), %r8
	leaq	112(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB69_71
.LBB69_7:
	cmpb	$0, 10(%rbx)
	jne	.LBB69_9
# %bb.8:
	movb	$2, 10(%rbx)
.LBB69_9:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 104(%rbp)                 # 8-byte Spill
	ja	.LBB69_10
# %bb.73:
	leaq	.LJTI69_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB69_13:
	movb	$1, %r13b
.LBB69_14:
	movl	$16, %eax
	jmp	.LBB69_16
.LBB69_10:
	cmpl	$66, %ecx
	jne	.LBB69_16
# %bb.11:
	movb	$1, %r13b
.LBB69_12:
	movl	$2, %eax
	jmp	.LBB69_16
.LBB69_70:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	160(%rbp), %rax
	movq	%rax, 192(%rbp)
	movq	$1, 200(%rbp)
	movb	$39, 32(%rsp)
	leaq	192(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB69_71
.LBB69_5:
	movl	16(%rbx), %eax
	movl	%eax, 16(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, (%rbp)
	movq	%r8, 32(%rsp)
	movq	%rbp, %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB69_71
.LBB69_15:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB69_16:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	80(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movl	%r12d, %r9d
	callq	"??$_Integer_to_chars@H@std@@YA?AUto_chars_result@0@PEADQEADHH@Z"
	movq	%r15, 96(%rbp)
	movq	80(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 236(%rbp)
	testl	%r12d, %r12d
	js	.LBB69_19
# %bb.17:
	cmpb	$2, 10(%rbx)
	je	.LBB69_20
# %bb.18:
	incl	%r14d
	movl	%r14d, 236(%rbp)
	jmp	.LBB69_20
.LBB69_19:
	leaq	-79(%rbp), %r15
	movq	%r15, 96(%rbp)
.LBB69_20:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB69_23
# %bb.21:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB69_22:                              # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB69_22
.LBB69_23:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 160(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB69_32
# %bb.24:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB69_25
# %bb.74:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI69_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB69_28:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB69_31
.LBB69_25:
	cmpl	$66, %ecx
	jne	.LBB69_30
# %bb.26:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB69_31
.LBB69_30:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB69_31
.LBB69_29:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	testl	%r12d, %r12d
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rdx
	cmovneq	%rdx, %rcx
	jmp	.LBB69_31
.LBB69_27:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB69_31:
	movq	%rcx, 160(%rbp)
	movq	%rax, 168(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 236(%rbp)
.LBB69_32:
	movl	$0, 232(%rbp)
	movaps	%xmm0, 192(%rbp)
	movq	$0, 208(%rbp)
	movq	$15, 216(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB69_51
# %bb.33:
	movq	352(%rbp), %rax
	testq	%rax, %rax
	je	.LBB69_36
# %bb.34:
	movq	8(%rax), %rcx
	movq	%rcx, 152(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB69_38
.LBB69_36:
.Ltmp92:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp93:
# %bb.37:
	movq	%rax, 152(%rbp)
.LBB69_38:
.Ltmp94:
	leaq	144(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp95:
# %bb.39:
	movq	(%rax), %r8
.Ltmp96:
	movq	%rbp, %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp97:
# %bb.40:
	movq	152(%rbp), %rcx
	movups	(%rbp), %xmm0
	movups	16(%rbp), %xmm1
	movaps	%xmm0, 192(%rbp)
	movaps	%xmm1, 208(%rbp)
	movq	$0, 16(%rbp)
	movq	$15, 24(%rbp)
	movb	$0, (%rbp)
	testq	%rcx, %rcx
	je	.LBB69_43
# %bb.41:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB69_43
# %bb.42:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB69_43:
	movq	208(%rbp), %rax
	cmpq	$16, 216(%rbp)
	jb	.LBB69_44
# %bb.45:
	movq	192(%rbp), %rcx
	movq	80(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB69_47
	jmp	.LBB69_50
.LBB69_44:
	leaq	192(%rbp), %rcx
	movq	80(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB69_50
.LBB69_47:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB69_50
# %bb.48:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB69_49:                              # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB69_49
.LBB69_50:
	movl	%edx, 232(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 236(%rbp)
.LBB69_51:
	cmpb	$0, 13(%rbx)
	je	.LBB69_52
# %bb.57:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB69_58
.LBB69_52:
	xorl	%eax, %eax
.LBB69_58:
	movb	%al, 144(%rbp)
	movq	%rdi, (%rbp)
	movq	%rbx, 8(%rbp)
	leaq	188(%rbp), %rcx
	movq	%rcx, 16(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 24(%rbp)
	leaq	144(%rbp), %rcx
	movq	%rcx, 32(%rbp)
	leaq	236(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	232(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	96(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	192(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	-8(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	testb	%al, %al
	je	.LBB69_60
# %bb.59:
.Ltmp98:
	movq	%rbp, %rcx
	movq	%rsi, %rdx
	movq	104(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp99:
	jmp	.LBB69_61
.LBB69_60:
.Ltmp100:
	movq	%rbp, %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	104(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp101:
.LBB69_61:
	movq	216(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB69_71
# %bb.62:
	movq	192(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB69_68
# %bb.63:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB69_64
# %bb.67:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB69_68:
	callq	"??3@YAXPEAX_K@Z"
.LBB69_71:
	movq	%rsi, %rax
	addq	$376, %rsp                      # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB69_72:
	leaq	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB69_64:
.Ltmp102:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp103:
# %bb.65:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB69_35:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB69_53:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	152(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB69_56
# %bb.54:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB69_56
# %bb.55:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB69_56:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB69_66:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB69_69:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	192(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end25:
	.p2align	2, 0x90
.LJTI69_0:
	.long	.LBB69_13-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_12-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_15-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_16-.LJTI69_0
	.long	.LBB69_14-.LJTI69_0
.LJTI69_1:
	.long	.LBB69_28-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_31-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_29-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_30-.LJTI69_1
	.long	.LBB69_27-.LJTI69_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	368                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin25@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp92@IMGREL+1                # IP
	.long	0                               # ToState
	.long	.Ltmp94@IMGREL+1                # IP
	.long	3                               # ToState
	.long	.Ltmp97@IMGREL+1                # IP
	.long	-1                              # ToState
	.long	.Ltmp98@IMGREL+1                # IP
	.long	2                               # ToState
	.long	.Ltmp101@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp102@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp103@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.globl	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z" # -- Begin function ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	.p2align	4, 0x90
"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z": # @"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Lfunc_begin26:
.seh_proc "??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$80, %rsp
	.seh_stackalloc 80
	leaq	80(%rsp), %rbp
	.seh_setframe %rbp, 80
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rcx, %rsi
	leaq	-16(%rbp), %rcx
	xorl	%edx, %edx
	callq	"??0_Lockit@std@@QEAA@H@Z"
	movq	"?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB"(%rip), %rbx
	movq	%rbx, -32(%rbp)
	movq	"?id@?$numpunct@D@std@@2V0locale@2@A"(%rip), %r14
	testq	%r14, %r14
	je	.LBB70_1
# %bb.4:
	movq	8(%rsi), %rax
	cmpq	%r14, 24(%rax)
	ja	.LBB70_5
	jmp	.LBB70_6
.LBB70_1:
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	callq	"??0_Lockit@std@@QEAA@H@Z"
	cmpq	$0, "?id@?$numpunct@D@std@@2V0locale@2@A"(%rip)
	jne	.LBB70_3
# %bb.2:
	movslq	"?_Id_cnt@id@locale@std@@0HA"(%rip), %rax
	incq	%rax
	movl	%eax, "?_Id_cnt@id@locale@std@@0HA"(%rip)
	movq	%rax, "?id@?$numpunct@D@std@@2V0locale@2@A"(%rip)
.LBB70_3:
	leaq	-40(%rbp), %rcx
	callq	"??1_Lockit@std@@QEAA@XZ"
	movq	"?id@?$numpunct@D@std@@2V0locale@2@A"(%rip), %r14
	movq	8(%rsi), %rax
	cmpq	%r14, 24(%rax)
	jbe	.LBB70_6
.LBB70_5:
	movq	16(%rax), %rcx
	movq	(%rcx,%r14,8), %rdi
	testq	%rdi, %rdi
	jne	.LBB70_17
.LBB70_6:
	cmpb	$0, 36(%rax)
	je	.LBB70_10
# %bb.7:
.Ltmp104:
	callq	"?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ"
.Ltmp105:
# %bb.8:
	cmpq	%r14, 24(%rax)
	jbe	.LBB70_10
# %bb.9:
	movq	16(%rax), %rax
	movq	(%rax,%r14,8), %rdi
	testq	%rdi, %rdi
	jne	.LBB70_17
.LBB70_10:
	movq	%rbx, %rdi
	testq	%rbx, %rbx
	jne	.LBB70_17
# %bb.11:
.Ltmp106:
	leaq	-32(%rbp), %rcx
	movq	%rsi, %rdx
	callq	"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
.Ltmp107:
# %bb.12:
	cmpq	$-1, %rax
	je	.LBB70_13
# %bb.15:
	movq	-32(%rbp), %rcx
.Ltmp108:
	movq	%rcx, -24(%rbp)                 # 8-byte Spill
	callq	"?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z"
.Ltmp109:
# %bb.16:
	movq	-24(%rbp), %rcx                 # 8-byte Reload
	movq	(%rcx), %rax
	callq	*8(%rax)
	movq	-32(%rbp), %rdi
	movq	%rdi, "?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB"(%rip)
.LBB70_17:
	leaq	-16(%rbp), %rcx
	callq	"??1_Lockit@std@@QEAA@XZ"
	movq	%rdi, %rax
	addq	$80, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq
.LBB70_13:
.Ltmp110:
	callq	"?_Throw_bad_cast@std@@YAXXZ"
.Ltmp111:
# %bb.14:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z")@IMGREL
	.section	.text,"xr",discard,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.seh_endproc
	.def	"?dtor$18@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$18@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA":
.seh_proc "?dtor$18@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA"
.LBB70_18:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	80(%rdx), %rbp
	.seh_endprologue
	cmpq	$0, -24(%rbp)                   # 8-byte Folded Reload
	je	.LBB70_20
# %bb.19:
	movq	-24(%rbp), %rcx                 # 8-byte Reload
	movq	(%rcx), %rax
	movl	$1, %edx
	callq	*(%rax)
.LBB70_20:
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.seh_endproc
	.def	"?dtor$21@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$21@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA":
.seh_proc "?dtor$21@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA"
.LBB70_21:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	80(%rdx), %rbp
	.seh_endprologue
	leaq	-16(%rbp), %rcx
	callq	"??1_Lockit@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end26:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
	.p2align	2, 0x0
"$cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	6                               # IPMapEntries
	.long	("$ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z")@IMGREL # IPToStateXData
	.long	72                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z":
	.long	-1                              # ToState
	.long	"?dtor$21@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA"@IMGREL # Action
	.long	0                               # ToState
	.long	"?dtor$18@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA"@IMGREL # Action
"$ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z":
	.long	.Lfunc_begin26@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp104@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp108@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp109@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp110@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp111@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin27:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	16(%rcx), %rax
	cmpl	$0, (%rax)
	js	.LBB71_1
# %bb.4:
	movq	8(%rbx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB71_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB71_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB71_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB71_13
	jmp	.LBB71_17
.LBB71_1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB71_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB71_12:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB71_17
.LBB71_13:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB71_14
	.p2align	4, 0x90
.LBB71_16:                              #   in Loop: Header=BB71_14 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB71_17
.LBB71_14:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_16
# %bb.15:                               #   in Loop: Header=BB71_14 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB71_16
.LBB71_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB71_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB71_13
.LBB71_17:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB71_24
# %bb.18:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB71_24
# %bb.19:
	jle	.LBB71_24
# %bb.20:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB71_21
	.p2align	4, 0x90
.LBB71_23:                              #   in Loop: Header=BB71_21 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB71_24
.LBB71_21:                              # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_23
# %bb.22:                               #   in Loop: Header=BB71_21 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB71_23
.LBB71_24:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB71_42
# %bb.25:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB71_28
# %bb.26:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB71_30
.LBB71_42:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB71_43
	.p2align	4, 0x90
.LBB71_46:                              #   in Loop: Header=BB71_43 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB71_43:                              # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB71_47
# %bb.44:                               #   in Loop: Header=BB71_43 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB71_46
# %bb.45:                               #   in Loop: Header=BB71_43 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB71_46
.LBB71_47:
	movq	%rdi, (%rsi)
	jmp	.LBB71_48
.LBB71_28:
.Ltmp112:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp113:
# %bb.29:
	movq	%rax, -8(%rbp)
.LBB71_30:
.Ltmp114:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp115:
# %bb.31:
	movq	(%rax), %rdx
.Ltmp116:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp117:
# %bb.32:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB71_34
# %bb.33:
	movq	(%rdx), %rdx
.LBB71_34:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp118:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp119:
# %bb.35:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB71_48
# %bb.36:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB71_48
# %bb.37:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB71_48:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB71_27:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB71_38:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB71_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB71_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB71_41:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end27:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin27@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp112@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp114@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp119@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@2@YA?AV12@V12@HU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@01@YA?AV21@0HU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB72_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB72_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB72_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB72_5
# %bb.4:
	movl	%eax, %r15d
.LBB72_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB72_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@H@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@HU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB72_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB72_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB72_19
	.p2align	4, 0x90
.LBB72_23:                              #   in Loop: Header=BB72_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB72_24
.LBB72_19:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB72_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB72_20
	.p2align	4, 0x90
.LBB72_22:                              #   in Loop: Header=BB72_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB72_23
.LBB72_20:                              #   Parent Loop BB72_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB72_22
# %bb.21:                               #   in Loop: Header=BB72_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB72_22
.LBB72_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB72_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB72_7
.LBB72_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB72_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB72_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB72_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB72_16
	.p2align	4, 0x90
.LBB72_14:                              #   in Loop: Header=BB72_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB72_15
.LBB72_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB72_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB72_11
	.p2align	4, 0x90
.LBB72_13:                              #   in Loop: Header=BB72_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB72_14
.LBB72_11:                              #   Parent Loop BB72_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB72_13
# %bb.12:                               #   in Loop: Header=BB72_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB72_13
.LBB72_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB72_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin28:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$360, %rsp                      # imm = 0x168
	.seh_stackalloc 360
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 224(%rbp)
	movq	%r9, %rbx
	movl	%r8d, %r12d
	movq	%rcx, %rsi
	movq	336(%rbp), %r8
	movq	%r8, -8(%rbp)
	movb	%r12b, 223(%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB73_6
# %bb.1:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 128(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 112(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 120(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 122(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 123(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 124(%rbp)
	movb	%r12b, 160(%rbp)
	movzbl	120(%rbp), %eax
	testl	%eax, %eax
	je	.LBB73_5
# %bb.2:
	cmpl	$63, %eax
	je	.LBB73_69
# %bb.3:
	cmpl	$99, %eax
	jne	.LBB73_4
.LBB73_5:
	leaq	160(%rbp), %rax
	movq	%rax, 80(%rbp)
	movq	$1, 88(%rbp)
	movq	%r8, 32(%rsp)
	leaq	80(%rbp), %r8
	leaq	112(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB73_70
.LBB73_6:
	cmpb	$0, 10(%rbx)
	jne	.LBB73_8
# %bb.7:
	movb	$2, 10(%rbx)
.LBB73_8:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 104(%rbp)                 # 8-byte Spill
	ja	.LBB73_9
# %bb.71:
	leaq	.LJTI73_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB73_12:
	movb	$1, %r13b
.LBB73_13:
	movl	$16, %eax
	jmp	.LBB73_15
.LBB73_9:
	cmpl	$66, %ecx
	jne	.LBB73_15
# %bb.10:
	movb	$1, %r13b
.LBB73_11:
	movl	$2, %eax
	jmp	.LBB73_15
.LBB73_69:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	160(%rbp), %rax
	movq	%rax, 176(%rbp)
	movq	$1, 184(%rbp)
	movb	$39, 32(%rsp)
	leaq	176(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB73_70
.LBB73_4:
	movl	16(%rbx), %eax
	movl	%eax, 16(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, (%rbp)
	movq	%r8, 32(%rsp)
	movq	%rbp, %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB73_70
.LBB73_14:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB73_15:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	80(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movl	%r12d, %r9d
	callq	"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z"
	movq	%r15, 96(%rbp)
	movq	80(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 216(%rbp)
	testb	%r12b, %r12b
	js	.LBB73_18
# %bb.16:
	cmpb	$2, 10(%rbx)
	je	.LBB73_19
# %bb.17:
	incl	%r14d
	movl	%r14d, 216(%rbp)
	jmp	.LBB73_19
.LBB73_18:
	leaq	-79(%rbp), %r15
	movq	%r15, 96(%rbp)
.LBB73_19:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB73_22
# %bb.20:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB73_21:                              # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB73_21
.LBB73_22:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 160(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB73_31
# %bb.23:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB73_24
# %bb.72:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI73_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB73_27:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB73_30
.LBB73_24:
	cmpl	$66, %ecx
	jne	.LBB73_29
# %bb.25:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB73_30
.LBB73_29:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB73_30
.LBB73_28:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	testb	%r12b, %r12b
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rdx
	cmovneq	%rdx, %rcx
	jmp	.LBB73_30
.LBB73_26:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB73_30:
	movq	%rcx, 160(%rbp)
	movq	%rax, 168(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 216(%rbp)
.LBB73_31:
	movl	$0, 212(%rbp)
	movaps	%xmm0, 176(%rbp)
	movq	$0, 192(%rbp)
	movq	$15, 200(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB73_50
# %bb.32:
	movq	336(%rbp), %rax
	testq	%rax, %rax
	je	.LBB73_35
# %bb.33:
	movq	8(%rax), %rcx
	movq	%rcx, 152(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB73_37
.LBB73_35:
.Ltmp120:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp121:
# %bb.36:
	movq	%rax, 152(%rbp)
.LBB73_37:
.Ltmp122:
	leaq	144(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp123:
# %bb.38:
	movq	(%rax), %r8
.Ltmp124:
	movq	%rbp, %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp125:
# %bb.39:
	movq	152(%rbp), %rcx
	movups	(%rbp), %xmm0
	movups	16(%rbp), %xmm1
	movaps	%xmm0, 176(%rbp)
	movaps	%xmm1, 192(%rbp)
	movq	$0, 16(%rbp)
	movq	$15, 24(%rbp)
	movb	$0, (%rbp)
	testq	%rcx, %rcx
	je	.LBB73_42
# %bb.40:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB73_42
# %bb.41:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB73_42:
	movq	192(%rbp), %rax
	cmpq	$16, 200(%rbp)
	jb	.LBB73_43
# %bb.44:
	movq	176(%rbp), %rcx
	movq	80(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB73_46
	jmp	.LBB73_49
.LBB73_43:
	leaq	176(%rbp), %rcx
	movq	80(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB73_49
.LBB73_46:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB73_49
# %bb.47:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB73_48:                              # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB73_48
.LBB73_49:
	movl	%edx, 212(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 216(%rbp)
.LBB73_50:
	cmpb	$0, 13(%rbx)
	je	.LBB73_51
# %bb.56:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB73_57
.LBB73_51:
	xorl	%eax, %eax
.LBB73_57:
	movb	%al, 144(%rbp)
	movq	%rdi, (%rbp)
	movq	%rbx, 8(%rbp)
	leaq	223(%rbp), %rcx
	movq	%rcx, 16(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 24(%rbp)
	leaq	144(%rbp), %rcx
	movq	%rcx, 32(%rbp)
	leaq	216(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	212(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	96(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	176(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	-8(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	testb	%al, %al
	je	.LBB73_59
# %bb.58:
.Ltmp126:
	movq	%rbp, %rcx
	movq	%rsi, %rdx
	movq	104(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp127:
	jmp	.LBB73_60
.LBB73_59:
.Ltmp128:
	movq	%rbp, %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	104(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp129:
.LBB73_60:
	movq	200(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB73_70
# %bb.61:
	movq	176(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB73_67
# %bb.62:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB73_63
# %bb.66:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB73_67:
	callq	"??3@YAXPEAX_K@Z"
.LBB73_70:
	movq	%rsi, %rax
	addq	$360, %rsp                      # imm = 0x168
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB73_63:
.Ltmp130:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp131:
# %bb.64:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$34@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$34@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$34@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB73_34:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$52@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$52@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$52@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB73_52:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	152(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB73_55
# %bb.53:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB73_55
# %bb.54:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB73_55:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$65@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$65@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$65@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB73_65:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$68@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$68@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$68@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB73_68:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	176(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end28:
	.p2align	2, 0x90
.LJTI73_0:
	.long	.LBB73_12-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_11-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_14-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_15-.LJTI73_0
	.long	.LBB73_13-.LJTI73_0
.LJTI73_1:
	.long	.LBB73_27-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_30-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_28-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_29-.LJTI73_1
	.long	.LBB73_26-.LJTI73_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	7                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	352                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$34@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$65@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$68@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$52@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin28@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp120@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp122@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp125@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp126@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp130@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp131@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.globl	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z" # -- Begin function ??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z
	.p2align	4, 0x90
"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z": # @"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
.Lfunc_begin29:
.seh_proc "??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$472, %rsp                      # imm = 0x1D8
	.seh_stackalloc 472
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 336(%rbp)
	movq	%r9, %rbx
	movq	%rdx, %r14
	movq	%rcx, %rdi
	movzbl	448(%rbp), %r9d
	cmpl	$0, 4(%rbx)
	jns	.LBB74_4
# %bb.1:
	cmpl	$0, (%rbx)
	jle	.LBB74_2
.LBB74_4:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 288(%rbp)
	movq	$0, 304(%rbp)
	movq	$15, 312(%rbp)
	leaq	-32(%rbp), %r15
	movq	%r15, -64(%rbp)
	movq	$0, -56(%rbp)
	movq	$256, -48(%rbp)                 # imm = 0x100
	leaq	"??_7?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"(%rip), %rax
	movq	%rax, -72(%rbp)
	leaq	288(%rbp), %rsi
	movq	%rsi, -40(%rbp)
	movups	(%r8), %xmm0
	movaps	%xmm0, 240(%rbp)
.Ltmp132:
	leaq	328(%rbp), %rcx
	leaq	-72(%rbp), %r13
	leaq	240(%rbp), %r8
	movq	%r13, %rdx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z"
.Ltmp133:
# %bb.5:
	movq	-56(%rbp), %r12
	testq	%r12, %r12
	je	.LBB74_12
# %bb.6:
	movq	$0, -56(%rbp)
	movq	-40(%rbp), %rcx
	movq	16(%rcx), %r9
	movq	24(%rcx), %rdx
	movq	%rdx, %rax
	subq	%r9, %rax
	cmpq	%r12, %rax
	jae	.LBB74_7
# %bb.11:
.Ltmp134:
	movq	%r12, 40(%rsp)
	movq	%r15, 32(%rsp)
	movq	%r12, %rdx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z"
.Ltmp135:
	jmp	.LBB74_12
.LBB74_7:
	movq	%r14, 280(%rbp)                 # 8-byte Spill
	movq	%rdi, 272(%rbp)                 # 8-byte Spill
	movq	%rcx, %rax
	cmpq	$16, %rdx
	jb	.LBB74_9
# %bb.8:
	movq	(%rcx), %rax
.LBB74_9:
	leaq	(%rax,%r9), %r13
	xorl	%r14d, %r14d
	movq	%r13, %rdx
	subq	%r15, %rdx
	cmovaq	%rdx, %r14
	leaq	(%r15,%r12), %rdi
	cmovbq	%r12, %r14
	cmpq	%r13, %rdi
	cmovbeq	%r12, %r14
	leaq	(%r9,%r12), %rdx
	movq	%rdx, 16(%rcx)
	movzbl	(%rax,%r9), %eax
	movb	%al, (%r12,%r13)
	movq	%r13, %rcx
	movq	%r15, %rdx
	movq	%r14, %r8
	callq	memcpy
	subq	%r14, %r12
	addq	%r14, %rdi
	addq	%r13, %r14
	movq	%r14, %rcx
	movq	%rdi, %rdx
	movq	%r12, %r8
	callq	memcpy
	movq	272(%rbp), %rdi                 # 8-byte Reload
	movq	280(%rbp), %r14                 # 8-byte Reload
	leaq	-72(%rbp), %r13
.LBB74_12:
	movl	4(%rbx), %eax
	movl	%eax, 328(%rbp)
	movq	304(%rbp), %rax
	cmpq	$16, 312(%rbp)
	jb	.LBB74_14
# %bb.13:
	movq	288(%rbp), %rsi
.LBB74_14:
	movq	%rsi, 256(%rbp)
	movq	%rax, 264(%rbp)
.Ltmp136:
	leaq	256(%rbp), %rcx
	leaq	328(%rbp), %rdx
	callq	"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z"
.Ltmp137:
# %bb.15:
	leaq	288(%rbp), %rcx
	movq	%rcx, -72(%rbp)
	movq	%rax, -64(%rbp)
	movl	328(%rbp), %r8d
.Ltmp138:
	movq	%r13, 40(%rsp)
	movb	$1, 32(%rsp)
	movq	%rdi, %rcx
	movq	%r14, %rdx
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z"
.Ltmp139:
# %bb.16:
	movq	312(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB74_3
# %bb.17:
	movq	288(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB74_23
# %bb.18:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB74_19
# %bb.22:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB74_23:
	callq	"??3@YAXPEAX_K@Z"
	jmp	.LBB74_3
.LBB74_2:
	movups	(%r8), %xmm0
	movaps	%xmm0, 224(%rbp)
	leaq	224(%rbp), %r8
	movq	%rdi, %rcx
	movq	%r14, %rdx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z"
.LBB74_3:
	movq	%rdi, %rax
	addq	$472, %rsp                      # imm = 0x1D8
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB74_19:
.Ltmp140:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp141:
# %bb.20:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_endproc
	.def	"?dtor$10@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$10@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA":
.seh_proc "?dtor$10@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"
.LBB74_10:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_endproc
	.def	"?dtor$21@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$21@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA":
.seh_proc "?dtor$21@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"
.LBB74_21:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_endproc
	.def	"?dtor$24@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$24@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA":
.seh_proc "?dtor$24@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"
.LBB74_24:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	-72(%rbp), %rcx
	callq	"??1?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_endproc
	.def	"?dtor$25@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$25@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA":
.seh_proc "?dtor$25@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"
.LBB74_25:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	288(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end29:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z")@IMGREL # IPToStateXData
	.long	464                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z":
	.long	-1                              # ToState
	.long	"?dtor$10@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$21@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$25@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$24@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z":
	.long	.Lfunc_begin29@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp132@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp134@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp135@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp136@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp139@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp140@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp141@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$168, %rsp
	.seh_stackalloc 168
	.seh_endprologue
	movq	%r9, %rbx
	movq	%r8, %r14
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	cmpb	$63, 8(%r9)
	jne	.LBB75_2
# %bb.1:
	movl	16(%rbx), %eax
	movl	%eax, 80(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	(%r14), %xmm0
	movaps	%xmm0, 144(%rsp)
	movb	$34, 32(%rsp)
	leaq	144(%rsp), %r8
	leaq	64(%rsp), %r9
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB75_11
.LBB75_2:
	movl	4(%rbx), %eax
	testl	%eax, %eax
	jns	.LBB75_10
# %bb.3:
	cmpl	$0, (%rbx)
	jg	.LBB75_10
# %bb.4:
	movq	8(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB75_9
# %bb.5:
	movq	(%r14), %r14
	xorl	%r15d, %r15d
	jmp	.LBB75_6
	.p2align	4, 0x90
.LBB75_8:                               #   in Loop: Header=BB75_6 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%bpl, (%rcx,%rax)
	incq	%r15
	cmpq	%r15, %rbx
	je	.LBB75_9
.LBB75_6:                               # =>This Inner Loop Header: Depth=1
	movzbl	(%r14,%r15), %ebp
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB75_8
# %bb.7:                                #   in Loop: Header=BB75_6 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB75_8
.LBB75_10:
	movl	%eax, 60(%rsp)
	movups	(%r14), %xmm0
	movaps	%xmm0, 128(%rsp)
	leaq	128(%rsp), %rcx
	leaq	60(%rsp), %rdx
	callq	"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z"
	movups	(%r14), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	%rax, 112(%rsp)
	movl	60(%rsp), %r8d
	leaq	96(%rsp), %rax
	movq	%rax, 40(%rsp)
	movb	$1, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z"
	jmp	.LBB75_11
.LBB75_9:
	movq	%rdi, (%rsi)
.LBB75_11:
	movq	%rsi, %rax
	addq	$168, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin30:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	16(%rcx), %rax
	cmpb	$0, (%rax)
	js	.LBB76_1
# %bb.4:
	movq	8(%rbx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB76_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB76_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB76_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB76_13
	jmp	.LBB76_17
.LBB76_1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB76_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB76_12:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB76_17
.LBB76_13:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB76_14
	.p2align	4, 0x90
.LBB76_16:                              #   in Loop: Header=BB76_14 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB76_17
.LBB76_14:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_16
# %bb.15:                               #   in Loop: Header=BB76_14 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB76_16
.LBB76_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB76_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB76_13
.LBB76_17:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB76_24
# %bb.18:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB76_24
# %bb.19:
	jle	.LBB76_24
# %bb.20:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB76_21
	.p2align	4, 0x90
.LBB76_23:                              #   in Loop: Header=BB76_21 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB76_24
.LBB76_21:                              # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_23
# %bb.22:                               #   in Loop: Header=BB76_21 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB76_23
.LBB76_24:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB76_42
# %bb.25:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB76_28
# %bb.26:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB76_30
.LBB76_42:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB76_43
	.p2align	4, 0x90
.LBB76_46:                              #   in Loop: Header=BB76_43 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB76_43:                              # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB76_47
# %bb.44:                               #   in Loop: Header=BB76_43 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB76_46
# %bb.45:                               #   in Loop: Header=BB76_43 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB76_46
.LBB76_47:
	movq	%rdi, (%rsi)
	jmp	.LBB76_48
.LBB76_28:
.Ltmp142:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp143:
# %bb.29:
	movq	%rax, -8(%rbp)
.LBB76_30:
.Ltmp144:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp145:
# %bb.31:
	movq	(%rax), %rdx
.Ltmp146:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp147:
# %bb.32:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB76_34
# %bb.33:
	movq	(%rdx), %rdx
.LBB76_34:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp148:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp149:
# %bb.35:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB76_48
# %bb.36:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB76_48
# %bb.37:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB76_48:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB76_27:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB76_38:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB76_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB76_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB76_41:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end30:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin30@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp142@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp144@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp149@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@2@YA?AV12@V12@DU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@01@YA?AV21@0DU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB77_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB77_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB77_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB77_5
# %bb.4:
	movl	%eax, %r15d
.LBB77_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB77_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@DU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB77_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB77_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB77_19
	.p2align	4, 0x90
.LBB77_23:                              #   in Loop: Header=BB77_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB77_24
.LBB77_19:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB77_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB77_20
	.p2align	4, 0x90
.LBB77_22:                              #   in Loop: Header=BB77_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB77_23
.LBB77_20:                              #   Parent Loop BB77_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB77_22
# %bb.21:                               #   in Loop: Header=BB77_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB77_22
.LBB77_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB77_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB77_7
.LBB77_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB77_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB77_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB77_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB77_16
	.p2align	4, 0x90
.LBB77_14:                              #   in Loop: Header=BB77_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB77_15
.LBB77_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB77_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB77_11
	.p2align	4, 0x90
.LBB77_13:                              #   in Loop: Header=BB77_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB77_14
.LBB77_11:                              #   Parent Loop BB77_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB77_13
# %bb.12:                               #   in Loop: Header=BB77_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB77_13
.LBB77_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB77_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z"
	.globl	"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z" # -- Begin function ??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z": # @"??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z"
.seh_proc "??$_Integer_to_chars@D@std@@YA?AUto_chars_result@0@PEADQEADDH@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	movl	%r9d, %eax
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	testb	%r9b, %r9b
	jns	.LBB78_4
# %bb.1:
	cmpq	%r8, %rdi
	je	.LBB78_2
# %bb.3:
	movb	$45, (%rdi)
	incq	%rdi
	negb	%al
.LBB78_4:
	movl	112(%rsp), %ecx
	leaq	48(%rsp), %rbx
	leal	-2(%rcx), %edx
	cmpl	$30, %edx
	ja	.LBB78_20
# %bb.5:
	leaq	.LJTI78_0(%rip), %r9
	movslq	(%r9,%rdx,4), %rdx
	addq	%r9, %rdx
	jmpq	*%rdx
.LBB78_18:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB78_19:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %eax
	xorl	%edx, %edx
	idivl	%ecx
	addb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
                                        # kill: def $eax killed $eax def $rax
	testb	%al, %al
	jne	.LBB78_19
.LBB78_22:
	subq	%r9, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB78_24
# %bb.23:
	movq	%rdi, %rcx
	movq	%r9, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB78_24:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
.LBB78_25:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB78_2:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB78_25
.LBB78_8:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB78_9:                               # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$1, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	%cl
	cmpb	$2, %al
	movl	%ecx, %eax
	jae	.LBB78_9
	jmp	.LBB78_22
.LBB78_10:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB78_11:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$3, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	$2, %cl
	cmpb	$4, %al
	movl	%ecx, %eax
	jae	.LBB78_11
	jmp	.LBB78_22
.LBB78_12:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB78_13:                              # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$7, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	$3, %cl
	cmpb	$8, %al
	movl	%ecx, %eax
	jae	.LBB78_13
	jmp	.LBB78_22
.LBB78_6:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB78_7:                               # =>This Inner Loop Header: Depth=1
	movzbl	%al, %ecx
	imull	$205, %ecx, %eax
	shrl	$11, %eax
	leal	(%rax,%rax), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%ecx, %r10d
	subb	%dl, %r10b
	orb	$48, %r10b
	movb	%r10b, -1(%r9)
	decq	%r9
	cmpb	$10, %cl
	jae	.LBB78_7
	jmp	.LBB78_22
.LBB78_20:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB78_21:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %eax
	xorl	%edx, %edx
	idivl	%ecx
                                        # kill: def $edx killed $edx def $rdx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r10
	movzbl	(%rdx,%r10), %edx
	movb	%dl, -1(%r9)
	decq	%r9
                                        # kill: def $eax killed $eax def $rax
	testb	%al, %al
	jne	.LBB78_21
	jmp	.LBB78_22
.LBB78_14:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB78_15:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %edx
	movl	%edx, %eax
	andl	$15, %eax
	movzbl	(%rax,%rcx), %eax
	movb	%al, -1(%r9)
	decq	%r9
	movl	%edx, %eax
	shrb	$4, %al
	cmpb	$16, %dl
	jae	.LBB78_15
	jmp	.LBB78_22
.LBB78_16:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB78_17:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %edx
	movl	%edx, %eax
	andl	$31, %eax
	movzbl	(%rax,%rcx), %eax
	movb	%al, -1(%r9)
	decq	%r9
	movl	%edx, %eax
	shrb	$5, %al
	cmpb	$32, %dl
	jae	.LBB78_17
	jmp	.LBB78_22
	.p2align	2, 0x90
.LJTI78_0:
	.long	.LBB78_8-.LJTI78_0
	.long	.LBB78_18-.LJTI78_0
	.long	.LBB78_10-.LJTI78_0
	.long	.LBB78_18-.LJTI78_0
	.long	.LBB78_18-.LJTI78_0
	.long	.LBB78_18-.LJTI78_0
	.long	.LBB78_12-.LJTI78_0
	.long	.LBB78_18-.LJTI78_0
	.long	.LBB78_6-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_14-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_20-.LJTI78_0
	.long	.LBB78_16-.LJTI78_0
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
	.globl	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z" # -- Begin function ??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z
	.p2align	4, 0x90
"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z": # @"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.seh_proc "??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r8, %rdi
	movq	%rdx, %rbx
	movl	168(%rsp), %r15d
	movq	(%r9), %r12
	testl	%r15d, %r15d
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB79_1
# %bb.2:
	movq	8(%r9), %rax
	addq	%r12, %rax
	cmpl	$1, %r15d
	jne	.LBB79_16
# %bb.3:
	xorl	%ecx, %ecx
	xorl	%r13d, %r13d
	jmp	.LBB79_4
.LBB79_1:
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	176(%rsp), %r14
	subq	%rax, %rdi
	cmpq	%rbx, %rdi
	jne	.LBB79_8
	jmp	.LBB79_11
.LBB79_16:
	movl	%r15d, %edx
	andl	$-2, %edx
	xorl	%ecx, %ecx
	xorl	%r13d, %r13d
	movq	%r12, %r8
	.p2align	4, 0x90
.LBB79_17:                              # =>This Inner Loop Header: Depth=1
	movsbl	(%r8), %r9d
	addl	%ecx, %r9d
	leaq	1(%r8), %r12
	xorl	%r10d, %r10d
	cmpq	%rax, %r12
	sete	%r10b
	cmoveq	%r8, %r12
	addl	%r13d, %r10d
	movsbl	(%r12), %ecx
	addl	%r9d, %ecx
	leaq	1(%r12), %r8
	xorl	%r13d, %r13d
	cmpq	%rax, %r8
	cmovneq	%r8, %r12
	sete	%r13b
	addl	%r10d, %r13d
	movq	%r12, %r8
	addl	$-2, %edx
	jne	.LBB79_17
.LBB79_4:
	testb	$1, %r15b
	je	.LBB79_6
# %bb.5:
	movsbl	(%r12), %edx
	addl	%edx, %ecx
	leaq	1(%r12), %rdx
	xorl	%r8d, %r8d
	cmpq	%rax, %rdx
	sete	%r8b
	cmovneq	%rdx, %r12
	addl	%r8d, %r13d
.LBB79_6:
	movslq	%ecx, %rax
	movq	176(%rsp), %r14
	subq	%rax, %rdi
	cmpq	%rbx, %rdi
	jne	.LBB79_8
.LBB79_11:
	testl	%r15d, %r15d
	jg	.LBB79_12
.LBB79_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%r14, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.p2align	4, 0x90
.LBB79_10:                              #   in Loop: Header=BB79_8 Depth=1
	movq	8(%r14), %rcx
	movq	%rdx, 16(%r14)
	movb	%sil, (%rcx,%rax)
	incq	%rbx
	cmpq	%rdi, %rbx
	je	.LBB79_11
.LBB79_8:                               # =>This Inner Loop Header: Depth=1
	movzbl	(%rbx), %esi
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%r14)
	jae	.LBB79_10
# %bb.9:                                #   in Loop: Header=BB79_8 Depth=1
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*(%rax)
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB79_10
	.p2align	4, 0x90
.LBB79_22:                              #   in Loop: Header=BB79_12 Depth=1
	movzbl	(%r12), %eax
	movq	48(%rsp), %r15                  # 8-byte Reload
	movzbl	39(%rsp), %esi                  # 1-byte Folded Reload
.LBB79_23:                              #   in Loop: Header=BB79_12 Depth=1
	movb	%sil, %bpl
	subl	%ebp, %r13d
	movsbq	%al, %rax
	addq	%rax, %rdi
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB79_24
.LBB79_12:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB79_19 Depth 2
	xorl	%ebp, %ebp
	xorl	%eax, %eax
	testl	%r13d, %r13d
	setg	%sil
	setle	%al
	subq	%rax, %r12
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%r14)
	jae	.LBB79_14
# %bb.13:                               #   in Loop: Header=BB79_12 Depth=1
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*(%rax)
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
.LBB79_14:                              #   in Loop: Header=BB79_12 Depth=1
	movq	8(%r14), %rcx
	movq	%rdx, 16(%r14)
	movzbl	160(%rsp), %edx
	movb	%dl, (%rcx,%rax)
	movsbq	(%r12), %rbx
	testq	%rbx, %rbx
	je	.LBB79_15
# %bb.18:                               #   in Loop: Header=BB79_12 Depth=1
	movb	%sil, 39(%rsp)                  # 1-byte Spill
	movq	%r15, 48(%rsp)                  # 8-byte Spill
	xorl	%r15d, %r15d
	jmp	.LBB79_19
	.p2align	4, 0x90
.LBB79_21:                              #   in Loop: Header=BB79_19 Depth=2
	movq	8(%r14), %rcx
	movq	%rdx, 16(%r14)
	movb	%sil, (%rcx,%rax)
	incq	%r15
	cmpq	%r15, %rbx
	je	.LBB79_22
.LBB79_19:                              #   Parent Loop BB79_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%rdi,%r15), %esi
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%r14)
	jae	.LBB79_21
# %bb.20:                               #   in Loop: Header=BB79_19 Depth=2
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*(%rax)
	movq	16(%r14), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB79_21
	.p2align	4, 0x90
.LBB79_15:                              #   in Loop: Header=BB79_12 Depth=1
	xorl	%eax, %eax
	jmp	.LBB79_23
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z"
	.globl	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z" # -- Begin function ??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z
	.p2align	4, 0x90
"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z": # @"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z"
.seh_proc "??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@D@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$120, %rsp
	.seh_stackalloc 120
	.seh_endprologue
	movb	%r9b, 35(%rsp)                  # 1-byte Spill
	movq	%rdx, %rsi
	movq	(%r8), %rbp
	movq	8(%r8), %r13
	movq	16(%rdx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	jae	.LBB80_2
# %bb.1:
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_2:
	leaq	16(%rsi), %r12
	leaq	24(%rsi), %r15
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movzbl	35(%rsp), %edx                  # 1-byte Folded Reload
	movb	%dl, (%rcx,%rax)
	testq	%r13, %r13
	je	.LBB80_25
# %bb.3:
	addq	%rbp, %r13
	leaq	8(%rsi), %rdi
	movb	$1, %cl
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	.p2align	4, 0x90
.LBB80_4:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB80_53 Depth 2
                                        #     Child Loop BB80_57 Depth 2
                                        #     Child Loop BB80_61 Depth 2
                                        #     Child Loop BB80_74 Depth 2
                                        #     Child Loop BB80_80 Depth 2
                                        #     Child Loop BB80_41 Depth 2
                                        #       Child Loop BB80_49 Depth 3
                                        #       Child Loop BB80_90 Depth 3
	movzbl	(%rbp), %eax
	cmpl	$9, %eax
	je	.LBB80_17
# %bb.5:                                #   in Loop: Header=BB80_4 Depth=1
	cmpl	$10, %eax
	je	.LBB80_12
# %bb.6:                                #   in Loop: Header=BB80_4 Depth=1
	cmpl	$13, %eax
	jne	.LBB80_28
# %bb.7:                                #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_9
# %bb.8:                                #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_9:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_11
# %bb.10:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_11:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$114, (%rcx,%rax)
	jmp	.LBB80_22
	.p2align	4, 0x90
.LBB80_17:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_19
# %bb.18:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_19:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_21
# %bb.20:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_21:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$116, (%rcx,%rax)
	jmp	.LBB80_22
	.p2align	4, 0x90
.LBB80_12:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_14
# %bb.13:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_14:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_16
# %bb.15:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_16:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$110, (%rcx,%rax)
	jmp	.LBB80_22
	.p2align	4, 0x90
.LBB80_28:                              #   in Loop: Header=BB80_4 Depth=1
	cmpb	35(%rsp), %al                   # 1-byte Folded Reload
	jne	.LBB80_34
# %bb.29:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_31
# %bb.30:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_31:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_33
# %bb.32:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_33:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movzbl	35(%rsp), %edx                  # 1-byte Folded Reload
	movb	%dl, (%rcx,%rax)
	jmp	.LBB80_22
.LBB80_34:                              #   in Loop: Header=BB80_4 Depth=1
	cmpb	$92, %al
	jne	.LBB80_40
# %bb.35:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_37
# %bb.36:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_37:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_39
# %bb.38:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_39:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	.p2align	4, 0x90
.LBB80_22:                              #   in Loop: Header=BB80_4 Depth=1
	incq	%rbp
.LBB80_23:                              #   in Loop: Header=BB80_4 Depth=1
	movb	$1, %cl
.LBB80_24:                              #   in Loop: Header=BB80_4 Depth=1
	cmpq	%r13, %rbp
	jne	.LBB80_4
	jmp	.LBB80_25
.LBB80_40:                              #   in Loop: Header=BB80_4 Depth=1
	movl	%ecx, %ebx
	leaq	64(%rsp), %rcx
	movq	%rbp, %rdx
	movq	%r13, %r8
	leaq	44(%rsp), %r9
	callq	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
	cmpb	$0, 72(%rsp)
	je	.LBB80_41
# %bb.52:                               #   in Loop: Header=BB80_4 Depth=1
	movl	$711, %edx                      # imm = 0x2C7
	movl	44(%rsp), %eax
	leaq	"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"(%rip), %rcx
	.p2align	4, 0x90
.LBB80_53:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rcx, %r8
	movq	%rdx, %r9
	shrq	%r9
	movq	%r9, %r10
	notq	%r10
	addq	%rdx, %r10
	cmpl	%eax, (%rcx,%r9,4)
	leaq	4(%rcx,%r9,4), %rcx
	cmovaq	%r8, %rcx
	cmovaq	%r9, %r10
	movq	%r10, %rdx
	testq	%r10, %r10
	jg	.LBB80_53
# %bb.54:                               #   in Loop: Header=BB80_4 Depth=1
	leaq	"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"(%rip), %rdx
	subq	%rdx, %rcx
	je	.LBB80_67
# %bb.55:                               #   in Loop: Header=BB80_4 Depth=1
	sarq	$2, %rcx
	leaq	"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"(%rip), %r8
	movzwl	2842(%r8,%rcx,2), %edx
	addl	-4(%r8,%rcx,4), %edx
	cmpl	%eax, %edx
	setbe	%cl
	notb	%bl
	orb	%cl, %bl
	testb	$1, %bl
	jne	.LBB80_66
# %bb.56:                               #   in Loop: Header=BB80_4 Depth=1
	movl	$363, %edx                      # imm = 0x16B
	leaq	"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"(%rip), %rcx
	.p2align	4, 0x90
.LBB80_57:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rcx, %r8
	movq	%rdx, %r9
	shrq	%r9
	movq	%r9, %r10
	notq	%r10
	addq	%rdx, %r10
	cmpl	%eax, (%rcx,%r9,4)
	leaq	4(%rcx,%r9,4), %rcx
	cmovaq	%r8, %rcx
	cmovaq	%r9, %r10
	movq	%r10, %rdx
	testq	%r10, %r10
	jg	.LBB80_57
# %bb.58:                               #   in Loop: Header=BB80_4 Depth=1
	leaq	"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"(%rip), %rdx
	subq	%rdx, %rcx
	je	.LBB80_60
# %bb.59:                               #   in Loop: Header=BB80_4 Depth=1
	sarq	$2, %rcx
	leaq	"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"(%rip), %r8
	movzwl	1450(%r8,%rcx,2), %edx
	addl	-4(%r8,%rcx,4), %edx
	cmpl	%eax, %edx
	ja	.LBB80_67
.LBB80_60:                              #   in Loop: Header=BB80_4 Depth=1
	movq	64(%rsp), %rbx
	jmp	.LBB80_61
	.p2align	4, 0x90
.LBB80_95:                              #   in Loop: Header=BB80_41 Depth=2
	movq	56(%rsp), %r13                  # 8-byte Reload
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$125, (%rcx,%rax)
	incq	%rbp
.LBB80_41:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB80_49 Depth 3
                                        #       Child Loop BB80_90 Depth 3
	cmpq	64(%rsp), %rbp
	je	.LBB80_23
# %bb.42:                               #   in Loop: Header=BB80_41 Depth=2
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_44
# %bb.43:                               #   in Loop: Header=BB80_41 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_44:                              #   in Loop: Header=BB80_41 Depth=2
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r14
	leaq	36(%rsp), %r13
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_46
# %bb.45:                               #   in Loop: Header=BB80_41 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_46:                              #   in Loop: Header=BB80_41 Depth=2
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$120, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_48
# %bb.47:                               #   in Loop: Header=BB80_41 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_48:                              #   in Loop: Header=BB80_41 Depth=2
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$123, (%rcx,%rax)
	movzbl	(%rbp), %eax
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB80_49:                              #   Parent Loop BB80_4 Depth=1
                                        #     Parent Loop BB80_41 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movzbl	%al, %ecx
	movl	%ecx, %eax
	andl	$15, %eax
	movzbl	(%rax,%r14), %eax
	movb	%al, 87(%rsp,%rbx)
	movl	%ecx, %eax
	shrb	$4, %al
	decq	%rbx
	cmpb	$15, %cl
	ja	.LBB80_49
# %bb.50:                               #   in Loop: Header=BB80_41 Depth=2
	movq	%rbx, %r8
	negq	%r8
	cmpq	$9, %r8
	jl	.LBB80_87
# %bb.51:                               #   in Loop: Header=BB80_41 Depth=2
	leaq	44(%rsp), %r14
	jmp	.LBB80_89
	.p2align	4, 0x90
.LBB80_87:                              #   in Loop: Header=BB80_41 Depth=2
	leaq	(%rsp,%rbx), %rdx
	addq	$88, %rdx
	movq	%r13, %rcx
	callq	memcpy
	testq	%rbx, %rbx
	je	.LBB80_93
# %bb.88:                               #   in Loop: Header=BB80_41 Depth=2
	leaq	36(%rsp), %r13
	movq	%r13, %r14
	subq	%rbx, %r14
.LBB80_89:                              #   in Loop: Header=BB80_41 Depth=2
	movq	%r13, %rbx
	jmp	.LBB80_90
	.p2align	4, 0x90
.LBB80_92:                              #   in Loop: Header=BB80_90 Depth=3
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	%r13b, (%rcx,%rax)
	incq	%rbx
	cmpq	%r14, %rbx
	je	.LBB80_93
.LBB80_90:                              #   Parent Loop BB80_4 Depth=1
                                        #     Parent Loop BB80_41 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movzbl	(%rbx), %r13d
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_92
# %bb.91:                               #   in Loop: Header=BB80_90 Depth=3
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB80_92
	.p2align	4, 0x90
.LBB80_93:                              #   in Loop: Header=BB80_41 Depth=2
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_95
# %bb.94:                               #   in Loop: Header=BB80_41 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB80_95
	.p2align	4, 0x90
.LBB80_64:                              #   in Loop: Header=BB80_61 Depth=2
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	%r14b, (%rcx,%rax)
	incq	%rbp
.LBB80_61:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%rbx, %rbp
	je	.LBB80_65
# %bb.62:                               #   in Loop: Header=BB80_61 Depth=2
	movzbl	(%rbp), %r14d
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_64
# %bb.63:                               #   in Loop: Header=BB80_61 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB80_64
.LBB80_65:                              #   in Loop: Header=BB80_4 Depth=1
	xorl	%ecx, %ecx
	movq	64(%rsp), %rbp
	jmp	.LBB80_24
.LBB80_66:                              #   in Loop: Header=BB80_4 Depth=1
	cmpl	%eax, %edx
	ja	.LBB80_60
.LBB80_67:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_69
# %bb.68:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_69:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$92, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_71
# %bb.70:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_71:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$117, (%rcx,%rax)
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_73
# %bb.72:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_73:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$123, (%rcx,%rax)
	movl	44(%rsp), %eax
	xorl	%r14d, %r14d
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rdx
	.p2align	4, 0x90
.LBB80_74:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	%eax, %ecx
	andl	$15, %ecx
	movzbl	(%rcx,%rdx), %ecx
	movb	%cl, 111(%rsp,%r14)
	movl	%eax, %ecx
	shrl	$4, %ecx
	decq	%r14
	cmpl	$15, %eax
	movl	%ecx, %eax
	ja	.LBB80_74
# %bb.75:                               #   in Loop: Header=BB80_4 Depth=1
	movq	%r14, %r8
	negq	%r8
	cmpq	$9, %r8
	jl	.LBB80_77
# %bb.76:                               #   in Loop: Header=BB80_4 Depth=1
	leaq	44(%rsp), %rbx
	leaq	36(%rsp), %rax
	jmp	.LBB80_79
.LBB80_77:                              #   in Loop: Header=BB80_4 Depth=1
	leaq	(%rsp,%r14), %rdx
	addq	$112, %rdx
	leaq	36(%rsp), %rcx
	callq	memcpy
	testq	%r14, %r14
	je	.LBB80_83
# %bb.78:                               #   in Loop: Header=BB80_4 Depth=1
	leaq	36(%rsp), %rax
	movq	%rax, %rbx
	subq	%r14, %rbx
.LBB80_79:                              #   in Loop: Header=BB80_4 Depth=1
	movq	%rax, %r14
	jmp	.LBB80_80
	.p2align	4, 0x90
.LBB80_82:                              #   in Loop: Header=BB80_80 Depth=2
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	%bpl, (%rcx,%rax)
	incq	%r14
	cmpq	%rbx, %r14
	je	.LBB80_83
.LBB80_80:                              #   Parent Loop BB80_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %ebp
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_82
# %bb.81:                               #   in Loop: Header=BB80_80 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB80_82
.LBB80_83:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%r12), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_85
# %bb.84:                               #   in Loop: Header=BB80_4 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
.LBB80_85:                              #   in Loop: Header=BB80_4 Depth=1
	movq	(%rdi), %rcx
	movq	%rdx, (%r12)
	movb	$125, (%rcx,%rax)
	movb	$1, %cl
	movq	64(%rsp), %rbp
	jmp	.LBB80_24
.LBB80_25:
	movq	(%r12), %r8
	leaq	1(%r8), %rdx
	cmpq	%rdx, (%r15)
	jae	.LBB80_27
# %bb.26:
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %r8
	leaq	1(%r8), %rdx
.LBB80_27:
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movzbl	35(%rsp), %edx                  # 1-byte Folded Reload
	movb	%dl, (%rcx,%r8)
	movq	%rsi, (%rax)
	addq	$120, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z"
	.globl	"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z" # -- Begin function ??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z
	.p2align	4, 0x90
"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z": # @"??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z"
.seh_proc "??$_Measure_string_prefix@D@__p2286@std@@YAPEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@AEAH@Z"
# %bb.0:
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	.seh_endprologue
	movq	%rdx, %rsi
	movl	(%rdx), %ebp
	movq	(%rcx), %rdx
	movq	8(%rcx), %rdi
	addq	%rdx, %rdi
	movq	%rdx, 40(%rsp)
	movq	%rdi, 48(%rsp)
	movq	$0, 56(%rsp)
	leaq	64(%rsp), %r9
	movl	$0, 64(%rsp)
	leaq	80(%rsp), %rcx
	movq	%rdi, %r8
	callq	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
	movq	80(%rsp), %rax
	movq	%rax, 56(%rsp)
	movb	$0, 72(%rsp)
	movq	40(%rsp), %rax
	cmpq	48(%rsp), %rax
	je	.LBB81_48
# %bb.1:
	xorl	%ecx, %ecx
	leaq	40(%rsp), %rbx
	.p2align	4, 0x90
.LBB81_2:                               # =>This Inner Loop Header: Depth=1
	testl	%ebp, %ebp
	js	.LBB81_4
# %bb.3:                                #   in Loop: Header=BB81_2 Depth=1
	cmpl	%ebp, %ecx
	je	.LBB81_49
.LBB81_4:                               #   in Loop: Header=BB81_2 Depth=1
	movl	64(%rsp), %edx
	cmpl	$4352, %edx                     # imm = 0x1100
	jb	.LBB81_5
# %bb.6:                                #   in Loop: Header=BB81_2 Depth=1
	movl	$2, %r14d
	cmpl	$4448, %edx                     # imm = 0x1160
	jb	.LBB81_45
# %bb.7:                                #   in Loop: Header=BB81_2 Depth=1
	cmpl	$9001, %edx                     # imm = 0x2329
	jb	.LBB81_5
# %bb.9:                                #   in Loop: Header=BB81_2 Depth=1
	cmpl	$9003, %edx                     # imm = 0x232B
	jb	.LBB81_45
# %bb.10:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$11904, %edx                    # imm = 0x2E80
	jb	.LBB81_5
# %bb.12:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$12351, %edx                    # imm = 0x303F
	jb	.LBB81_45
# %bb.13:                               #   in Loop: Header=BB81_2 Depth=1
	je	.LBB81_5
# %bb.15:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$42192, %edx                    # imm = 0xA4D0
	jb	.LBB81_45
# %bb.16:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$44032, %edx                    # imm = 0xAC00
	jb	.LBB81_5
# %bb.18:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$55204, %edx                    # imm = 0xD7A4
	jb	.LBB81_45
# %bb.19:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$63744, %edx                    # imm = 0xF900
	jb	.LBB81_5
# %bb.21:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$64256, %edx                    # imm = 0xFB00
	jb	.LBB81_45
# %bb.22:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65040, %edx                    # imm = 0xFE10
	jb	.LBB81_5
# %bb.24:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65050, %edx                    # imm = 0xFE1A
	jb	.LBB81_45
# %bb.25:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65072, %edx                    # imm = 0xFE30
	jb	.LBB81_5
# %bb.27:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65136, %edx                    # imm = 0xFE70
	jb	.LBB81_45
# %bb.28:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65280, %edx                    # imm = 0xFF00
	jb	.LBB81_5
# %bb.30:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65377, %edx                    # imm = 0xFF61
	jb	.LBB81_45
# %bb.31:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65504, %edx                    # imm = 0xFFE0
	jb	.LBB81_5
# %bb.33:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$65511, %edx                    # imm = 0xFFE7
	jb	.LBB81_45
# %bb.34:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$127744, %edx                   # imm = 0x1F300
	jb	.LBB81_5
# %bb.36:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$128592, %edx                   # imm = 0x1F650
	jb	.LBB81_45
# %bb.37:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$129280, %edx                   # imm = 0x1F900
	jb	.LBB81_5
# %bb.39:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$129536, %edx                   # imm = 0x1FA00
	jb	.LBB81_45
# %bb.40:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$131072, %edx                   # imm = 0x20000
	jae	.LBB81_42
	.p2align	4, 0x90
.LBB81_5:                               #   in Loop: Header=BB81_2 Depth=1
	movl	$1, %r14d
.LBB81_45:                              #   in Loop: Header=BB81_2 Depth=1
	movl	%r14d, %edx
	xorl	$2147483647, %edx               # imm = 0x7FFFFFFF
	cmpl	%ecx, %edx
	jb	.LBB81_50
# %bb.46:                               #   in Loop: Header=BB81_2 Depth=1
	addl	%ecx, %r14d
	cmpl	%r14d, %ebp
	jb	.LBB81_51
# %bb.47:                               #   in Loop: Header=BB81_2 Depth=1
	movq	%rbx, %rcx
	callq	"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ"
	movq	40(%rsp), %rax
	movl	%r14d, %ecx
	cmpq	48(%rsp), %rax
	jne	.LBB81_2
	jmp	.LBB81_51
.LBB81_42:                              #   in Loop: Header=BB81_2 Depth=1
	cmpl	$196606, %edx                   # imm = 0x2FFFE
	jb	.LBB81_45
# %bb.43:                               #   in Loop: Header=BB81_2 Depth=1
	movl	$1, %r14d
	cmpl	$196608, %edx                   # imm = 0x30000
	jb	.LBB81_45
# %bb.44:                               #   in Loop: Header=BB81_2 Depth=1
	cmpl	$262142, %edx                   # imm = 0x3FFFE
	movl	$0, %r14d
	adcl	$1, %r14d
	jmp	.LBB81_45
.LBB81_48:
	xorl	%ecx, %ecx
	jmp	.LBB81_51
.LBB81_49:
	movl	%ebp, %ecx
	jmp	.LBB81_51
.LBB81_50:
	testl	%ebp, %ebp
	js	.LBB81_53
.LBB81_51:
	movq	%rax, %rdi
.LBB81_52:
	movl	%ecx, (%rsi)
	movq	%rdi, %rax
	addq	$96, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	retq
.LBB81_53:
	movl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	jmp	.LBB81_52
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@U32@D@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@U31@D@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%rdx, %rsi
	movq	168(%rsp), %r12
	movl	(%r9), %ebp
	xorl	%r14d, %r14d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movq	%r9, 40(%rsp)                   # 8-byte Spill
	jle	.LBB82_5
# %bb.1:
	movzbl	9(%r9), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r10d
	cmovnel	%edx, %r10d
	cmpb	$3, %r10b
	je	.LBB82_33
# %bb.2:
	movzbl	%r10b, %edx
	cmpl	$2, %edx
	je	.LBB82_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB82_5
# %bb.4:
	movl	%eax, %r14d
.LBB82_5:
	leaq	15(%r9), %r15
	movzbl	14(%r9), %eax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movzbl	%al, %r13d
	movq	(%r12), %rbp
	movq	8(%r12), %rdi
	cmpq	$16, 24(%rbp)
	jb	.LBB82_19
.LBB82_18:
	movq	(%rbp), %rbp
.LBB82_19:
	subq	%rbp, %rdi
	je	.LBB82_24
# %bb.20:
	xorl	%ebx, %ebx
	jmp	.LBB82_21
	.p2align	4, 0x90
.LBB82_23:                              #   in Loop: Header=BB82_21 Depth=1
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%r12b, (%rcx,%rax)
	incq	%rbx
	cmpq	%rbx, %rdi
	je	.LBB82_24
.LBB82_21:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%rbp,%rbx), %r12d
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB82_23
# %bb.22:                               #   in Loop: Header=BB82_21 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB82_23
.LBB82_24:
	testl	%r14d, %r14d
	jle	.LBB82_32
# %bb.25:
	cmpb	$0, 32(%rsp)                    # 1-byte Folded Reload
	je	.LBB82_32
# %bb.26:
	movq	40(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r13), %rdi
	addq	$15, %rdi
	jmp	.LBB82_27
	.p2align	4, 0x90
.LBB82_31:                              #   in Loop: Header=BB82_27 Depth=1
	leal	-1(%r14), %eax
	cmpl	$1, %r14d
	movl	%eax, %r14d
	jle	.LBB82_32
.LBB82_27:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB82_28 Depth 2
	movq	%r15, %rbx
	jmp	.LBB82_28
	.p2align	4, 0x90
.LBB82_30:                              #   in Loop: Header=BB82_28 Depth=2
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%bpl, (%rcx,%rax)
	incq	%rbx
	cmpq	%rdi, %rbx
	je	.LBB82_31
.LBB82_28:                              #   Parent Loop BB82_27 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%rbx), %ebp
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB82_30
# %bb.29:                               #   in Loop: Header=BB82_28 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB82_30
.LBB82_32:
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	%rsi, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB82_33:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r14d
	movl	%eax, %ebp
	jmp	.LBB82_7
.LBB82_6:
	subl	%r8d, %ebp
	xorl	%r14d, %r14d
.LBB82_7:
	leaq	15(%r9), %r15
	movzbl	14(%r9), %eax
	movzbl	%al, %r13d
	testl	%ebp, %ebp
	jle	.LBB82_16
# %bb.8:
	testb	%al, %al
	jne	.LBB82_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	.LBB82_16
	.p2align	4, 0x90
.LBB82_14:                              #   in Loop: Header=BB82_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB82_15
.LBB82_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB82_11 Depth 2
	xorl	%edi, %edi
	jmp	.LBB82_11
	.p2align	4, 0x90
.LBB82_13:                              #   in Loop: Header=BB82_11 Depth=2
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%bl, (%rcx,%rax)
	incq	%rdi
	cmpq	%rdi, %r13
	je	.LBB82_14
.LBB82_11:                              #   Parent Loop BB82_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r15,%rdi), %ebx
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB82_13
# %bb.12:                               #   in Loop: Header=BB82_11 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB82_13
.LBB82_15:
	movb	$1, %al
.LBB82_16:
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	(%r12), %rbp
	movq	8(%r12), %rdi
	cmpq	$16, 24(%rbp)
	jae	.LBB82_18
	jmp	.LBB82_19
	.seh_endproc
                                        # -- End function
	.def	"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z"
	.globl	"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z" # -- Begin function ??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z
	.p2align	4, 0x90
"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z": # @"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z"
.seh_proc "??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	movl	%r9d, %eax
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	112(%rsp), %ecx
	leaq	48(%rsp), %rbx
	leal	-2(%rcx), %edx
	cmpl	$30, %edx
	ja	.LBB83_16
# %bb.1:
	leaq	.LJTI83_0(%rip), %r9
	movslq	(%r9,%rdx,4), %rdx
	addq	%r9, %rdx
	jmpq	*%rdx
.LBB83_14:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB83_15:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %eax
	xorl	%edx, %edx
	idivl	%ecx
	addb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
                                        # kill: def $eax killed $eax def $rax
	testb	%al, %al
	jne	.LBB83_15
.LBB83_18:
	subq	%r9, %rbx
	movq	%r8, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%rbx, %rcx
	jl	.LBB83_20
# %bb.19:
	movq	%rdi, %rcx
	movq	%r9, %rdx
	movq	%rbx, %r8
	callq	memmove
	addq	%rbx, %rdi
	xorl	%eax, %eax
	movq	%rdi, %r8
.LBB83_20:
	movq	%r8, (%rsi)
	movl	%eax, 8(%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	retq
.LBB83_4:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB83_5:                               # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$1, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	%cl
	cmpb	$2, %al
	movl	%ecx, %eax
	jae	.LBB83_5
	jmp	.LBB83_18
.LBB83_6:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB83_7:                               # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$3, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	$2, %cl
	cmpb	$4, %al
	movl	%ecx, %eax
	jae	.LBB83_7
	jmp	.LBB83_18
.LBB83_8:
	movq	%rbx, %r9
	movl	%eax, %ecx
	.p2align	4, 0x90
.LBB83_9:                               # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	andb	$7, %dl
	orb	$48, %dl
	movb	%dl, -1(%r9)
	decq	%r9
	shrb	$3, %cl
	cmpb	$8, %al
	movl	%ecx, %eax
	jae	.LBB83_9
	jmp	.LBB83_18
.LBB83_2:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB83_3:                               # =>This Inner Loop Header: Depth=1
	movzbl	%al, %ecx
	imull	$205, %ecx, %eax
	shrl	$11, %eax
	leal	(%rax,%rax), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%ecx, %r10d
	subb	%dl, %r10b
	orb	$48, %r10b
	movb	%r10b, -1(%r9)
	decq	%r9
	cmpb	$10, %cl
	jae	.LBB83_3
	jmp	.LBB83_18
.LBB83_16:
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB83_17:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %eax
	xorl	%edx, %edx
	idivl	%ecx
                                        # kill: def $edx killed $edx def $rdx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r10
	movzbl	(%rdx,%r10), %edx
	movb	%dl, -1(%r9)
	decq	%r9
                                        # kill: def $eax killed $eax def $rax
	testb	%al, %al
	jne	.LBB83_17
	jmp	.LBB83_18
.LBB83_10:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB83_11:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %edx
	movl	%edx, %eax
	andl	$15, %eax
	movzbl	(%rax,%rcx), %eax
	movb	%al, -1(%r9)
	decq	%r9
	movl	%edx, %eax
	shrb	$4, %al
	cmpb	$16, %dl
	jae	.LBB83_11
	jmp	.LBB83_18
.LBB83_12:
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movq	%rbx, %r9
	.p2align	4, 0x90
.LBB83_13:                              # =>This Inner Loop Header: Depth=1
	movzbl	%al, %edx
	movl	%edx, %eax
	andl	$31, %eax
	movzbl	(%rax,%rcx), %eax
	movb	%al, -1(%r9)
	decq	%r9
	movl	%edx, %eax
	shrb	$5, %al
	cmpb	$32, %dl
	jae	.LBB83_13
	jmp	.LBB83_18
	.p2align	2, 0x90
.LJTI83_0:
	.long	.LBB83_4-.LJTI83_0
	.long	.LBB83_14-.LJTI83_0
	.long	.LBB83_6-.LJTI83_0
	.long	.LBB83_14-.LJTI83_0
	.long	.LBB83_14-.LJTI83_0
	.long	.LBB83_14-.LJTI83_0
	.long	.LBB83_8-.LJTI83_0
	.long	.LBB83_14-.LJTI83_0
	.long	.LBB83_2-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_10-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_16-.LJTI83_0
	.long	.LBB83_12-.LJTI83_0
	.seh_endproc
                                        # -- End function
	.def	"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ"
	.globl	"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ" # -- Begin function ??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ
	.p2align	4, 0x90
"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ": # @"??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ"
.seh_proc "??E?$_Grapheme_break_property_iterator@D@std@@QEAAAEAV01@XZ"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%rcx, %rsi
	leaq	24(%rcx), %rdi
	movl	24(%rcx), %edx
	leaq	"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"(%rip), %rax
	movl	$1371, %ecx                     # imm = 0x55B
	.p2align	4, 0x90
.LBB84_1:                               # =>This Inner Loop Header: Depth=1
	movq	%rax, %r8
	movq	%rcx, %r9
	shrq	%r9
	movq	%r9, %r10
	notq	%r10
	addq	%rcx, %r10
	cmpl	%edx, (%rax,%r9,4)
	leaq	4(%rax,%r9,4), %rax
	cmovaq	%r8, %rax
	cmovaq	%r9, %r10
	movq	%r10, %rcx
	testq	%r10, %r10
	jg	.LBB84_1
# %bb.2:
	leaq	"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"(%rip), %r14
	subq	%r14, %rax
	je	.LBB84_3
# %bb.4:
	sarq	$2, %rax
	movzwl	5482(%r14,%rax,2), %ecx
	movl	%ecx, %r8d
	andl	$4095, %r8d                     # imm = 0xFFF
	shrl	$12, %ecx
	addl	-4(%r14,%rax,4), %r8d
	cmpl	%edx, %r8d
	movl	$255, %eax
	cmoval	%ecx, %eax
	jmp	.LBB84_5
.LBB84_3:
	movb	$-1, %al
.LBB84_5:
	leaq	"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B"(%rip), %rcx
	movl	$78, %r8d
	.p2align	4, 0x90
.LBB84_6:                               # =>This Inner Loop Header: Depth=1
	movq	%rcx, %r9
	movq	%r8, %r10
	shrq	%r10
	movq	%r10, %r11
	notq	%r11
	addq	%r8, %r11
	cmpl	%edx, (%rcx,%r10,4)
	leaq	4(%rcx,%r10,4), %rcx
	cmovaq	%r9, %rcx
	cmovaq	%r10, %r11
	movq	%r11, %r8
	testq	%r11, %r11
	jg	.LBB84_6
# %bb.7:
	leaq	"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B"(%rip), %r15
	subq	%r15, %rcx
	je	.LBB84_8
# %bb.9:
	sarq	$2, %rcx
	movzwl	310(%r15,%rcx,2), %r8d
	addl	-4(%r15,%rcx,4), %r8d
	xorl	%ecx, %ecx
	cmpl	%r8d, %edx
	adcb	$-1, %cl
	jmp	.LBB84_10
.LBB84_8:
	movb	$-1, %cl
.LBB84_10:
	movq	8(%rsi), %r8
	movq	16(%rsi), %rdx
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB84_11:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB84_14 Depth 2
                                        #     Child Loop BB84_19 Depth 2
	movq	%rdx, (%rsi)
	cmpq	%r8, %rdx
	je	.LBB84_52
# %bb.12:                               #   in Loop: Header=BB84_11 Depth=1
	movl	%ecx, %r12d
	movl	%eax, %r13d
	leaq	40(%rsp), %rcx
	movq	%rdi, %r9
	callq	"?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
	movq	40(%rsp), %rdx
	movq	%rdx, 16(%rsi)
	movq	8(%rsi), %r8
	cmpq	%r8, (%rsi)
	je	.LBB84_52
# %bb.13:                               #   in Loop: Header=BB84_11 Depth=1
	movl	(%rdi), %ecx
	movl	$1371, %ebx                     # imm = 0x55B
	movq	%r14, %r9
	.p2align	4, 0x90
.LBB84_14:                              #   Parent Loop BB84_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r9, %r10
	movq	%rbx, %rax
	shrq	%rax
	movq	%rax, %r11
	notq	%r11
	addq	%rbx, %r11
	cmpl	%ecx, (%r9,%rax,4)
	leaq	4(%r9,%rax,4), %r9
	cmovaq	%r10, %r9
	cmovaq	%rax, %r11
	movq	%r11, %rbx
	testq	%r11, %r11
	jg	.LBB84_14
# %bb.15:                               #   in Loop: Header=BB84_11 Depth=1
	subq	%r14, %r9
	je	.LBB84_16
# %bb.17:                               #   in Loop: Header=BB84_11 Depth=1
	sarq	$2, %r9
	movzwl	5482(%r14,%r9,2), %eax
	movl	%eax, %r10d
	andl	$4095, %r10d                    # imm = 0xFFF
	shrl	$12, %eax
	addl	-4(%r14,%r9,4), %r10d
	cmpl	%ecx, %r10d
	movl	$255, %r9d
	cmovbel	%r9d, %eax
	jmp	.LBB84_18
	.p2align	4, 0x90
.LBB84_16:                              #   in Loop: Header=BB84_11 Depth=1
	movb	$-1, %al
.LBB84_18:                              #   in Loop: Header=BB84_11 Depth=1
	movl	$78, %r14d
	movq	%r15, %r9
	.p2align	4, 0x90
.LBB84_19:                              #   Parent Loop BB84_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r9, %r11
	movq	%r14, %r10
	shrq	%r10
	movq	%r10, %rbx
	notq	%rbx
	addq	%r14, %rbx
	cmpl	%ecx, (%r9,%r10,4)
	leaq	4(%r9,%r10,4), %r9
	cmovaq	%r11, %r9
	cmovaq	%r10, %rbx
	movq	%rbx, %r14
	testq	%rbx, %rbx
	jg	.LBB84_19
# %bb.20:                               #   in Loop: Header=BB84_11 Depth=1
	subq	%r15, %r9
	je	.LBB84_21
# %bb.22:                               #   in Loop: Header=BB84_11 Depth=1
	sarq	$2, %r9
	movzwl	310(%r15,%r9,2), %r10d
	addl	-4(%r15,%r9,4), %r10d
	cmpl	%r10d, %ecx
	movl	$0, %ecx
	adcb	$-1, %cl
	leaq	"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"(%rip), %r14
	cmpb	$0, 32(%rsi)
	movzbl	%r13b, %r10d
	je	.LBB84_24
.LBB84_26:                              #   in Loop: Header=BB84_11 Depth=1
	xorl	%r9d, %r9d
	cmpb	$2, %r13b
	je	.LBB84_27
# %bb.28:                               #   in Loop: Header=BB84_11 Depth=1
	cmpl	$12, %r10d
	jne	.LBB84_30
# %bb.29:                               #   in Loop: Header=BB84_11 Depth=1
	movb	$1, %r9b
	xorl	%r11d, %r11d
	jmp	.LBB84_31
	.p2align	4, 0x90
.LBB84_21:                              #   in Loop: Header=BB84_11 Depth=1
	movb	$-1, %cl
	leaq	"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"(%rip), %r14
	cmpb	$0, 32(%rsi)
	movzbl	%r13b, %r10d
	jne	.LBB84_26
.LBB84_24:                              #   in Loop: Header=BB84_11 Depth=1
	xorl	%r9d, %r9d
	testb	%r12b, %r12b
	jne	.LBB84_32
# %bb.25:                               #   in Loop: Header=BB84_11 Depth=1
	movb	$1, %r11b
	jmp	.LBB84_31
.LBB84_27:                              #   in Loop: Header=BB84_11 Depth=1
	xorl	%r11d, %r11d
	xorl	%ebp, %ebp
	jmp	.LBB84_36
.LBB84_30:                              #   in Loop: Header=BB84_11 Depth=1
	xorl	%r11d, %r11d
	xorl	%r9d, %r9d
.LBB84_31:                              #   in Loop: Header=BB84_11 Depth=1
	movb	%r11b, 32(%rsi)
.LBB84_32:                              #   in Loop: Header=BB84_11 Depth=1
	incq	%rbp
	cmpb	$8, %r13b
	sete	%r11b
	movl	$0, %ebx
	cmovneq	%rbx, %rbp
	testb	%r13b, %r13b
	jne	.LBB84_34
# %bb.33:                               #   in Loop: Header=BB84_11 Depth=1
	cmpb	$4, %al
	je	.LBB84_11
.LBB84_34:                              #   in Loop: Header=BB84_11 Depth=1
	cmpb	$4, %r13b
	ja	.LBB84_36
# %bb.35:                               #   in Loop: Header=BB84_11 Depth=1
	movl	$19, %ebx
	btl	%r10d, %ebx
	jb	.LBB84_52
.LBB84_36:                              #   in Loop: Header=BB84_11 Depth=1
	movzbl	%al, %r12d
	cmpb	$4, %al
	ja	.LBB84_38
# %bb.37:                               #   in Loop: Header=BB84_11 Depth=1
	movl	$19, %ebx
	btl	%r12d, %ebx
	jb	.LBB84_52
.LBB84_38:                              #   in Loop: Header=BB84_11 Depth=1
	cmpb	$11, %r13b
	je	.LBB84_43
# %bb.39:                               #   in Loop: Header=BB84_11 Depth=1
	cmpl	$5, %r10d
	je	.LBB84_43
# %bb.40:                               #   in Loop: Header=BB84_11 Depth=1
	cmpl	$3, %r10d
	jne	.LBB84_44
# %bb.41:                               #   in Loop: Header=BB84_11 Depth=1
	cmpb	$11, %al
	ja	.LBB84_44
# %bb.42:                               #   in Loop: Header=BB84_11 Depth=1
	movl	$2152, %r10d                    # imm = 0x868
	btl	%r12d, %r10d
	jb	.LBB84_11
	jmp	.LBB84_44
	.p2align	4, 0x90
.LBB84_43:                              #   in Loop: Header=BB84_11 Depth=1
	movl	%eax, %r10d
	andb	$-2, %r10b
	cmpb	$10, %r10b
	je	.LBB84_11
.LBB84_44:                              #   in Loop: Header=BB84_11 Depth=1
	leal	-6(%r13), %r10d
	testb	$-5, %r10b
	jne	.LBB84_46
# %bb.45:                               #   in Loop: Header=BB84_11 Depth=1
	cmpb	$10, %al
	je	.LBB84_11
.LBB84_46:                              #   in Loop: Header=BB84_11 Depth=1
	cmpb	$12, %al
	ja	.LBB84_48
# %bb.47:                               #   in Loop: Header=BB84_11 Depth=1
	movl	$4612, %r10d                    # imm = 0x1204
	btl	%r12d, %r10d
	jb	.LBB84_11
.LBB84_48:                              #   in Loop: Header=BB84_11 Depth=1
	testb	%cl, %cl
	sete	%r10b
	cmpb	$7, %r13b
	je	.LBB84_11
# %bb.49:                               #   in Loop: Header=BB84_11 Depth=1
	andb	%r9b, %r10b
	jne	.LBB84_11
# %bb.50:                               #   in Loop: Header=BB84_11 Depth=1
	cmpb	$8, %al
	setne	%al
	xorb	$1, %r11b
	orb	%al, %r11b
	jne	.LBB84_52
# %bb.51:                               #   in Loop: Header=BB84_11 Depth=1
	movl	%ebp, %r9d
	movb	$8, %al
	andl	$1, %r9d
	jne	.LBB84_11
.LBB84_52:
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@V?$basic_string_view@DU?$char_traits@D@std@@@2@AEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0V?$basic_string_view@DU?$char_traits@D@std@@@1@1V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%rdx, %rsi
	movq	168(%rsp), %r12
	movl	(%r9), %ebp
	xorl	%r14d, %r14d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movq	%r9, 40(%rsp)                   # 8-byte Spill
	jle	.LBB85_5
# %bb.1:
	movzbl	9(%r9), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r10d
	cmovnel	%edx, %r10d
	cmpb	$3, %r10b
	je	.LBB85_31
# %bb.2:
	movzbl	%r10b, %edx
	cmpl	$2, %edx
	je	.LBB85_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB85_5
# %bb.4:
	movl	%eax, %r14d
.LBB85_5:
	leaq	15(%r9), %r15
	movzbl	14(%r9), %eax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movzbl	%al, %r13d
	movq	(%r12), %rbp
	movq	16(%r12), %rdi
	subq	%rbp, %rdi
	jne	.LBB85_18
	jmp	.LBB85_22
.LBB85_31:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r14d
	movl	%eax, %ebp
	jmp	.LBB85_7
.LBB85_6:
	subl	%r8d, %ebp
	xorl	%r14d, %r14d
.LBB85_7:
	leaq	15(%r9), %r15
	movzbl	14(%r9), %eax
	movzbl	%al, %r13d
	testl	%ebp, %ebp
	jle	.LBB85_16
# %bb.8:
	testb	%al, %al
	jne	.LBB85_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	jmp	.LBB85_16
	.p2align	4, 0x90
.LBB85_14:                              #   in Loop: Header=BB85_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB85_15
.LBB85_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_11 Depth 2
	xorl	%edi, %edi
	jmp	.LBB85_11
	.p2align	4, 0x90
.LBB85_13:                              #   in Loop: Header=BB85_11 Depth=2
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%bl, (%rcx,%rax)
	incq	%rdi
	cmpq	%rdi, %r13
	je	.LBB85_14
.LBB85_11:                              #   Parent Loop BB85_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r15,%rdi), %ebx
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB85_13
# %bb.12:                               #   in Loop: Header=BB85_11 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB85_13
.LBB85_15:
	movb	$1, %al
.LBB85_16:
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	(%r12), %rbp
	movq	16(%r12), %rdi
	subq	%rbp, %rdi
	je	.LBB85_22
.LBB85_18:
	xorl	%ebx, %ebx
	jmp	.LBB85_19
	.p2align	4, 0x90
.LBB85_21:                              #   in Loop: Header=BB85_19 Depth=1
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%r12b, (%rcx,%rax)
	incq	%rbx
	cmpq	%rbx, %rdi
	je	.LBB85_22
.LBB85_19:                              # =>This Inner Loop Header: Depth=1
	movzbl	(%rbp,%rbx), %r12d
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB85_21
# %bb.20:                               #   in Loop: Header=BB85_19 Depth=1
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB85_21
.LBB85_22:
	testl	%r14d, %r14d
	jle	.LBB85_30
# %bb.23:
	cmpb	$0, 32(%rsp)                    # 1-byte Folded Reload
	je	.LBB85_30
# %bb.24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r13), %rbx
	addq	$15, %rbx
	jmp	.LBB85_25
	.p2align	4, 0x90
.LBB85_29:                              #   in Loop: Header=BB85_25 Depth=1
	leal	-1(%r14), %eax
	cmpl	$1, %r14d
	movl	%eax, %r14d
	jle	.LBB85_30
.LBB85_25:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_26 Depth 2
	movq	%r15, %rdi
	jmp	.LBB85_26
	.p2align	4, 0x90
.LBB85_28:                              #   in Loop: Header=BB85_26 Depth=2
	movq	8(%rsi), %rcx
	movq	%rdx, 16(%rsi)
	movb	%bpl, (%rcx,%rax)
	incq	%rdi
	cmpq	%rbx, %rdi
	je	.LBB85_29
.LBB85_26:                              #   Parent Loop BB85_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%rdi), %ebp
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rsi)
	jae	.LBB85_28
# %bb.27:                               #   in Loop: Header=BB85_26 Depth=2
	movq	(%rsi), %rax
	movq	%rsi, %rcx
	callq	*(%rax)
	movq	16(%rsi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB85_28
.LBB85_30:
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	%rsi, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.globl	"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z" # -- Begin function ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	.p2align	4, 0x90
"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z": # @"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
.Lfunc_begin31:
.seh_proc "?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$160, %rsp
	.seh_stackalloc 160
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 24(%rbp)
	testq	%rcx, %rcx
	je	.LBB86_8
# %bb.1:
	movq	%rcx, %rsi
	cmpq	$0, (%rcx)
	jne	.LBB86_8
# %bb.2:
	movq	%rdx, %rdi
	movl	$48, %ecx
	callq	"??2@YAPEAX_K@Z"
	movq	8(%rdi), %rdx
	testq	%rdx, %rdx
	movq	%rax, 16(%rbp)                  # 8-byte Spill
	je	.LBB86_3
# %bb.4:
	movq	40(%rdx), %rax
	addq	$48, %rdx
	testq	%rax, %rax
	cmovneq	%rax, %rdx
	jmp	.LBB86_5
.LBB86_3:
	leaq	"??_C@_00CNPNBAHC@?$AA@"(%rip), %rdx
.LBB86_5:
.Ltmp150:
	leaq	-88(%rbp), %rcx
	callq	"??0_Locinfo@std@@QEAA@PEBD@Z"
.Ltmp151:
# %bb.6:
	movq	16(%rbp), %rdi                  # 8-byte Reload
	movl	$0, 8(%rdi)
	leaq	"??_7?$numpunct@D@std@@6B@"(%rip), %rax
	movq	%rax, (%rdi)
.Ltmp152:
	leaq	-88(%rbp), %rdx
	movq	%rdi, %rcx
	movb	$1, %r8b
	callq	"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
.Ltmp153:
# %bb.7:
	movq	%rdi, (%rsi)
	leaq	-88(%rbp), %rcx
	callq	"??1_Locinfo@std@@QEAA@XZ"
.LBB86_8:
	movl	$4, %eax
	addq	$160, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z")@IMGREL
	.section	.text,"xr",discard,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.seh_endproc
	.def	"?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA":
.seh_proc "?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA"
.LBB86_9:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	-88(%rbp), %rcx
	callq	"??1_Locinfo@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.seh_endproc
	.def	"?dtor$10@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$10@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA":
.seh_proc "?dtor$10@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA"
.LBB86_10:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	16(%rbp), %rcx                  # 8-byte Reload
	callq	"??3@YAXPEAX@Z"
	nop
	addq	$32, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end31:
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
	.p2align	2, 0x0
"$cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z")@IMGREL # IPToStateXData
	.long	152                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z":
	.long	-1                              # ToState
	.long	"?dtor$10@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA"@IMGREL # Action
	.long	0                               # ToState
	.long	"?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA"@IMGREL # Action
"$ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z":
	.long	.Lfunc_begin31@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp150@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp152@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp153@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z"
                                        # -- End function
	.def	"?_Throw_bad_cast@std@@YAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Throw_bad_cast@std@@YAXXZ"
	.globl	"?_Throw_bad_cast@std@@YAXXZ"   # -- Begin function ?_Throw_bad_cast@std@@YAXXZ
	.p2align	4, 0x90
"?_Throw_bad_cast@std@@YAXXZ":          # @"?_Throw_bad_cast@std@@YAXXZ"
.seh_proc "?_Throw_bad_cast@std@@YAXXZ"
# %bb.0:
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	$0, 48(%rsp)
	leaq	"??_C@_08EPJLHIJG@bad?5cast?$AA@"(%rip), %rax
	movq	%rax, 40(%rsp)
	leaq	"??_7bad_cast@std@@6B@"(%rip), %rax
	movq	%rax, 32(%rsp)
	leaq	"_TI2?AVbad_cast@std@@"(%rip), %rdx
	leaq	32(%rsp), %rcx
	callq	_CxxThrowException
	int3
	.seh_endproc
                                        # -- End function
	.def	"??0_Locinfo@std@@QEAA@PEBD@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0_Locinfo@std@@QEAA@PEBD@Z"
	.globl	"??0_Locinfo@std@@QEAA@PEBD@Z"  # -- Begin function ??0_Locinfo@std@@QEAA@PEBD@Z
	.p2align	4, 0x90
"??0_Locinfo@std@@QEAA@PEBD@Z":         # @"??0_Locinfo@std@@QEAA@PEBD@Z"
.Lfunc_begin32:
.seh_proc "??0_Locinfo@std@@QEAA@PEBD@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, %rsi
	movq	%rcx, %rdi
	xorl	%edx, %edx
	callq	"??0_Lockit@std@@QEAA@H@Z"
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	movq	$0, 24(%rdi)
	movb	$0, 32(%rdi)
	movq	$0, 40(%rdi)
	movw	$0, 48(%rdi)
	movq	$0, 56(%rdi)
	movw	$0, 64(%rdi)
	movq	$0, 72(%rdi)
	movb	$0, 80(%rdi)
	movq	$0, 88(%rdi)
	movb	$0, 96(%rdi)
	testq	%rsi, %rsi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	je	.LBB88_3
# %bb.1:
.Ltmp154:
	movq	%rdi, %rcx
	movq	%rsi, %rdx
	callq	"?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z"
.Ltmp155:
# %bb.2:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
.LBB88_3:
.Ltmp156:
	leaq	"??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@"(%rip), %rcx
	callq	"?_Xruntime_error@std@@YAXPEBD@Z"
.Ltmp157:
# %bb.4:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z")@IMGREL
	.section	.text,"xr",discard,"??0_Locinfo@std@@QEAA@PEBD@Z"
	.seh_endproc
	.def	"?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA":
.seh_proc "?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA"
.LBB88_5:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	%rax, %rsi
	movq	88(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB88_7
# %bb.6:
	callq	free
.LBB88_7:
	movq	%rsi, %rax
	movq	$0, 88(%rsi)
	movq	72(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB88_9
# %bb.8:
	callq	free
.LBB88_9:
	movq	%rsi, %rax
	movq	$0, 72(%rsi)
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB88_11
# %bb.10:
	callq	free
.LBB88_11:
	movq	%rsi, %rax
	movq	$0, 56(%rsi)
	movq	40(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB88_13
# %bb.12:
	callq	free
.LBB88_13:
	movq	%rsi, %rax
	movq	$0, 40(%rsi)
	movq	24(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB88_15
# %bb.14:
	callq	free
.LBB88_15:
	movq	%rsi, %rax
	movq	$0, 24(%rsi)
	movq	8(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB88_17
# %bb.16:
	callq	free
.LBB88_17:
	movq	%rsi, %rcx
	movq	$0, 8(%rsi)
	callq	"??1_Lockit@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end32:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0_Locinfo@std@@QEAA@PEBD@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0_Locinfo@std@@QEAA@PEBD@Z"
	.p2align	2, 0x0
"$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z":
	.long	-1                              # ToState
	.long	"?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA"@IMGREL # Action
"$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z":
	.long	.Lfunc_begin32@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp154@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp157@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0_Locinfo@std@@QEAA@PEBD@Z"
                                        # -- End function
	.def	"??1_Locinfo@std@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1_Locinfo@std@@QEAA@XZ"
	.globl	"??1_Locinfo@std@@QEAA@XZ"      # -- Begin function ??1_Locinfo@std@@QEAA@XZ
	.p2align	4, 0x90
"??1_Locinfo@std@@QEAA@XZ":             # @"??1_Locinfo@std@@QEAA@XZ"
.Lfunc_begin33:
.seh_proc "??1_Locinfo@std@@QEAA@XZ"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
.Ltmp158:
	callq	"?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z"
.Ltmp159:
# %bb.1:
	movq	88(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_3
# %bb.2:
	callq	free
.LBB89_3:
	movq	$0, 88(%rsi)
	movq	72(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_5
# %bb.4:
	callq	free
.LBB89_5:
	movq	$0, 72(%rsi)
	movq	56(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_7
# %bb.6:
	callq	free
.LBB89_7:
	movq	$0, 56(%rsi)
	movq	40(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_9
# %bb.8:
	callq	free
.LBB89_9:
	movq	$0, 40(%rsi)
	movq	24(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_11
# %bb.10:
	callq	free
.LBB89_11:
	movq	$0, 24(%rsi)
	movq	8(%rsi), %rcx
	testq	%rcx, %rcx
	je	.LBB89_13
# %bb.12:
	callq	free
.LBB89_13:
	movq	$0, 8(%rsi)
	movq	%rsi, %rcx
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	jmp	"??1_Lockit@std@@QEAA@XZ"       # TAILCALL
	.seh_handlerdata
	.long	("$cppxdata$??1_Locinfo@std@@QEAA@XZ")@IMGREL
	.section	.text,"xr",discard,"??1_Locinfo@std@@QEAA@XZ"
	.seh_endproc
	.def	"?dtor$14@?0???1_Locinfo@std@@QEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???1_Locinfo@std@@QEAA@XZ@4HA":
.seh_proc "?dtor$14@?0???1_Locinfo@std@@QEAA@XZ@4HA"
.LBB89_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end33:
	.seh_handlerdata
	.section	.text,"xr",discard,"??1_Locinfo@std@@QEAA@XZ"
	.seh_endproc
	.section	.xdata,"dr",associative,"??1_Locinfo@std@@QEAA@XZ"
	.p2align	2, 0x0
"$cppxdata$??1_Locinfo@std@@QEAA@XZ":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??1_Locinfo@std@@QEAA@XZ")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??1_Locinfo@std@@QEAA@XZ")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??1_Locinfo@std@@QEAA@XZ":
	.long	-1                              # ToState
	.long	"?dtor$14@?0???1_Locinfo@std@@QEAA@XZ@4HA"@IMGREL # Action
"$ip2state$??1_Locinfo@std@@QEAA@XZ":
	.long	.Lfunc_begin33@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp158@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp159@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??1_Locinfo@std@@QEAA@XZ"
                                        # -- End function
	.def	"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
	.globl	"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z" # -- Begin function ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	.p2align	4, 0x90
"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z": # @"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
.Lfunc_begin34:
.seh_proc "?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$144, %rsp
	.seh_stackalloc 144
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 8(%rbp)
	movb	%r8b, %bl
	movq	%rcx, %rsi
	callq	localeconv
	movq	%rax, %rdi
	leaq	-96(%rbp), %rcx
	callq	_Getcvt
	movq	$0, 16(%rsi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 32(%rsi)
	movq	%rsi, (%rbp)
.Ltmp160:
	leaq	-48(%rbp), %rcx
	callq	_Getcvt
.Ltmp161:
# %bb.1:
	testb	%bl, %bl
	je	.LBB90_3
# %bb.2:
	leaq	"??_C@_00CNPNBAHC@?$AA@"(%rip), %r14
	jmp	.LBB90_4
.LBB90_3:
	movq	16(%rdi), %r14
.LBB90_4:
	movq	%r14, %rcx
	callq	strlen
	movq	%rax, %r15
	incq	%r15
	movl	$1, %edx
	movq	%r15, %rcx
	callq	calloc
	testq	%rax, %rax
	je	.LBB90_11
# %bb.5:
	movq	%rax, %r12
	testq	%r15, %r15
	je	.LBB90_7
# %bb.6:
	movq	%r12, %rcx
	movq	%r14, %rdx
	movq	%r15, %r8
	callq	memcpy
.LBB90_7:
	movq	%r12, 16(%rsi)
	movl	$6, %ecx
	movl	$1, %edx
	callq	calloc
	testq	%rax, %rax
	je	.LBB90_13
# %bb.8:
	leaq	32(%rsi), %rcx
	movw	$101, 4(%rax)
	movl	$1936482662, (%rax)             # imm = 0x736C6166
	movq	%rax, (%rcx)
	movl	$5, %ecx
	movl	$1, %edx
	callq	calloc
	testq	%rax, %rax
	je	.LBB90_15
# %bb.9:
	movb	$0, 4(%rax)
	movl	$1702195828, (%rax)             # imm = 0x65757274
	movq	%rax, 40(%rsi)
	testb	%bl, %bl
	je	.LBB90_17
# %bb.10:
	movb	$46, 24(%rsi)
	movb	$44, %al
	jmp	.LBB90_18
.LBB90_17:
	movq	(%rdi), %rax
	movzbl	(%rax), %eax
	movb	%al, 24(%rsi)
	movq	8(%rdi), %rax
	movzbl	(%rax), %eax
.LBB90_18:
	movb	%al, 25(%rsi)
	addq	$144, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB90_11:
.Ltmp166:
	callq	"?_Xbad_alloc@std@@YAXXZ"
.Ltmp167:
# %bb.12:
.LBB90_13:
.Ltmp164:
	callq	"?_Xbad_alloc@std@@YAXXZ"
.Ltmp165:
# %bb.14:
.LBB90_15:
.Ltmp162:
	callq	"?_Xbad_alloc@std@@YAXXZ"
.Ltmp163:
# %bb.16:
	int3
	.seh_handlerdata
	.long	("$cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z")@IMGREL
	.section	.text,"xr",discard,"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
	.seh_endproc
	.def	"?dtor$19@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$19@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA":
.seh_proc "?dtor$19@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA"
.LBB90_19:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	%rbp, %rcx
	callq	"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end34:
	.seh_handlerdata
	.section	.text,"xr",discard,"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
	.p2align	2, 0x0
"$cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z")@IMGREL # IPToStateXData
	.long	136                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z":
	.long	-1                              # ToState
	.long	"?dtor$19@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA"@IMGREL # Action
"$ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z":
	.long	.Lfunc_begin34@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp160@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp161@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp166@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp163@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z"
                                        # -- End function
	.def	"??_G?$numpunct@D@std@@MEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_G?$numpunct@D@std@@MEAAPEAXI@Z"
	.globl	"??_G?$numpunct@D@std@@MEAAPEAXI@Z" # -- Begin function ??_G?$numpunct@D@std@@MEAAPEAXI@Z
	.p2align	4, 0x90
"??_G?$numpunct@D@std@@MEAAPEAXI@Z":    # @"??_G?$numpunct@D@std@@MEAAPEAXI@Z"
.seh_proc "??_G?$numpunct@D@std@@MEAAPEAXI@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$40, %rsp
	.seh_stackalloc 40
	.seh_endprologue
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7?$numpunct@D@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	movq	16(%rcx), %rcx
	callq	free
	movq	32(%rsi), %rcx
	callq	free
	movq	40(%rsi), %rcx
	callq	free
	testl	%edi, %edi
	je	.LBB91_2
# %bb.1:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB91_2:
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rdi
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"?_Incref@facet@locale@std@@UEAAXXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Incref@facet@locale@std@@UEAAXXZ"
	.globl	"?_Incref@facet@locale@std@@UEAAXXZ" # -- Begin function ?_Incref@facet@locale@std@@UEAAXXZ
	.p2align	4, 0x90
"?_Incref@facet@locale@std@@UEAAXXZ":   # @"?_Incref@facet@locale@std@@UEAAXXZ"
# %bb.0:
	lock		incl	8(%rcx)
	retq
                                        # -- End function
	.def	"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ"
	.globl	"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ" # -- Begin function ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	.p2align	4, 0x90
"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ": # @"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ"
# %bb.0:
	xorl	%eax, %eax
	lock		decl	8(%rcx)
	cmoveq	%rcx, %rax
	retq
                                        # -- End function
	.def	"?do_decimal_point@?$numpunct@D@std@@MEBADXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?do_decimal_point@?$numpunct@D@std@@MEBADXZ"
	.globl	"?do_decimal_point@?$numpunct@D@std@@MEBADXZ" # -- Begin function ?do_decimal_point@?$numpunct@D@std@@MEBADXZ
	.p2align	4, 0x90
"?do_decimal_point@?$numpunct@D@std@@MEBADXZ": # @"?do_decimal_point@?$numpunct@D@std@@MEBADXZ"
# %bb.0:
	movzbl	24(%rcx), %eax
	retq
                                        # -- End function
	.def	"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ"
	.globl	"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ" # -- Begin function ?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
	.p2align	4, 0x90
"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ": # @"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ"
# %bb.0:
	movzbl	25(%rcx), %eax
	retq
                                        # -- End function
	.def	"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
	.globl	"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ" # -- Begin function ?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	.p2align	4, 0x90
"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ": # @"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
.seh_proc "?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rdx, %rsi
	movq	16(%rcx), %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdx)
	movups	%xmm0, (%rdx)
	movq	%rbx, %rcx
	callq	strlen
	testq	%rax, %rax
	js	.LBB96_8
# %bb.1:
	movq	%rax, %rdi
	cmpq	$15, %rax
	ja	.LBB96_3
# %bb.2:
	movq	%rdi, 16(%rsi)
	movq	$15, 24(%rsi)
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%rsi, %rdi
	jmp	.LBB96_7
.LBB96_3:
	movq	$15, 24(%rsi)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB96_5
# %bb.4:
	leaq	40(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB96_6
.LBB96_5:
	leaq	1(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
.LBB96_6:
	movq	%r14, (%rsi)
	movq	%rdi, 16(%rsi)
	movq	%r15, 24(%rsi)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB96_7:
	movb	$0, (%rdi)
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB96_8:
	callq	"?_Xlen_string@std@@YAXXZ"
	int3
	.seh_endproc
                                        # -- End function
	.def	"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
	.globl	"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ" # -- Begin function ?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	.p2align	4, 0x90
"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ": # @"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
.seh_proc "?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rdx, %rsi
	movq	32(%rcx), %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdx)
	movups	%xmm0, (%rdx)
	movq	%rbx, %rcx
	callq	strlen
	testq	%rax, %rax
	js	.LBB97_8
# %bb.1:
	movq	%rax, %rdi
	cmpq	$15, %rax
	ja	.LBB97_3
# %bb.2:
	movq	%rdi, 16(%rsi)
	movq	$15, 24(%rsi)
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%rsi, %rdi
	jmp	.LBB97_7
.LBB97_3:
	movq	$15, 24(%rsi)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB97_5
# %bb.4:
	leaq	40(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB97_6
.LBB97_5:
	leaq	1(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
.LBB97_6:
	movq	%r14, (%rsi)
	movq	%rdi, 16(%rsi)
	movq	%r15, 24(%rsi)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB97_7:
	movb	$0, (%rdi)
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB97_8:
	callq	"?_Xlen_string@std@@YAXXZ"
	int3
	.seh_endproc
                                        # -- End function
	.def	"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
	.globl	"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ" # -- Begin function ?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	.p2align	4, 0x90
"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ": # @"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
.seh_proc "?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rdx, %rsi
	movq	40(%rcx), %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdx)
	movups	%xmm0, (%rdx)
	movq	%rbx, %rcx
	callq	strlen
	testq	%rax, %rax
	js	.LBB98_8
# %bb.1:
	movq	%rax, %rdi
	cmpq	$15, %rax
	ja	.LBB98_3
# %bb.2:
	movq	%rdi, 16(%rsi)
	movq	$15, 24(%rsi)
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%rsi, %rdi
	jmp	.LBB98_7
.LBB98_3:
	movq	$15, 24(%rsi)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB98_5
# %bb.4:
	leaq	40(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB98_6
.LBB98_5:
	leaq	1(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
.LBB98_6:
	movq	%r14, (%rsi)
	movq	%rdi, 16(%rsi)
	movq	%r15, 24(%rsi)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB98_7:
	movb	$0, (%rdi)
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB98_8:
	callq	"?_Xlen_string@std@@YAXXZ"
	int3
	.seh_endproc
                                        # -- End function
	.def	"??_Gfacet@locale@std@@MEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gfacet@locale@std@@MEAAPEAXI@Z"
	.globl	"??_Gfacet@locale@std@@MEAAPEAXI@Z" # -- Begin function ??_Gfacet@locale@std@@MEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gfacet@locale@std@@MEAAPEAXI@Z":    # @"??_Gfacet@locale@std@@MEAAPEAXI@Z"
.seh_proc "??_Gfacet@locale@std@@MEAAPEAXI@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rcx, %rsi
	testl	%edx, %edx
	je	.LBB99_2
# %bb.1:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB99_2:
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??_G_Facet_base@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_G_Facet_base@std@@UEAAPEAXI@Z"
	.globl	"??_G_Facet_base@std@@UEAAPEAXI@Z" # -- Begin function ??_G_Facet_base@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_G_Facet_base@std@@UEAAPEAXI@Z":     # @"??_G_Facet_base@std@@UEAAPEAXI@Z"
# %bb.0:
	ud2
                                        # -- End function
	.def	"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ"
	.globl	"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ" # -- Begin function ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ
	.p2align	4, 0x90
"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ": # @"??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ"
.seh_proc "??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	(%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB101_1
# %bb.2:
	movq	16(%rsi), %rcx
	callq	free
	movq	32(%rsi), %rcx
	callq	free
	movq	40(%rsi), %rcx
	addq	$32, %rsp
	popq	%rsi
	jmp	free                            # TAILCALL
.LBB101_1:
	nop
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??0bad_cast@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0bad_cast@std@@QEAA@AEBV01@@Z"
	.globl	"??0bad_cast@std@@QEAA@AEBV01@@Z" # -- Begin function ??0bad_cast@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0bad_cast@std@@QEAA@AEBV01@@Z":      # @"??0bad_cast@std@@QEAA@AEBV01@@Z"
.Lfunc_begin35:
.seh_proc "??0bad_cast@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdx), %rcx
.Ltmp168:
	movq	%rax, %rdx
	callq	__std_exception_copy
.Ltmp169:
# %bb.1:
	leaq	"??_7bad_cast@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0bad_cast@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA"
.LBB102_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end35:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0bad_cast@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0bad_cast@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin35@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp168@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp169@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0bad_cast@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??1exception@std@@UEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1exception@std@@UEAA@XZ"
	.globl	"??1exception@std@@UEAA@XZ"     # -- Begin function ??1exception@std@@UEAA@XZ
	.p2align	4, 0x90
"??1exception@std@@UEAA@XZ":            # @"??1exception@std@@UEAA@XZ"
.Lfunc_begin36:
.seh_proc "??1exception@std@@UEAA@XZ"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp170:
	callq	__std_exception_destroy
.Ltmp171:
# %bb.1:
	nop
	addq	$48, %rsp
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??1exception@std@@UEAA@XZ")@IMGREL
	.section	.text,"xr",discard,"??1exception@std@@UEAA@XZ"
	.seh_endproc
	.def	"?dtor$2@?0???1exception@std@@UEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???1exception@std@@UEAA@XZ@4HA":
.seh_proc "?dtor$2@?0???1exception@std@@UEAA@XZ@4HA"
.LBB103_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end36:
	.seh_handlerdata
	.section	.text,"xr",discard,"??1exception@std@@UEAA@XZ"
	.seh_endproc
	.section	.xdata,"dr",associative,"??1exception@std@@UEAA@XZ"
	.p2align	2, 0x0
"$cppxdata$??1exception@std@@UEAA@XZ":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??1exception@std@@UEAA@XZ")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??1exception@std@@UEAA@XZ")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??1exception@std@@UEAA@XZ":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???1exception@std@@UEAA@XZ@4HA"@IMGREL # Action
"$ip2state$??1exception@std@@UEAA@XZ":
	.long	.Lfunc_begin36@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp170@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp171@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??1exception@std@@UEAA@XZ"
                                        # -- End function
	.def	"??_Gbad_cast@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gbad_cast@std@@UEAAPEAXI@Z"
	.globl	"??_Gbad_cast@std@@UEAAPEAXI@Z" # -- Begin function ??_Gbad_cast@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gbad_cast@std@@UEAAPEAXI@Z":        # @"??_Gbad_cast@std@@UEAAPEAXI@Z"
.Lfunc_begin37:
.seh_proc "??_Gbad_cast@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp172:
	callq	__std_exception_destroy
.Ltmp173:
# %bb.1:
	testl	%edi, %edi
	je	.LBB104_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB104_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gbad_cast@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gbad_cast@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gbad_cast@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gbad_cast@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gbad_cast@std@@UEAAPEAXI@Z@4HA"
.LBB104_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end37:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gbad_cast@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gbad_cast@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gbad_cast@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gbad_cast@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gbad_cast@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gbad_cast@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gbad_cast@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gbad_cast@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin37@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp172@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp173@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gbad_cast@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin38:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$392, %rsp                      # imm = 0x188
	.seh_stackalloc 392
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 256(%rbp)
	movq	%r9, %rbx
	movl	%r8d, %r12d
	movq	%rcx, %rsi
	movq	368(%rbp), %r8
	movq	%r8, (%rbp)
	movl	%r12d, 204(%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB105_7
# %bb.1:
	cmpl	$128, %r12d
	jae	.LBB105_70
# %bb.2:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 144(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 128(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 136(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 138(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 139(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 140(%rbp)
	movb	%r12b, 176(%rbp)
	movzbl	136(%rbp), %eax
	testl	%eax, %eax
	je	.LBB105_6
# %bb.3:
	cmpl	$63, %eax
	je	.LBB105_68
# %bb.4:
	cmpl	$99, %eax
	jne	.LBB105_5
.LBB105_6:
	leaq	176(%rbp), %rax
	movq	%rax, 104(%rbp)
	movq	$1, 112(%rbp)
	movq	%r8, 32(%rsp)
	leaq	104(%rbp), %r8
	leaq	128(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB105_69
.LBB105_7:
	cmpb	$0, 10(%rbx)
	jne	.LBB105_9
# %bb.8:
	movb	$2, 10(%rbx)
.LBB105_9:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 120(%rbp)                 # 8-byte Spill
	ja	.LBB105_10
# %bb.71:
	leaq	.LJTI105_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB105_13:
	movb	$1, %r13b
.LBB105_14:
	movl	$16, %eax
	jmp	.LBB105_16
.LBB105_10:
	cmpl	$66, %ecx
	jne	.LBB105_16
# %bb.11:
	movb	$1, %r13b
.LBB105_12:
	movl	$2, %eax
	jmp	.LBB105_16
.LBB105_68:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	176(%rbp), %rax
	movq	%rax, 208(%rbp)
	movq	$1, 216(%rbp)
	movb	$39, 32(%rsp)
	leaq	208(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB105_69
.LBB105_5:
	movl	16(%rbx), %eax
	movl	%eax, 32(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 16(%rbp)
	movq	%r8, 32(%rsp)
	leaq	16(%rbp), %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB105_69
.LBB105_15:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB105_16:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	104(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movl	%r12d, %r9d
	callq	"??$_Integer_to_chars@I@std@@YA?AUto_chars_result@0@PEADQEADIH@Z"
	movq	%r15, 8(%rbp)
	movq	104(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 252(%rbp)
	cmpb	$2, 10(%rbx)
	je	.LBB105_18
# %bb.17:
	incl	%r14d
	movl	%r14d, 252(%rbp)
.LBB105_18:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB105_21
# %bb.19:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB105_20:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB105_20
.LBB105_21:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB105_30
# %bb.22:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB105_23
# %bb.72:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI105_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB105_26:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB105_29
.LBB105_23:
	cmpl	$66, %ecx
	jne	.LBB105_28
# %bb.24:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB105_29
.LBB105_28:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB105_29
.LBB105_27:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	testl	%r12d, %r12d
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rdx
	cmovneq	%rdx, %rcx
	jmp	.LBB105_29
.LBB105_25:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB105_29:
	movq	%rcx, 176(%rbp)
	movq	%rax, 184(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 252(%rbp)
.LBB105_30:
	movl	$0, 248(%rbp)
	movaps	%xmm0, 208(%rbp)
	movq	$0, 224(%rbp)
	movq	$15, 232(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB105_49
# %bb.31:
	movq	368(%rbp), %rax
	testq	%rax, %rax
	je	.LBB105_34
# %bb.32:
	movq	8(%rax), %rcx
	movq	%rcx, 168(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB105_36
.LBB105_34:
.Ltmp174:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp175:
# %bb.35:
	movq	%rax, 168(%rbp)
.LBB105_36:
.Ltmp176:
	leaq	160(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp177:
# %bb.37:
	movq	(%rax), %r8
.Ltmp178:
	leaq	16(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp179:
# %bb.38:
	movq	168(%rbp), %rcx
	movups	16(%rbp), %xmm0
	movups	32(%rbp), %xmm1
	movaps	%xmm0, 208(%rbp)
	movaps	%xmm1, 224(%rbp)
	movq	$0, 32(%rbp)
	movq	$15, 40(%rbp)
	movb	$0, 16(%rbp)
	testq	%rcx, %rcx
	je	.LBB105_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB105_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB105_41:
	movq	224(%rbp), %rax
	cmpq	$16, 232(%rbp)
	jb	.LBB105_42
# %bb.43:
	movq	208(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB105_45
	jmp	.LBB105_48
.LBB105_42:
	leaq	208(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB105_48
.LBB105_45:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB105_48
# %bb.46:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB105_47:                             # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB105_47
.LBB105_48:
	movl	%edx, 248(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 252(%rbp)
.LBB105_49:
	cmpb	$0, 13(%rbx)
	je	.LBB105_50
# %bb.55:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB105_56
.LBB105_50:
	xorl	%eax, %eax
.LBB105_56:
	movb	%al, 160(%rbp)
	movq	%rdi, 16(%rbp)
	movq	%rbx, 24(%rbp)
	leaq	204(%rbp), %rcx
	movq	%rcx, 32(%rbp)
	leaq	176(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	252(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	248(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	8(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	leaq	208(%rbp), %rcx
	movq	%rcx, 80(%rbp)
	movq	%rbp, %rcx
	movq	%rcx, 88(%rbp)
	testb	%al, %al
	je	.LBB105_58
# %bb.57:
.Ltmp180:
	leaq	16(%rbp), %rcx
	movq	%rsi, %rdx
	movq	120(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp181:
	jmp	.LBB105_59
.LBB105_58:
.Ltmp182:
	leaq	16(%rbp), %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	120(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp183:
.LBB105_59:
	movq	232(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB105_69
# %bb.60:
	movq	208(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB105_66
# %bb.61:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB105_62
# %bb.65:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB105_66:
	callq	"??3@YAXPEAX_K@Z"
.LBB105_69:
	movq	%rsi, %rax
	addq	$392, %rsp                      # imm = 0x188
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB105_70:
	leaq	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB105_62:
.Ltmp184:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp185:
# %bb.63:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB105_33:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB105_51:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	168(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB105_54
# %bb.52:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB105_54
# %bb.53:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB105_54:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB105_64:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB105_67:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	208(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end38:
	.p2align	2, 0x90
.LJTI105_0:
	.long	.LBB105_13-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_12-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_15-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_16-.LJTI105_0
	.long	.LBB105_14-.LJTI105_0
.LJTI105_1:
	.long	.LBB105_26-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_29-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_27-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_28-.LJTI105_1
	.long	.LBB105_25-.LJTI105_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	384                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin38@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp174@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp176@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp179@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp180@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp183@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp184@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp185@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@IU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin39:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB106_5
# %bb.1:
	cmpl	$1, %eax
	jne	.LBB106_8
# %bb.2:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB106_4
# %bb.3:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB106_4:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
.LBB106_8:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB106_9
	jmp	.LBB106_13
.LBB106_5:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB106_7
# %bb.6:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB106_7:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB106_13
.LBB106_9:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB106_10
	.p2align	4, 0x90
.LBB106_12:                             #   in Loop: Header=BB106_10 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB106_13
.LBB106_10:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB106_12
# %bb.11:                               #   in Loop: Header=BB106_10 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB106_12
.LBB106_13:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB106_20
# %bb.14:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB106_20
# %bb.15:
	jle	.LBB106_20
# %bb.16:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB106_17
	.p2align	4, 0x90
.LBB106_19:                             #   in Loop: Header=BB106_17 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB106_20
.LBB106_17:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB106_19
# %bb.18:                               #   in Loop: Header=BB106_17 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB106_19
.LBB106_20:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB106_38
# %bb.21:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB106_24
# %bb.22:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB106_26
.LBB106_38:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB106_39
	.p2align	4, 0x90
.LBB106_42:                             #   in Loop: Header=BB106_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB106_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB106_43
# %bb.40:                               #   in Loop: Header=BB106_39 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB106_42
# %bb.41:                               #   in Loop: Header=BB106_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB106_42
.LBB106_43:
	movq	%rdi, (%rsi)
	jmp	.LBB106_44
.LBB106_24:
.Ltmp186:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp187:
# %bb.25:
	movq	%rax, -8(%rbp)
.LBB106_26:
.Ltmp188:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp189:
# %bb.27:
	movq	(%rax), %rdx
.Ltmp190:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp191:
# %bb.28:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB106_30
# %bb.29:
	movq	(%rdx), %rdx
.LBB106_30:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp192:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp193:
# %bb.31:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB106_44
# %bb.32:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB106_44
# %bb.33:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB106_44:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB106_23:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB106_34:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB106_37
# %bb.35:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB106_37
# %bb.36:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB106_37:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end39:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin39@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp186@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp188@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp193@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@2@YA?AV12@V12@IU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@01@YA?AV21@0IU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB107_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB107_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB107_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB107_5
# %bb.4:
	movl	%eax, %r15d
.LBB107_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB107_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@I@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@IU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB107_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB107_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB107_19
	.p2align	4, 0x90
.LBB107_23:                             #   in Loop: Header=BB107_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB107_24
.LBB107_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB107_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB107_20
	.p2align	4, 0x90
.LBB107_22:                             #   in Loop: Header=BB107_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB107_23
.LBB107_20:                             #   Parent Loop BB107_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB107_22
# %bb.21:                               #   in Loop: Header=BB107_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB107_22
.LBB107_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB107_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB107_7
.LBB107_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB107_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB107_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB107_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB107_16
	.p2align	4, 0x90
.LBB107_14:                             #   in Loop: Header=BB107_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB107_15
.LBB107_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB107_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB107_11
	.p2align	4, 0x90
.LBB107_13:                             #   in Loop: Header=BB107_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB107_14
.LBB107_11:                             #   Parent Loop BB107_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB107_13
# %bb.12:                               #   in Loop: Header=BB107_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB107_13
.LBB107_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB107_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin40:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$376, %rsp                      # imm = 0x178
	.seh_stackalloc 376
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 240(%rbp)
	movq	%r9, %rbx
	movq	%r8, %r12
	movq	%rcx, %rsi
	movq	352(%rbp), %r8
	movq	%r8, (%rbp)
	movq	%r12, 8(%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB108_7
# %bb.1:
	movsbq	%r12b, %rax
	cmpq	%r12, %rax
	jne	.LBB108_72
# %bb.2:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 144(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 128(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 136(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 138(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 139(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 140(%rbp)
	movb	%r12b, 176(%rbp)
	movzbl	136(%rbp), %eax
	testl	%eax, %eax
	je	.LBB108_6
# %bb.3:
	cmpl	$63, %eax
	je	.LBB108_70
# %bb.4:
	cmpl	$99, %eax
	jne	.LBB108_5
.LBB108_6:
	leaq	176(%rbp), %rax
	movq	%rax, 96(%rbp)
	movq	$1, 104(%rbp)
	movq	%r8, 32(%rsp)
	leaq	96(%rbp), %r8
	leaq	128(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB108_71
.LBB108_7:
	cmpb	$0, 10(%rbx)
	jne	.LBB108_9
# %bb.8:
	movb	$2, 10(%rbx)
.LBB108_9:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 120(%rbp)                 # 8-byte Spill
	ja	.LBB108_10
# %bb.73:
	leaq	.LJTI108_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB108_13:
	movb	$1, %r13b
.LBB108_14:
	movl	$16, %eax
	jmp	.LBB108_16
.LBB108_10:
	cmpl	$66, %ecx
	jne	.LBB108_16
# %bb.11:
	movb	$1, %r13b
.LBB108_12:
	movl	$2, %eax
	jmp	.LBB108_16
.LBB108_70:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	176(%rbp), %rax
	movq	%rax, 192(%rbp)
	movq	$1, 200(%rbp)
	movb	$39, 32(%rsp)
	leaq	192(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB108_71
.LBB108_5:
	movl	16(%rbx), %eax
	movl	%eax, 32(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 16(%rbp)
	movq	%r8, 32(%rsp)
	leaq	16(%rbp), %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB108_71
.LBB108_15:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB108_16:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	96(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movq	%r12, %r9
	callq	"??$_Integer_to_chars@_J@std@@YA?AUto_chars_result@0@PEADQEAD_JH@Z"
	movq	%r15, 112(%rbp)
	movq	96(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 236(%rbp)
	testq	%r12, %r12
	js	.LBB108_19
# %bb.17:
	cmpb	$2, 10(%rbx)
	je	.LBB108_20
# %bb.18:
	incl	%r14d
	movl	%r14d, 236(%rbp)
	jmp	.LBB108_20
.LBB108_19:
	leaq	-79(%rbp), %r15
	movq	%r15, 112(%rbp)
.LBB108_20:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB108_23
# %bb.21:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB108_22:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB108_22
.LBB108_23:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB108_32
# %bb.24:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB108_25
# %bb.74:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI108_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB108_28:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB108_31
.LBB108_25:
	cmpl	$66, %ecx
	jne	.LBB108_30
# %bb.26:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB108_31
.LBB108_30:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB108_31
.LBB108_29:
	xorl	%eax, %eax
	testq	%r12, %r12
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rcx
	cmoveq	%r12, %rcx
	jmp	.LBB108_31
.LBB108_27:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB108_31:
	movq	%rcx, 176(%rbp)
	movq	%rax, 184(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 236(%rbp)
.LBB108_32:
	movl	$0, 232(%rbp)
	movaps	%xmm0, 192(%rbp)
	movq	$0, 208(%rbp)
	movq	$15, 216(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB108_51
# %bb.33:
	movq	352(%rbp), %rax
	testq	%rax, %rax
	je	.LBB108_36
# %bb.34:
	movq	8(%rax), %rcx
	movq	%rcx, 168(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB108_38
.LBB108_36:
.Ltmp194:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp195:
# %bb.37:
	movq	%rax, 168(%rbp)
.LBB108_38:
.Ltmp196:
	leaq	160(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp197:
# %bb.39:
	movq	(%rax), %r8
.Ltmp198:
	leaq	16(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp199:
# %bb.40:
	movq	168(%rbp), %rcx
	movups	16(%rbp), %xmm0
	movups	32(%rbp), %xmm1
	movaps	%xmm0, 192(%rbp)
	movaps	%xmm1, 208(%rbp)
	movq	$0, 32(%rbp)
	movq	$15, 40(%rbp)
	movb	$0, 16(%rbp)
	testq	%rcx, %rcx
	je	.LBB108_43
# %bb.41:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB108_43
# %bb.42:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB108_43:
	movq	208(%rbp), %rax
	cmpq	$16, 216(%rbp)
	jb	.LBB108_44
# %bb.45:
	movq	192(%rbp), %rcx
	movq	96(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB108_47
	jmp	.LBB108_50
.LBB108_44:
	leaq	192(%rbp), %rcx
	movq	96(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB108_50
.LBB108_47:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB108_50
# %bb.48:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB108_49:                             # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB108_49
.LBB108_50:
	movl	%edx, 232(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 236(%rbp)
.LBB108_51:
	cmpb	$0, 13(%rbx)
	je	.LBB108_52
# %bb.57:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB108_58
.LBB108_52:
	xorl	%eax, %eax
.LBB108_58:
	movb	%al, 160(%rbp)
	movq	%rdi, 16(%rbp)
	movq	%rbx, 24(%rbp)
	leaq	8(%rbp), %rcx
	movq	%rcx, 32(%rbp)
	leaq	176(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	236(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	232(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	112(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	leaq	192(%rbp), %rcx
	movq	%rcx, 80(%rbp)
	movq	%rbp, %rcx
	movq	%rcx, 88(%rbp)
	testb	%al, %al
	je	.LBB108_60
# %bb.59:
.Ltmp200:
	leaq	16(%rbp), %rcx
	movq	%rsi, %rdx
	movq	120(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp201:
	jmp	.LBB108_61
.LBB108_60:
.Ltmp202:
	leaq	16(%rbp), %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	120(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp203:
.LBB108_61:
	movq	216(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB108_71
# %bb.62:
	movq	192(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB108_68
# %bb.63:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB108_64
# %bb.67:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB108_68:
	callq	"??3@YAXPEAX_K@Z"
.LBB108_71:
	movq	%rsi, %rax
	addq	$376, %rsp                      # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB108_72:
	leaq	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB108_64:
.Ltmp204:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp205:
# %bb.65:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB108_35:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB108_53:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	168(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB108_56
# %bb.54:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB108_56
# %bb.55:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB108_56:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB108_66:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB108_69:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	192(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end40:
	.p2align	2, 0x90
.LJTI108_0:
	.long	.LBB108_13-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_12-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_15-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_16-.LJTI108_0
	.long	.LBB108_14-.LJTI108_0
.LJTI108_1:
	.long	.LBB108_28-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_31-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_29-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_30-.LJTI108_1
	.long	.LBB108_27-.LJTI108_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	368                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$35@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$66@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$69@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$53@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin40@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp194@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp196@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp199@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp200@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp203@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp204@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp205@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_JU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin41:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	16(%rcx), %rax
	cmpq	$0, (%rax)
	js	.LBB109_1
# %bb.4:
	movq	8(%rbx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB109_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB109_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB109_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB109_13
	jmp	.LBB109_17
.LBB109_1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB109_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB109_12:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB109_17
.LBB109_13:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB109_14
	.p2align	4, 0x90
.LBB109_16:                             #   in Loop: Header=BB109_14 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB109_17
.LBB109_14:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_16
# %bb.15:                               #   in Loop: Header=BB109_14 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB109_16
.LBB109_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB109_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB109_13
.LBB109_17:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB109_24
# %bb.18:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB109_24
# %bb.19:
	jle	.LBB109_24
# %bb.20:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB109_21
	.p2align	4, 0x90
.LBB109_23:                             #   in Loop: Header=BB109_21 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB109_24
.LBB109_21:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_23
# %bb.22:                               #   in Loop: Header=BB109_21 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB109_23
.LBB109_24:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB109_42
# %bb.25:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB109_28
# %bb.26:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB109_30
.LBB109_42:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB109_43
	.p2align	4, 0x90
.LBB109_46:                             #   in Loop: Header=BB109_43 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB109_43:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB109_47
# %bb.44:                               #   in Loop: Header=BB109_43 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB109_46
# %bb.45:                               #   in Loop: Header=BB109_43 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB109_46
.LBB109_47:
	movq	%rdi, (%rsi)
	jmp	.LBB109_48
.LBB109_28:
.Ltmp206:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp207:
# %bb.29:
	movq	%rax, -8(%rbp)
.LBB109_30:
.Ltmp208:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp209:
# %bb.31:
	movq	(%rax), %rdx
.Ltmp210:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp211:
# %bb.32:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB109_34
# %bb.33:
	movq	(%rdx), %rdx
.LBB109_34:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp212:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp213:
# %bb.35:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB109_48
# %bb.36:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB109_48
# %bb.37:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB109_48:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB109_27:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB109_38:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB109_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB109_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB109_41:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end41:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$27@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$38@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin41@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp206@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp208@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp213@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@2@YA?AV12@V12@_JU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@01@YA?AV21@0_JU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB110_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB110_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB110_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB110_5
# %bb.4:
	movl	%eax, %r15d
.LBB110_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB110_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_J@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_JU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB110_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB110_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB110_19
	.p2align	4, 0x90
.LBB110_23:                             #   in Loop: Header=BB110_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB110_24
.LBB110_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB110_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB110_20
	.p2align	4, 0x90
.LBB110_22:                             #   in Loop: Header=BB110_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB110_23
.LBB110_20:                             #   Parent Loop BB110_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB110_22
# %bb.21:                               #   in Loop: Header=BB110_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB110_22
.LBB110_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB110_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB110_7
.LBB110_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB110_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB110_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB110_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB110_16
	.p2align	4, 0x90
.LBB110_14:                             #   in Loop: Header=BB110_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB110_15
.LBB110_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB110_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB110_11
	.p2align	4, 0x90
.LBB110_13:                             #   in Loop: Header=BB110_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB110_14
.LBB110_11:                             #   Parent Loop BB110_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB110_13
# %bb.12:                               #   in Loop: Header=BB110_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB110_13
.LBB110_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB110_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin42:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$376, %rsp                      # imm = 0x178
	.seh_stackalloc 376
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 240(%rbp)
	movq	%r9, %rbx
	movq	%r8, %r12
	movq	%rcx, %rsi
	movq	352(%rbp), %r8
	movq	%r8, -8(%rbp)
	movq	%r12, (%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB111_7
# %bb.1:
	cmpq	$128, %r12
	jae	.LBB111_70
# %bb.2:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 144(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 128(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 136(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 138(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 139(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 140(%rbp)
	movb	%r12b, 176(%rbp)
	movzbl	136(%rbp), %eax
	testl	%eax, %eax
	je	.LBB111_6
# %bb.3:
	cmpl	$63, %eax
	je	.LBB111_68
# %bb.4:
	cmpl	$99, %eax
	jne	.LBB111_5
.LBB111_6:
	leaq	176(%rbp), %rax
	movq	%rax, 104(%rbp)
	movq	$1, 112(%rbp)
	movq	%r8, 32(%rsp)
	leaq	104(%rbp), %r8
	leaq	128(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB111_69
.LBB111_7:
	cmpb	$0, 10(%rbx)
	jne	.LBB111_9
# %bb.8:
	movb	$2, 10(%rbx)
.LBB111_9:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 120(%rbp)                 # 8-byte Spill
	ja	.LBB111_10
# %bb.71:
	leaq	.LJTI111_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB111_13:
	movb	$1, %r13b
.LBB111_14:
	movl	$16, %eax
	jmp	.LBB111_16
.LBB111_10:
	cmpl	$66, %ecx
	jne	.LBB111_16
# %bb.11:
	movb	$1, %r13b
.LBB111_12:
	movl	$2, %eax
	jmp	.LBB111_16
.LBB111_68:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	176(%rbp), %rax
	movq	%rax, 192(%rbp)
	movq	$1, 200(%rbp)
	movb	$39, 32(%rsp)
	leaq	192(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB111_69
.LBB111_5:
	movl	16(%rbx), %eax
	movl	%eax, 32(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 16(%rbp)
	movq	%r8, 32(%rsp)
	leaq	16(%rbp), %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB111_69
.LBB111_15:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB111_16:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	104(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movq	%r12, %r9
	callq	"??$_Integer_to_chars@_K@std@@YA?AUto_chars_result@0@PEADQEAD_KH@Z"
	movq	%r15, 8(%rbp)
	movq	104(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 236(%rbp)
	cmpb	$2, 10(%rbx)
	je	.LBB111_18
# %bb.17:
	incl	%r14d
	movl	%r14d, 236(%rbp)
.LBB111_18:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB111_21
# %bb.19:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB111_20:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB111_20
.LBB111_21:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB111_30
# %bb.22:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB111_23
# %bb.72:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI111_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB111_26:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB111_29
.LBB111_23:
	cmpl	$66, %ecx
	jne	.LBB111_28
# %bb.24:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB111_29
.LBB111_28:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB111_29
.LBB111_27:
	xorl	%eax, %eax
	testq	%r12, %r12
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rcx
	cmoveq	%r12, %rcx
	jmp	.LBB111_29
.LBB111_25:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB111_29:
	movq	%rcx, 176(%rbp)
	movq	%rax, 184(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 236(%rbp)
.LBB111_30:
	movl	$0, 232(%rbp)
	movaps	%xmm0, 192(%rbp)
	movq	$0, 208(%rbp)
	movq	$15, 216(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB111_49
# %bb.31:
	movq	352(%rbp), %rax
	testq	%rax, %rax
	je	.LBB111_34
# %bb.32:
	movq	8(%rax), %rcx
	movq	%rcx, 168(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB111_36
.LBB111_34:
.Ltmp214:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp215:
# %bb.35:
	movq	%rax, 168(%rbp)
.LBB111_36:
.Ltmp216:
	leaq	160(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp217:
# %bb.37:
	movq	(%rax), %r8
.Ltmp218:
	leaq	16(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp219:
# %bb.38:
	movq	168(%rbp), %rcx
	movups	16(%rbp), %xmm0
	movups	32(%rbp), %xmm1
	movaps	%xmm0, 192(%rbp)
	movaps	%xmm1, 208(%rbp)
	movq	$0, 32(%rbp)
	movq	$15, 40(%rbp)
	movb	$0, 16(%rbp)
	testq	%rcx, %rcx
	je	.LBB111_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB111_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB111_41:
	movq	208(%rbp), %rax
	cmpq	$16, 216(%rbp)
	jb	.LBB111_42
# %bb.43:
	movq	192(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB111_45
	jmp	.LBB111_48
.LBB111_42:
	leaq	192(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB111_48
.LBB111_45:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB111_48
# %bb.46:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB111_47:                             # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB111_47
.LBB111_48:
	movl	%edx, 232(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 236(%rbp)
.LBB111_49:
	cmpb	$0, 13(%rbx)
	je	.LBB111_50
# %bb.55:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB111_56
.LBB111_50:
	xorl	%eax, %eax
.LBB111_56:
	movb	%al, 160(%rbp)
	movq	%rdi, 16(%rbp)
	movq	%rbx, 24(%rbp)
	movq	%rbp, %rcx
	movq	%rcx, 32(%rbp)
	leaq	176(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	236(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	232(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	8(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	leaq	192(%rbp), %rcx
	movq	%rcx, 80(%rbp)
	leaq	-8(%rbp), %rcx
	movq	%rcx, 88(%rbp)
	testb	%al, %al
	je	.LBB111_58
# %bb.57:
.Ltmp220:
	leaq	16(%rbp), %rcx
	movq	%rsi, %rdx
	movq	120(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp221:
	jmp	.LBB111_59
.LBB111_58:
.Ltmp222:
	leaq	16(%rbp), %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	120(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp223:
.LBB111_59:
	movq	216(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB111_69
# %bb.60:
	movq	192(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB111_66
# %bb.61:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB111_62
# %bb.65:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB111_66:
	callq	"??3@YAXPEAX_K@Z"
.LBB111_69:
	movq	%rsi, %rax
	addq	$376, %rsp                      # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB111_70:
	leaq	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB111_62:
.Ltmp224:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp225:
# %bb.63:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB111_33:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB111_51:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	168(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB111_54
# %bb.52:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB111_54
# %bb.53:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB111_54:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB111_64:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB111_67:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	192(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end42:
	.p2align	2, 0x90
.LJTI111_0:
	.long	.LBB111_13-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_12-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_15-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_16-.LJTI111_0
	.long	.LBB111_14-.LJTI111_0
.LJTI111_1:
	.long	.LBB111_26-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_29-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_27-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_28-.LJTI111_1
	.long	.LBB111_25-.LJTI111_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	368                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin42@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp214@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp216@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp219@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp220@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp223@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp224@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp225@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_KU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin43:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB112_5
# %bb.1:
	cmpl	$1, %eax
	jne	.LBB112_8
# %bb.2:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB112_4
# %bb.3:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB112_4:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
.LBB112_8:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB112_9
	jmp	.LBB112_13
.LBB112_5:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB112_7
# %bb.6:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB112_7:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB112_13
.LBB112_9:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB112_10
	.p2align	4, 0x90
.LBB112_12:                             #   in Loop: Header=BB112_10 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB112_13
.LBB112_10:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB112_12
# %bb.11:                               #   in Loop: Header=BB112_10 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB112_12
.LBB112_13:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB112_20
# %bb.14:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB112_20
# %bb.15:
	jle	.LBB112_20
# %bb.16:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB112_17
	.p2align	4, 0x90
.LBB112_19:                             #   in Loop: Header=BB112_17 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB112_20
.LBB112_17:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB112_19
# %bb.18:                               #   in Loop: Header=BB112_17 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB112_19
.LBB112_20:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB112_38
# %bb.21:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB112_24
# %bb.22:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB112_26
.LBB112_38:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB112_39
	.p2align	4, 0x90
.LBB112_42:                             #   in Loop: Header=BB112_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB112_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB112_43
# %bb.40:                               #   in Loop: Header=BB112_39 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB112_42
# %bb.41:                               #   in Loop: Header=BB112_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB112_42
.LBB112_43:
	movq	%rdi, (%rsi)
	jmp	.LBB112_44
.LBB112_24:
.Ltmp226:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp227:
# %bb.25:
	movq	%rax, -8(%rbp)
.LBB112_26:
.Ltmp228:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp229:
# %bb.27:
	movq	(%rax), %rdx
.Ltmp230:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp231:
# %bb.28:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB112_30
# %bb.29:
	movq	(%rdx), %rdx
.LBB112_30:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp232:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp233:
# %bb.31:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB112_44
# %bb.32:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB112_44
# %bb.33:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB112_44:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB112_23:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB112_34:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB112_37
# %bb.35:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB112_37
# %bb.36:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB112_37:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end43:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin43@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp226@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp228@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp233@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@2@YA?AV12@V12@_KU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@01@YA?AV21@0_KU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB113_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB113_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB113_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB113_5
# %bb.4:
	movl	%eax, %r15d
.LBB113_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB113_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@_K@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@_KU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB113_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB113_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB113_19
	.p2align	4, 0x90
.LBB113_23:                             #   in Loop: Header=BB113_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB113_24
.LBB113_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB113_20
	.p2align	4, 0x90
.LBB113_22:                             #   in Loop: Header=BB113_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB113_23
.LBB113_20:                             #   Parent Loop BB113_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB113_22
# %bb.21:                               #   in Loop: Header=BB113_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB113_22
.LBB113_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB113_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB113_7
.LBB113_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB113_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB113_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB113_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB113_16
	.p2align	4, 0x90
.LBB113_14:                             #   in Loop: Header=BB113_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB113_15
.LBB113_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB113_11
	.p2align	4, 0x90
.LBB113_13:                             #   in Loop: Header=BB113_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB113_14
.LBB113_11:                             #   Parent Loop BB113_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB113_13
# %bb.12:                               #   in Loop: Header=BB113_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB113_13
.LBB113_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB113_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin44:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$136, %rsp
	.seh_stackalloc 136
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r9, %rbx
	movl	%r8d, %r13d
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	112(%rbp), %r12
	movzbl	8(%r9), %eax
	testl	%eax, %eax
	je	.LBB114_2
# %bb.1:
	cmpl	$115, %eax
	jne	.LBB114_5
.LBB114_2:
	cmpb	$0, 12(%rbx)
	je	.LBB114_6
# %bb.3:
	movb	$0, 12(%rbx)
	testq	%r12, %r12
	je	.LBB114_7
# %bb.4:
	movq	8(%r12), %rcx
	movq	%rcx, -32(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB114_9
.LBB114_5:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	movq	%r12, 32(%rsp)
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movl	%r13d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB114_29
.LBB114_6:
	leaq	"??_C@_04LOAJBDKD@true?$AA@"(%rip), %rax
	leaq	"??_C@_05LAPONLG@false?$AA@"(%rip), %rcx
	testb	%r13b, %r13b
	cmovneq	%rax, %rcx
	movq	%rcx, -40(%rbp)
	movzbl	%r13b, %eax
	xorq	$5, %rax
	movq	%rax, -32(%rbp)
	movq	%r12, 32(%rsp)
	leaq	-40(%rbp), %r8
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r9
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB114_29
.LBB114_7:
.Ltmp234:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp235:
# %bb.8:
	movq	%rax, -32(%rbp)
.LBB114_9:
.Ltmp236:
	leaq	-40(%rbp), %r14
	movq	%r14, %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp237:
# %bb.10:
	movq	%rax, %r15
	movb	%r13b, -1(%rbp)                 # 1-byte Spill
	movq	-32(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB114_13
# %bb.11:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB114_13
# %bb.12:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB114_13:
	leaq	-24(%rbp), %r13
	cmpb	$0, -1(%rbp)                    # 1-byte Folded Reload
	je	.LBB114_15
# %bb.14:
	movq	(%r15), %rax
	movq	%r15, %rcx
	movq	%r14, %rdx
	callq	*56(%rax)
	jmp	.LBB114_16
.LBB114_15:
	movq	(%r15), %rax
	movq	48(%rax), %rax
	movb	$1, -2(%rbp)
.Ltmp238:
	movq	%r15, %rcx
	movq	%r14, %rdx
	callq	*%rax
.Ltmp239:
.LBB114_16:
	cmpq	$16, -16(%rbp)
	jb	.LBB114_18
# %bb.17:
	movq	-40(%rbp), %r14
.LBB114_18:
	movq	(%r13), %rax
	movq	%r14, -56(%rbp)
	movq	%rax, -48(%rbp)
	movzbl	-1(%rbp), %eax                  # 1-byte Folded Reload
	xorb	$1, %al
	movb	%al, -3(%rbp)                   # 1-byte Spill
.Ltmp240:
	movq	%r12, 32(%rsp)
	leaq	-56(%rbp), %r8
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	movq	%rbx, %r9
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Ltmp241:
# %bb.19:
	cmpb	$0, -1(%rbp)                    # 1-byte Folded Reload
	je	.LBB114_24
# %bb.20:
	movq	-16(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB114_29
# %bb.21:
	movq	-40(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB114_28
# %bb.22:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jb	.LBB114_27
# %bb.30:
.Ltmp244:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp245:
# %bb.31:
.LBB114_24:
	movq	-16(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB114_29
# %bb.25:
	movq	-40(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB114_28
# %bb.26:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB114_32
.LBB114_27:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB114_28:
	callq	"??3@YAXPEAX_K@Z"
.LBB114_29:
	movq	%rsi, %rax
	addq	$136, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB114_32:
.Ltmp242:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp243:
# %bb.33:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$34@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$34@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$34@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_34:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$35@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$35@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$35@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_35:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$36@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$36@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$36@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_36:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$37@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$37@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$37@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_37:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movzbl	-3(%rbp), %ebx                  # 1-byte Folded Reload
	cmpb	$0, -1(%rbp)                    # 1-byte Folded Reload
	jne	.LBB114_39
# %bb.38:
	leaq	-40(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
.LBB114_39:
	movb	%bl, -2(%rbp)
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$40@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$40@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$40@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_40:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	-32(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB114_43
# %bb.41:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB114_43
# %bb.42:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB114_43:
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$44@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$44@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$44@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB114_44:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	cmpb	$1, -2(%rbp)
	cmpb	$0, -1(%rbp)                    # 1-byte Folded Reload
	je	.LBB114_46
# %bb.45:
	leaq	-40(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
.LBB114_46:
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end44:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	6                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	9                               # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	128                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$36@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$34@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$35@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$40@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$44@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	4                               # ToState
	.long	"?dtor$37@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin44@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp234@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp236@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp237@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp238@IMGREL+1               # IP
	.long	4                               # ToState
	.long	.Ltmp240@IMGREL+1               # IP
	.long	5                               # ToState
	.long	.Ltmp244@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp242@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp243@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@_NU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin45:
.seh_proc "??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$376, %rsp                      # imm = 0x178
	.seh_stackalloc 376
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 240(%rbp)
	movq	%r9, %rbx
	movl	%r8d, %r12d
	movq	%rcx, %rsi
	movq	352(%rbp), %r8
	movq	%r8, (%rbp)
	movb	%r12b, 239(%rbp)
	movsbl	8(%r9), %ecx
	cmpl	$99, %ecx
	jne	.LBB115_7
# %bb.1:
	testb	%r12b, %r12b
	js	.LBB115_70
# %bb.2:
	movb	$0, 11(%rbx)
	movl	16(%rbx), %eax
	movl	%eax, 144(%rbp)
	movq	(%rbx), %rax
	movq	%rax, 128(%rbp)
	movzwl	8(%rbx), %eax
	movw	%ax, 136(%rbp)
	movzbl	10(%rbx), %eax
	movb	%al, 138(%rbp)
	movzbl	11(%rbx), %eax
	movb	%al, 139(%rbp)
	movl	12(%rbx), %eax
	movl	%eax, 140(%rbp)
	movb	%r12b, 176(%rbp)
	movzbl	136(%rbp), %eax
	testl	%eax, %eax
	je	.LBB115_6
# %bb.3:
	cmpl	$63, %eax
	je	.LBB115_68
# %bb.4:
	cmpl	$99, %eax
	jne	.LBB115_5
.LBB115_6:
	leaq	176(%rbp), %rax
	movq	%rax, 104(%rbp)
	movq	$1, 112(%rbp)
	movq	%r8, 32(%rsp)
	leaq	104(%rbp), %r8
	leaq	128(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@AEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB115_69
.LBB115_7:
	cmpb	$0, 10(%rbx)
	jne	.LBB115_9
# %bb.8:
	movb	$2, 10(%rbx)
.LBB115_9:
	movl	$10, %eax
	xorl	%r13d, %r13d
	leal	-88(%rcx), %r8d
	cmpl	$32, %r8d
	movq	%rdx, 120(%rbp)                 # 8-byte Spill
	ja	.LBB115_10
# %bb.71:
	leaq	.LJTI115_0(%rip), %rcx
	movslq	(%rcx,%r8,4), %rdx
	addq	%rcx, %rdx
	jmpq	*%rdx
.LBB115_13:
	movb	$1, %r13b
.LBB115_14:
	movl	$16, %eax
	jmp	.LBB115_16
.LBB115_10:
	cmpl	$66, %ecx
	jne	.LBB115_16
# %bb.11:
	movb	$1, %r13b
.LBB115_12:
	movl	$2, %eax
	jmp	.LBB115_16
.LBB115_68:
	movl	16(%rbx), %eax
	movl	%eax, -64(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, -80(%rbp)
	leaq	176(%rbp), %rax
	movq	%rax, 192(%rbp)
	movq	$1, 200(%rbp)
	movb	$39, 32(%rsp)
	leaq	192(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_escaped@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@V?$basic_string_view@DU?$char_traits@D@std@@@1@U?$_Basic_format_specs@D@1@D@Z"
	jmp	.LBB115_69
.LBB115_5:
	movl	16(%rbx), %eax
	movl	%eax, 32(%rbp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 16(%rbp)
	movq	%r8, 32(%rsp)
	leaq	16(%rbp), %r9
	movq	%rsi, %rcx
	movl	%r12d, %r8d
	callq	"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@DU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	jmp	.LBB115_69
.LBB115_15:
	movl	$8, %eax
	xorl	%r13d, %r13d
.LBB115_16:
	leaq	-15(%rbp), %r8
	movl	%eax, 32(%rsp)
	leaq	104(%rbp), %rcx
	leaq	-80(%rbp), %r15
	movq	%r15, %rdx
	movl	%r12d, %r9d
	callq	"??$_Integer_to_chars@E@std@@YA?AUto_chars_result@0@PEADQEADEH@Z"
	movq	%r15, 8(%rbp)
	movq	104(%rbp), %rdi
	movl	%edi, %r14d
	subl	%r15d, %r14d
	movl	%r14d, 232(%rbp)
	cmpb	$2, 10(%rbx)
	je	.LBB115_18
# %bb.17:
	incl	%r14d
	movl	%r14d, 232(%rbp)
.LBB115_18:
	cmpq	%rdi, %r15
	setne	%al
	andb	%al, %r13b
	cmpb	$1, %r13b
	jne	.LBB115_21
# %bb.19:
	movq	%r15, %r13
	.p2align	4, 0x90
.LBB115_20:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%r13), %ecx
	callq	toupper
	movb	%al, (%r13)
	incq	%r13
	cmpq	%rdi, %r13
	jne	.LBB115_20
.LBB115_21:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rbp)
	cmpb	$0, 11(%rbx)
	je	.LBB115_30
# %bb.22:
	movsbl	8(%rbx), %ecx
	movl	$2, %eax
	leal	-88(%rcx), %edx
	cmpl	$32, %edx
	ja	.LBB115_23
# %bb.72:
	leaq	"??_C@_02HDBOMKFI@0b?$AA@"(%rip), %rcx
	leaq	.LJTI115_1(%rip), %r8
	movslq	(%r8,%rdx,4), %rdx
	addq	%r8, %rdx
	jmpq	*%rdx
.LBB115_26:
	leaq	"??_C@_02FGLHBECB@0X?$AA@"(%rip), %rcx
	jmp	.LBB115_29
.LBB115_23:
	cmpl	$66, %ecx
	jne	.LBB115_28
# %bb.24:
	leaq	"??_C@_02OGJKOOPK@0B?$AA@"(%rip), %rcx
	jmp	.LBB115_29
.LBB115_28:
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	jmp	.LBB115_29
.LBB115_27:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	testb	%r12b, %r12b
	setne	%al
	leaq	"??_C@_01GBGANLPD@0?$AA@"(%rip), %rdx
	cmovneq	%rdx, %rcx
	jmp	.LBB115_29
.LBB115_25:
	leaq	"??_C@_02MDDDDAID@0x?$AA@"(%rip), %rcx
.LBB115_29:
	movq	%rcx, 176(%rbp)
	movq	%rax, 184(%rbp)
	addl	%eax, %r14d
	movl	%r14d, 232(%rbp)
.LBB115_30:
	movl	$0, 228(%rbp)
	movaps	%xmm0, 192(%rbp)
	movq	$0, 208(%rbp)
	movq	$15, 216(%rbp)
	cmpb	$0, 12(%rbx)
	je	.LBB115_49
# %bb.31:
	movq	352(%rbp), %rax
	testq	%rax, %rax
	je	.LBB115_34
# %bb.32:
	movq	8(%rax), %rcx
	movq	%rcx, 168(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB115_36
.LBB115_34:
.Ltmp246:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp247:
# %bb.35:
	movq	%rax, 168(%rbp)
.LBB115_36:
.Ltmp248:
	leaq	160(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp249:
# %bb.37:
	movq	(%rax), %r8
.Ltmp250:
	leaq	16(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp251:
# %bb.38:
	movq	168(%rbp), %rcx
	movups	16(%rbp), %xmm0
	movups	32(%rbp), %xmm1
	movaps	%xmm0, 192(%rbp)
	movaps	%xmm1, 208(%rbp)
	movq	$0, 32(%rbp)
	movq	$15, 40(%rbp)
	movb	$0, 16(%rbp)
	testq	%rcx, %rcx
	je	.LBB115_41
# %bb.39:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB115_41
# %bb.40:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB115_41:
	movq	208(%rbp), %rax
	cmpq	$16, 216(%rbp)
	jb	.LBB115_42
# %bb.43:
	movq	192(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB115_45
	jmp	.LBB115_48
.LBB115_42:
	leaq	192(%rbp), %rcx
	movq	104(%rbp), %rdi
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB115_48
.LBB115_45:
	movq	%rdi, %r8
	subq	%r15, %r8
	movsbq	(%rcx), %r9
	cmpq	%r9, %r8
	jbe	.LBB115_48
# %bb.46:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r10
	.p2align	4, 0x90
.LBB115_47:                             # =>This Inner Loop Header: Depth=1
	subq	%r9, %r8
	incq	%r10
	incl	%edx
	cmpq	%rax, %r10
	cmovneq	%r10, %rcx
	movsbq	(%rcx), %r9
	movq	%rcx, %r10
	cmpq	%r9, %r8
	ja	.LBB115_47
.LBB115_48:
	movl	%edx, 228(%rbp)
	addl	%edx, %r14d
	movl	%r14d, 232(%rbp)
.LBB115_49:
	cmpb	$0, 13(%rbx)
	je	.LBB115_50
# %bb.55:
	cmpb	$0, 9(%rbx)
	sete	%al
	jmp	.LBB115_56
.LBB115_50:
	xorl	%eax, %eax
.LBB115_56:
	movb	%al, 160(%rbp)
	movq	%rdi, 16(%rbp)
	movq	%rbx, 24(%rbp)
	leaq	239(%rbp), %rcx
	movq	%rcx, 32(%rbp)
	leaq	176(%rbp), %rcx
	movq	%rcx, 40(%rbp)
	leaq	160(%rbp), %rcx
	movq	%rcx, 48(%rbp)
	leaq	232(%rbp), %rcx
	movq	%rcx, 56(%rbp)
	leaq	228(%rbp), %rcx
	movq	%rcx, 64(%rbp)
	leaq	8(%rbp), %rcx
	movq	%rcx, 72(%rbp)
	leaq	192(%rbp), %rcx
	movq	%rcx, 80(%rbp)
	movq	%rbp, %rcx
	movq	%rcx, 88(%rbp)
	testb	%al, %al
	je	.LBB115_58
# %bb.57:
.Ltmp252:
	leaq	16(%rbp), %rcx
	movq	%rsi, %rdx
	movq	120(%rbp), %r8                  # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp253:
	jmp	.LBB115_59
.LBB115_58:
.Ltmp254:
	leaq	16(%rbp), %rax
	movq	%rax, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	120(%rbp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z"
.Ltmp255:
.LBB115_59:
	movq	216(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB115_69
# %bb.60:
	movq	192(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB115_66
# %bb.61:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB115_62
# %bb.65:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB115_66:
	callq	"??3@YAXPEAX_K@Z"
.LBB115_69:
	movq	%rsi, %rax
	addq	$376, %rsp                      # imm = 0x178
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB115_70:
	leaq	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"(%rip), %rcx
	callq	"?_Throw_format_error@std@@YAXQEBD@Z"
.LBB115_62:
.Ltmp256:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp257:
# %bb.63:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB115_33:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB115_51:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	movq	168(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB115_54
# %bb.52:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB115_54
# %bb.53:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB115_54:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB115_64:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB115_67:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	128(%rdx), %rbp
	.seh_endprologue
	leaq	192(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end45:
	.p2align	2, 0x90
.LJTI115_0:
	.long	.LBB115_13-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_12-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_15-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_16-.LJTI115_0
	.long	.LBB115_14-.LJTI115_0
.LJTI115_1:
	.long	.LBB115_26-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_29-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_27-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_28-.LJTI115_1
	.long	.LBB115_25-.LJTI115_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	4                               # MaxState
	.long	("$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	8                               # IPMapEntries
	.long	("$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	368                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$33@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$64@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$67@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	2                               # ToState
	.long	"?dtor$51@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin45@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp246@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp248@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp251@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp252@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp255@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp256@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp257@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@EU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin46:
.seh_proc "??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$104, %rsp
	.seh_stackalloc 104
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	movzbl	10(%rax), %eax
	cmpl	$3, %eax
	je	.LBB116_5
# %bb.1:
	cmpl	$1, %eax
	jne	.LBB116_8
# %bb.2:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB116_4
# %bb.3:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB116_4:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
.LBB116_8:
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	jne	.LBB116_9
	jmp	.LBB116_13
.LBB116_5:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB116_7
# %bb.6:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB116_7:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	movq	24(%rbx), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB116_13
.LBB116_9:
	movq	(%rax), %r15
	xorl	%r12d, %r12d
	jmp	.LBB116_10
	.p2align	4, 0x90
.LBB116_12:                             #   in Loop: Header=BB116_10 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r13b, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r14
	je	.LBB116_13
.LBB116_10:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %r13d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB116_12
# %bb.11:                               #   in Loop: Header=BB116_10 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB116_12
.LBB116_13:
	movq	32(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB116_20
# %bb.14:
	movq	8(%rbx), %rax
	movq	40(%rbx), %rcx
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB116_20
# %bb.15:
	jle	.LBB116_20
# %bb.16:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB116_17
	.p2align	4, 0x90
.LBB116_19:                             #   in Loop: Header=BB116_17 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB116_20
.LBB116_17:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB116_19
# %bb.18:                               #   in Loop: Header=BB116_17 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB116_19
.LBB116_20:
	movq	48(%rbx), %rax
	movl	(%rax), %r14d
	testl	%r14d, %r14d
	jle	.LBB116_38
# %bb.21:
	movq	72(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB116_24
# %bb.22:
	movq	8(%rax), %rcx
	movq	%rcx, -8(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB116_26
.LBB116_38:
	movq	(%rbx), %r14
	movq	56(%rbx), %rax
	movq	(%rax), %rbx
	jmp	.LBB116_39
	.p2align	4, 0x90
.LBB116_42:                             #   in Loop: Header=BB116_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%rbx
.LBB116_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %rbx
	je	.LBB116_43
# %bb.40:                               #   in Loop: Header=BB116_39 Depth=1
	movzbl	(%rbx), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB116_42
# %bb.41:                               #   in Loop: Header=BB116_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB116_42
.LBB116_43:
	movq	%rdi, (%rsi)
	jmp	.LBB116_44
.LBB116_24:
.Ltmp258:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp259:
# %bb.25:
	movq	%rax, -8(%rbp)
.LBB116_26:
.Ltmp260:
	leaq	-16(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp261:
# %bb.27:
	movq	(%rax), %rdx
.Ltmp262:
	movq	%rax, %rcx
	callq	*32(%rdx)
.Ltmp263:
# %bb.28:
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB116_30
# %bb.29:
	movq	(%rdx), %rdx
.LBB116_30:
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	(%rbx), %r8
	movq	56(%rbx), %rcx
	movq	(%rcx), %rdx
.Ltmp264:
	movq	%rdi, 48(%rsp)
	movl	%r14d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-32(%rbp), %r9
	movq	%rsi, %rcx
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
.Ltmp265:
# %bb.31:
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB116_44
# %bb.32:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB116_44
# %bb.33:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB116_44:
	movq	%rsi, %rax
	addq	$104, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB116_23:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB116_34:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-8(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB116_37
# %bb.35:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB116_37
# %bb.36:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB116_37:
	nop
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end46:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	96                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$23@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$34@?0???R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin46@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp258@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp260@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp265@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@2@YA?AV12@V12@EU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@01@YA?AV21@0EU31@V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB117_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB117_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB117_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB117_5
# %bb.4:
	movl	%eax, %r15d
.LBB117_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB117_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Write_integral@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@E@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@EU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB117_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB117_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB117_19
	.p2align	4, 0x90
.LBB117_23:                             #   in Loop: Header=BB117_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB117_24
.LBB117_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB117_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB117_20
	.p2align	4, 0x90
.LBB117_22:                             #   in Loop: Header=BB117_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB117_23
.LBB117_20:                             #   Parent Loop BB117_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB117_22
# %bb.21:                               #   in Loop: Header=BB117_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB117_22
.LBB117_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB117_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB117_7
.LBB117_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB117_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB117_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB117_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB117_16
	.p2align	4, 0x90
.LBB117_14:                             #   in Loop: Header=BB117_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB117_15
.LBB117_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB117_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB117_11
	.p2align	4, 0x90
.LBB117_13:                             #   in Loop: Header=BB117_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB117_14
.LBB117_11:                             #   Parent Loop BB117_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB117_13
# %bb.12:                               #   in Loop: Header=BB117_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB117_13
.LBB117_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB117_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.globl	__xmm@7fffffff7fffffff7fffffff7fffffff # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.section	.rdata,"dr",discard,__xmm@7fffffff7fffffff7fffffff7fffffff
	.p2align	4, 0x0
__xmm@7fffffff7fffffff7fffffff7fffffff:
	.long	0x7fffffff                      # float NaN
	.long	0x7fffffff                      # float NaN
	.long	0x7fffffff                      # float NaN
	.long	0x7fffffff                      # float NaN
	.globl	__real@3f800000
	.section	.rdata,"dr",discard,__real@3f800000
	.p2align	2, 0x0
__real@3f800000:
	.long	0x3f800000                      # float 1
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin47:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$1768, %rsp                     # imm = 0x6E8
	.seh_stackalloc 1768
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	movaps	%xmm6, 1616(%rbp)               # 16-byte Spill
	.seh_savexmm %xmm6, 1744
	.seh_endprologue
	movq	$-2, 1608(%rbp)
	movq	%r9, %rbx
	movdqa	%xmm2, %xmm6
	movq	%rdx, %r12
	movq	%rcx, %r15
	movq	1744(%rbp), %rax
	movq	%rax, 1312(%rbp)
	movzbl	10(%r9), %eax
	testb	%al, %al
	movl	$2, %r13d
	cmovnel	%eax, %r13d
	movb	%r13b, 1598(%rbp)
	movl	4(%r9), %eax
	movsbl	8(%r9), %ecx
	movl	$3, %edx
	movq	%rdx, 1576(%rbp)                # 8-byte Spill
	movl	$0, 1592(%rbp)                  # 4-byte Folded Spill
	xorl	%esi, %esi
	xorl	%r14d, %r14d
	addl	$-65, %ecx
	cmpl	$38, %ecx
	ja	.LBB118_1
# %bb.2:
	leaq	.LJTI118_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	xorl	%edx, %edx
	jmpq	*%rcx
.LBB118_3:
	movb	$1, %sil
.LBB118_4:
	movl	%esi, %edx
	movl	$4, %ecx
	movq	%rcx, 1576(%rbp)                # 8-byte Spill
	movb	$1, %sil
	movb	$112, %r14b
	jmp	.LBB118_12
.LBB118_7:
	movb	$1, %sil
.LBB118_8:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$2, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
	xorl	%r14d, %r14d
	movl	%ecx, %eax
	xorl	%esi, %esi
	jmp	.LBB118_12
.LBB118_9:
	movb	$1, %sil
.LBB118_10:
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	%esi, %edx
	jmp	.LBB118_11
.LBB118_5:
	movb	$1, %sil
.LBB118_6:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$1, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
.LBB118_11:
	movb	$101, %r14b
	xorl	%esi, %esi
	movl	%ecx, %eax
.LBB118_12:
	movl	%edx, 1600(%rbp)                # 4-byte Spill
	leal	-1074(%rax), %ecx
	cmpl	$1074, %eax                     # imm = 0x432
	movl	$1074, %edx                     # imm = 0x432
	cmovll	%eax, %edx
	movl	%edx, 1568(%rbp)                # 4-byte Spill
	movl	1592(%rbp), %eax                # 4-byte Reload
	cmovgl	%ecx, %eax
	movl	%eax, 1592(%rbp)                # 4-byte Spill
.Ltmp266:
	movdqa	%xmm6, %xmm0
	callq	_fdsign
.Ltmp267:
# %bb.13:
	movl	%eax, %edi
	testl	%eax, %eax
	setne	1599(%rbp)
	movd	%xmm6, 1328(%rbp)
.Ltmp268:
	leaq	1328(%rbp), %rcx
	callq	_fdtest
.Ltmp269:
# %bb.14:
	movq	%r15, 1320(%rbp)                # 8-byte Spill
	cmpw	$2, %ax
	movq	%r12, 1480(%rbp)                # 8-byte Spill
	jne	.LBB118_16
# %bb.15:
	xorl	%eax, %eax
	testl	%edi, %edi
	setne	%al
	movb	$110, -78(%rbp,%rax)
	movw	$24942, -80(%rbp,%rax)          # imm = 0x616E
	leaq	(%rax,%rbp), %r15
	addq	$-77, %r15
	movq	%r15, 1448(%rbp)
	jmp	.LBB118_48
.LBB118_16:
	leaq	1305(%rbp), %r15
	movl	1568(%rbp), %eax                # 4-byte Reload
	cmpl	$-1, %eax
	je	.LBB118_17
# %bb.47:
	movl	%eax, 40(%rsp)
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1448(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movq	%r15, %r8
	movdqa	%xmm6, %xmm3
	callq	"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	movq	1448(%rbp), %r15
	jmp	.LBB118_48
.LBB118_17:
	movd	%xmm6, %eax
	testl	%eax, %eax
	js	.LBB118_19
# %bb.18:
	xorl	%edx, %edx
	movdqa	%xmm6, %xmm3
	movl	%eax, %ecx
	jmp	.LBB118_20
.LBB118_19:
	movb	$45, -80(%rbp)
	movl	%eax, %ecx
	andl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	movd	%ecx, %xmm3
	movl	$1, %edx
.LBB118_20:
	leaq	(%rdx,%rbp), %r12
	addq	$-80, %r12
	movl	%ecx, %r8d
	notl	%r8d
	testl	$2139095040, %r8d               # imm = 0x7F800000
	jne	.LBB118_28
# %bb.21:
	movl	%ecx, %edx
	andl	$8388607, %edx                  # imm = 0x7FFFFF
	je	.LBB118_22
# %bb.23:
	testl	%eax, %eax
	jns	.LBB118_26
# %bb.24:
	cmpl	$4194304, %edx                  # imm = 0x400000
	jne	.LBB118_26
# %bb.25:
	movl	$8, %r15d
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	jmp	.LBB118_27
.LBB118_28:
	testb	%sil, %sil
	je	.LBB118_44
# %bb.29:
	movd	%xmm3, %r9d
	testl	%r9d, %r9d
	je	.LBB118_30
# %bb.32:
	movl	%r9d, %eax
	shrl	$23, %eax
	addl	$-127, %eax
	cmpl	$8388608, %r9d                  # imm = 0x800000
	movl	$-126, %r8d
	cmovael	%eax, %r8d
	setb	%cl
	xorb	$49, %cl
	movb	%cl, -80(%rbp,%rdx)
	andl	$8388607, %r9d                  # imm = 0x7FFFFF
	je	.LBB118_33
# %bb.34:
	movb	$46, -79(%rbp,%rdx)
	addl	%r9d, %r9d
	leaq	(%rdx,%rbp), %r12
	addq	$-78, %r12
	shlq	$2, %rdx
	movl	$5532, %r10d                    # imm = 0x159C
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r11
	.p2align	4, 0x90
.LBB118_35:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r10, %rdx
	je	.LBB118_36
# %bb.37:                               #   in Loop: Header=BB118_35 Depth=1
	movl	%r9d, %esi
	leal	120(%r10), %ecx
	shrq	%cl, %rsi
	movzbl	(%rsi,%r11), %esi
	movb	%sil, (%r12)
	movl	$-1, %esi
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %esi
	notl	%esi
	addq	$-4, %r10
	incq	%r12
	andl	%esi, %r9d
	jne	.LBB118_35
	jmp	.LBB118_38
.LBB118_1:
	xorl	%edx, %edx
	jmp	.LBB118_12
.LBB118_44:
.Ltmp270:
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1328(%rbp), %rcx
	movq	%r12, %rdx
	movq	%r15, %r8
	callq	"??$__f2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0MW4chars_format@0@@Z"
.Ltmp271:
# %bb.45:
	movq	1328(%rbp), %r15
	movl	1336(%rbp), %ecx
	jmp	.LBB118_46
.LBB118_22:
	movl	$3, %r15d
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	jmp	.LBB118_27
.LBB118_26:
	testl	$4194304, %ecx                  # imm = 0x400000
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmoveq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %r15d
	cmoveq	%rax, %r15
.LBB118_27:
	movq	%r12, %rcx
	movq	%r15, %r8
	callq	memcpy
	addq	%r15, %r12
.LBB118_31:
	xorl	%ecx, %ecx
	movq	%r12, %r15
.LBB118_46:
	movq	%r15, 1448(%rbp)
	movl	%ecx, 1456(%rbp)
.LBB118_48:
	leaq	-80(%rbp), %rsi
	movl	%r15d, %r12d
	subl	%esi, %r12d
	movq	%rsi, 1464(%rbp)
	movl	%r12d, 1584(%rbp)
	testl	%edi, %edi
	je	.LBB118_50
# %bb.49:
	leaq	-79(%rbp), %rsi
	movq	%rsi, 1464(%rbp)
	movl	1600(%rbp), %eax                # 4-byte Reload
	jmp	.LBB118_52
.LBB118_50:
	cmpb	$2, %r13b
	movl	1600(%rbp), %eax                # 4-byte Reload
	je	.LBB118_52
# %bb.51:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
.LBB118_52:
	testb	%al, %al
	je	.LBB118_57
# %bb.53:
	cmpq	%r15, %rsi
	je	.LBB118_56
# %bb.54:
	movq	%rsi, %rdi
	.p2align	4, 0x90
.LBB118_55:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%rdi), %ecx
	callq	toupper
	movb	%al, (%rdi)
	incq	%rdi
	cmpq	%r15, %rdi
	jne	.LBB118_55
.LBB118_56:
	movzbl	%r14b, %ecx
	callq	toupper
	movl	%eax, %r14d
.LBB118_57:
	movd	%xmm6, 1328(%rbp)
.Ltmp272:
	leaq	1328(%rbp), %rdi
	movq	%rdi, %rcx
	callq	_fdtest
.Ltmp273:
# %bb.58:
	movb	$0, 1607(%rbp)
	movq	%r15, 1552(%rbp)
	movq	%r15, 1544(%rbp)
	movq	%r15, 1472(%rbp)
	movl	$0, 1588(%rbp)
	movl	$0, 1564(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, 1488(%rbp)
	movq	$0, 1504(%rbp)
	movq	$15, 1512(%rbp)
	testw	%ax, %ax
	jle	.LBB118_60
# %bb.59:
	xorl	%r8d, %r8d
	jmp	.LBB118_124
.LBB118_60:
	movw	%ax, 1600(%rbp)                 # 2-byte Spill
	movzbl	11(%rbx), %ecx
	movzbl	12(%rbx), %eax
	movl	%ecx, %edx
	orb	%al, %dl
	jne	.LBB118_63
# %bb.61:
	xorl	%edx, %edx
	movq	%r15, %r13
	jmp	.LBB118_62
.LBB118_63:
	movq	%r15, %r9
	movq	%r15, %r13
	cmpq	%r15, %rsi
	jae	.LBB118_75
# %bb.64:
	movl	%r15d, %r9d
	subl	%esi, %r9d
	movq	1552(%rbp), %rdx
	movq	1544(%rbp), %r8
	movq	%rsi, %r11
	notq	%r11
	testb	$1, %r9b
	jne	.LBB118_66
# %bb.65:
	movq	%r15, %r9
	movq	%r15, %r13
	movq	%rsi, %r10
	addq	%r15, %r11
	je	.LBB118_74
	jmp	.LBB118_71
.LBB118_66:
	movzbl	(%rsi), %r9d
	cmpb	$46, %r9b
	jne	.LBB118_68
# %bb.67:
	movq	%rsi, %r8
	movq	%rsi, %r9
	movq	%r15, %r13
	jmp	.LBB118_69
.LBB118_68:
	cmpb	%r14b, %r9b
	cmoveq	%rsi, %rdx
	movq	%r15, %r13
	cmoveq	%rsi, %r13
	movq	%r15, %r9
.LBB118_69:
	leaq	1(%rsi), %r10
	addq	%r15, %r11
	jne	.LBB118_71
.LBB118_74:
	movq	%rdx, 1552(%rbp)
	movq	%r8, 1544(%rbp)
.LBB118_75:
	cmpq	%r9, %r13
	movq	%r9, %rdi
	cmovbq	%r13, %rdi
	movl	$0, 1572(%rbp)                  # 4-byte Folded Spill
	movq	%rdi, 1472(%rbp)
	testb	%cl, %cl
	je	.LBB118_78
# %bb.76:
	cmpq	%r15, %r9
	jne	.LBB118_78
# %bb.77:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
	movb	$1, 1607(%rbp)
	movb	$1, %cl
	movl	%ecx, 1572(%rbp)                # 4-byte Spill
.LBB118_78:
	testb	%al, %al
	je	.LBB118_79
# %bb.85:
	movq	1744(%rbp), %rax
	testq	%rax, %rax
	je	.LBB118_88
# %bb.86:
	movq	8(%rax), %rcx
	movq	%rcx, 1536(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB118_90
.LBB118_79:
	movl	1572(%rbp), %edx                # 4-byte Reload
.LBB118_62:
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI118_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	jmpq	*%rcx
.LBB118_71:
	incq	%r10
	jmp	.LBB118_72
	.p2align	4, 0x90
.LBB118_83:                             #   in Loop: Header=BB118_72 Depth=1
	cmpb	%r14b, %r11b
	cmoveq	%r10, %rdx
	cmoveq	%r10, %r13
.LBB118_84:                             #   in Loop: Header=BB118_72 Depth=1
	leaq	2(%r10), %r11
	incq	%r10
	cmpq	%r15, %r10
	movq	%r11, %r10
	je	.LBB118_74
.LBB118_72:                             # =>This Inner Loop Header: Depth=1
	leaq	-1(%r10), %r11
	movzbl	-1(%r10), %edi
	cmpb	$46, %dil
	jne	.LBB118_80
# %bb.73:                               #   in Loop: Header=BB118_72 Depth=1
	movq	%r11, %r8
	movq	%r11, %r9
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB118_83
	jmp	.LBB118_82
	.p2align	4, 0x90
.LBB118_80:                             #   in Loop: Header=BB118_72 Depth=1
	cmpb	%r14b, %dil
	cmoveq	%r11, %rdx
	cmoveq	%r11, %r13
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB118_83
.LBB118_82:                             #   in Loop: Header=BB118_72 Depth=1
	movq	%r10, %r8
	movq	%r10, %r9
	jmp	.LBB118_84
.LBB118_88:
.Ltmp274:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp275:
# %bb.89:
	movq	%rax, 1536(%rbp)
.LBB118_90:
.Ltmp276:
	leaq	1528(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp277:
# %bb.91:
	movq	(%rax), %r8
.Ltmp278:
	leaq	1328(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp279:
# %bb.92:
	movq	1536(%rbp), %rcx
	movdqu	1328(%rbp), %xmm0
	movups	1344(%rbp), %xmm1
	movdqa	%xmm0, 1488(%rbp)
	movaps	%xmm1, 1504(%rbp)
	movq	$0, 1344(%rbp)
	movq	$15, 1352(%rbp)
	movb	$0, 1328(%rbp)
	testq	%rcx, %rcx
	je	.LBB118_95
# %bb.93:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB118_95
# %bb.94:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB118_95:
	movq	1504(%rbp), %rax
	cmpq	$16, 1512(%rbp)
	jb	.LBB118_96
# %bb.97:
	movq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB118_99
	jmp	.LBB118_102
.LBB118_96:
	leaq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB118_102
.LBB118_99:
	subq	%rsi, %rdi
	movsbq	(%rcx), %r8
	cmpq	%r8, %rdi
	jbe	.LBB118_102
# %bb.100:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r9
	.p2align	4, 0x90
.LBB118_101:                            # =>This Inner Loop Header: Depth=1
	subq	%r8, %rdi
	incq	%r9
	incl	%edx
	cmpq	%rax, %r9
	cmovneq	%r9, %rcx
	movsbq	(%rcx), %r8
	movq	%rcx, %r9
	cmpq	%r8, %rdi
	ja	.LBB118_101
.LBB118_102:
	movl	%edx, 1564(%rbp)
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI118_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	movl	1572(%rbp), %edx                # 4-byte Reload
	jmpq	*%rcx
.LBB118_107:
	cmpl	$0, 1592(%rbp)                  # 4-byte Folded Reload
	je	.LBB118_110
# %bb.108:
	decq	%r13
	.p2align	4, 0x90
.LBB118_109:                            # =>This Inner Loop Header: Depth=1
	movq	%r13, 1552(%rbp)
	leaq	-1(%r13), %rax
	cmpb	%r14b, (%r13)
	movq	%rax, %r13
	jne	.LBB118_109
.LBB118_110:
	movl	1592(%rbp), %r8d                # 4-byte Reload
	movl	%r8d, 1588(%rbp)
.LBB118_114:
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
.LBB118_124:
	testw	%ax, %ax
	setle	%al
	addl	%r8d, %r12d
	movl	%r12d, 1584(%rbp)
	cmpb	$0, 13(%rbx)
	setne	%dl
	cmpb	$0, 9(%rbx)
	sete	%cl
	andb	%dl, %cl
	leaq	1598(%rbp), %rdx
	movq	%rdx, 1328(%rbp)
	leaq	1599(%rbp), %rdx
	movq	%rdx, 1336(%rbp)
	leaq	1528(%rbp), %rdx
	movq	%rdx, 1344(%rbp)
	leaq	1584(%rbp), %rdx
	movq	%rdx, 1352(%rbp)
	movq	%rbx, 1360(%rbp)
	leaq	1312(%rbp), %rdx
	movq	%rdx, 1368(%rbp)
	leaq	1464(%rbp), %rdx
	movq	%rdx, 1376(%rbp)
	leaq	1472(%rbp), %rdx
	movq	%rdx, 1384(%rbp)
	leaq	1488(%rbp), %rdx
	movq	%rdx, 1392(%rbp)
	leaq	1564(%rbp), %rdx
	movq	%rdx, 1400(%rbp)
	leaq	1544(%rbp), %rdx
	movq	%rdx, 1408(%rbp)
	leaq	1448(%rbp), %rdx
	movq	%rdx, 1416(%rbp)
	leaq	1607(%rbp), %rdx
	movq	%rdx, 1424(%rbp)
	leaq	1552(%rbp), %rdx
	movq	%rdx, 1432(%rbp)
	leaq	1588(%rbp), %rdx
	movq	%rdx, 1440(%rbp)
	andb	%al, %cl
	movb	%cl, 1528(%rbp)
	movq	1320(%rbp), %rsi                # 8-byte Reload
	je	.LBB118_126
# %bb.125:
.Ltmp282:
	leaq	1328(%rbp), %rcx
	movq	%rsi, %rdx
	movq	1480(%rbp), %r8                 # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp283:
	jmp	.LBB118_127
.LBB118_126:
.Ltmp280:
	movq	%rdi, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	1480(%rbp), %rdx                # 8-byte Reload
	movl	%r12d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z"
.Ltmp281:
.LBB118_127:
	movq	1512(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB118_135
# %bb.128:
	movq	1488(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB118_134
# %bb.129:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB118_130
# %bb.133:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB118_134:
	callq	"??3@YAXPEAX_K@Z"
.LBB118_135:
	movq	%rsi, %rax
	movaps	1616(%rbp), %xmm6               # 16-byte Reload
	addq	$1768, %rsp                     # imm = 0x6E8
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB118_111:
	cmpb	$0, 11(%rbx)
	je	.LBB118_112
# %bb.113:
	movl	%esi, %eax
	subl	%r13d, %eax
	xorb	$1, %dl
	movzbl	%dl, %ecx
	movl	1592(%rbp), %r8d                # 4-byte Reload
	addl	1568(%rbp), %r8d                # 4-byte Folded Reload
	addl	%eax, %r8d
	addl	%ecx, %r8d
	movl	%r8d, 1588(%rbp)
	cmpq	%r15, %r13
	jne	.LBB118_114
# %bb.115:
	pxor	%xmm0, %xmm0
	ucomiss	%xmm0, %xmm6
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
	jne	.LBB118_116
	jnp	.LBB118_124
.LBB118_116:
	andps	__xmm@7fffffff7fffffff7fffffff7fffffff(%rip), %xmm6
	movss	__real@3f800000(%rip), %xmm0    # xmm0 = mem[0],zero,zero,zero
	ucomiss	%xmm6, %xmm0
	jbe	.LBB118_124
# %bb.117:
	cmpq	%r15, %rsi
	jae	.LBB118_124
# %bb.118:
	subq	%rsi, %r15
	movl	1588(%rbp), %r9d
	xorl	%ecx, %ecx
	jmp	.LBB118_119
.LBB118_121:                            #   in Loop: Header=BB118_119 Depth=1
	incl	%r8d
	movl	%r8d, %r9d
.LBB118_122:                            #   in Loop: Header=BB118_119 Depth=1
	incq	%rcx
	cmpq	%rcx, %r15
	je	.LBB118_123
.LBB118_119:                            # =>This Inner Loop Header: Depth=1
	movzbl	(%rsi,%rcx), %edx
	cmpl	$46, %edx
	je	.LBB118_122
# %bb.120:                              #   in Loop: Header=BB118_119 Depth=1
	cmpl	$48, %edx
	je	.LBB118_121
.LBB118_123:
	movl	%r9d, 1588(%rbp)
	jmp	.LBB118_124
.LBB118_112:
	xorl	%r8d, %r8d
	jmp	.LBB118_114
.LBB118_30:
	movl	$808153136, (%r12)              # imm = 0x302B7030
	addq	$4, %r12
	jmp	.LBB118_31
.LBB118_33:
	leaq	(%rdx,%rbp), %r12
	addq	$-79, %r12
.LBB118_38:
	movq	%r15, %rdx
	subq	%r12, %rdx
	movl	$132, %ecx
	cmpq	$2, %rdx
	jl	.LBB118_46
# %bb.39:
	movl	%r8d, %ecx
	negl	%ecx
	movl	%r8d, %edx
	shrl	$31, %edx
	addb	%dl, %dl
	addb	$43, %dl
	testl	%r8d, %r8d
	cmovsl	%ecx, %eax
	movb	$112, (%r12)
	movb	%dl, 1(%r12)
	xorl	%esi, %esi
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB118_40:                             # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r8d
	leal	(%r8,%r8,4), %r8d
	movl	%eax, %r9d
	subl	%r8d, %r9d
	orb	$48, %r9b
	movb	%r9b, 1359(%rbp,%rsi)
	decq	%rsi
	cmpl	$9, %eax
	movl	%edx, %eax
	ja	.LBB118_40
# %bb.41:
	addq	$2, %r12
	movq	%rsi, %r8
	negq	%r8
	movq	%r15, %rax
	subq	%r12, %rax
	movl	$132, %ecx
	cmpq	%r8, %rax
	jl	.LBB118_46
# %bb.42:
	leaq	(%rsi,%rbp), %rdx
	addq	$1360, %rdx                     # imm = 0x550
	movq	%r12, %rcx
	callq	memcpy
	subq	%rsi, %r12
	jmp	.LBB118_31
.LBB118_36:
	movl	$132, %ecx
	jmp	.LBB118_46
.LBB118_130:
.Ltmp284:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp285:
# %bb.131:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_43:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_87:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_103:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	movq	1536(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB118_106
# %bb.104:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB118_106
# %bb.105:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB118_106:
	movaps	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_132:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_136:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movaps	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	leaq	1488(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	movaps	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_137:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_138:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB118_139:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end47:
	.p2align	2, 0x90
.LJTI118_0:
	.long	.LBB118_3-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_5-.LJTI118_0
	.long	.LBB118_7-.LJTI118_0
	.long	.LBB118_9-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_4-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_12-.LJTI118_0
	.long	.LBB118_6-.LJTI118_0
	.long	.LBB118_8-.LJTI118_0
	.long	.LBB118_10-.LJTI118_0
.LJTI118_1:
	.long	.LBB118_107-.LJTI118_1
	.long	.LBB118_110-.LJTI118_1
	.long	.LBB118_111-.LJTI118_1
	.long	.LBB118_107-.LJTI118_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	8                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	14                              # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	1736                            # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	6                               # ToState
	.long	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin47@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp266@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp268@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp270@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp271@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp272@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp273@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp274@IMGREL+1               # IP
	.long	4                               # ToState
	.long	.Ltmp276@IMGREL+1               # IP
	.long	7                               # ToState
	.long	.Ltmp279@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp282@IMGREL+1               # IP
	.long	6                               # ToState
	.long	.Ltmp281@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp284@IMGREL+1               # IP
	.long	5                               # ToState
	.long	.Ltmp285@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@MAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin48:
.seh_proc "??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	cmpb	$0, (%rax)
	je	.LBB119_4
# %bb.1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB119_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB119_12:
	movq	16(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB119_19
# %bb.13:
	movq	24(%rbx), %rcx
	movq	32(%rbx), %rax
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB119_19
# %bb.14:
	jle	.LBB119_19
# %bb.15:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB119_16
	.p2align	4, 0x90
.LBB119_18:                             #   in Loop: Header=BB119_16 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB119_19
.LBB119_16:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_18
# %bb.17:                               #   in Loop: Header=BB119_16 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB119_18
.LBB119_19:
	movq	32(%rbx), %rax
	cmpb	$0, 12(%rax)
	je	.LBB119_38
# %bb.20:
	movq	40(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB119_23
# %bb.21:
	movq	8(%rax), %rcx
	movq	%rcx, -16(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB119_25
.LBB119_4:
	movq	(%rbx), %rax
	movzbl	(%rax), %eax
	cmpl	$3, %eax
	je	.LBB119_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB119_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB119_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	jmp	.LBB119_12
.LBB119_23:
.Ltmp286:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp287:
# %bb.24:
	movq	%rax, -16(%rbp)
.LBB119_25:
.Ltmp288:
	leaq	-24(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp289:
# %bb.26:
	movq	%rax, %r14
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB119_29
# %bb.27:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB119_29
# %bb.28:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB119_29:
	movq	72(%rbx), %rax
	movl	(%rax), %r15d
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*32(%rax)
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB119_31
# %bb.30:
	movq	(%rdx), %rdx
.LBB119_31:
	movq	%rdx, -40(%rbp)
	movq	%rcx, -32(%rbp)
	movq	48(%rbx), %rcx
	movq	56(%rbx), %rdx
	movq	(%rdx), %r8
	movq	(%rcx), %rdx
	movq	%rdi, 48(%rsp)
	movl	%r15d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-24(%rbp), %rcx
	leaq	-40(%rbp), %r9
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
	movq	-24(%rbp), %rdi
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	jne	.LBB119_33
# %bb.32:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB119_36
.LBB119_33:
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*24(%rax)
	movl	%eax, %r14d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_35
# %bb.34:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB119_35:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r14b, (%rcx,%rax)
	movq	96(%rbx), %rax
	movb	$0, (%rax)
.LBB119_36:
	movq	48(%rbx), %rax
	movq	56(%rbx), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	je	.LBB119_38
# %bb.37:
	movq	48(%rbx), %rax
	incq	(%rax)
.LBB119_38:
	movq	48(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rcx), %r14
	movq	(%rax), %r15
	jmp	.LBB119_39
	.p2align	4, 0x90
.LBB119_42:                             #   in Loop: Header=BB119_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r12b, (%rcx,%rax)
	incq	%r15
.LBB119_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %r15
	je	.LBB119_43
# %bb.40:                               #   in Loop: Header=BB119_39 Depth=1
	movzbl	(%r15), %r12d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_42
# %bb.41:                               #   in Loop: Header=BB119_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB119_42
.LBB119_43:
	movq	32(%rbx), %rax
	cmpb	$0, 11(%rax)
	je	.LBB119_48
# %bb.44:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB119_48
# %bb.45:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_47
# %bb.46:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB119_47:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$46, (%rcx,%rax)
.LBB119_48:
	movq	112(%rbx), %rax
	cmpl	$0, (%rax)
	jg	.LBB119_49
.LBB119_52:
	movq	88(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rax), %rbx
	movq	(%rcx), %r14
	jmp	.LBB119_53
	.p2align	4, 0x90
.LBB119_56:                             #   in Loop: Header=BB119_53 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%r14
.LBB119_53:                             # =>This Inner Loop Header: Depth=1
	cmpq	%rbx, %r14
	je	.LBB119_57
# %bb.54:                               #   in Loop: Header=BB119_53 Depth=1
	movzbl	(%r14), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_56
# %bb.55:                               #   in Loop: Header=BB119_53 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB119_56
	.p2align	4, 0x90
.LBB119_51:                             #   in Loop: Header=BB119_49 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	movq	112(%rbx), %rax
	movl	(%rax), %ecx
	leal	-1(%rcx), %edx
	movl	%edx, (%rax)
	cmpl	$1, %ecx
	jle	.LBB119_52
.LBB119_49:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_51
# %bb.50:                               #   in Loop: Header=BB119_49 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB119_51
.LBB119_57:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	addq	$96, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB119_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB119_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB119_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	jmp	.LBB119_12
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB119_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB119_58:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB119_61
# %bb.59:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB119_61
# %bb.60:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB119_61:
	nop
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end48:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin48@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp286@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp288@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp289@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@2@YA?AV12@V12@MAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@01@YA?AV21@0M1V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB120_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB120_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB120_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB120_5
# %bb.4:
	movl	%eax, %r15d
.LBB120_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB120_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@M@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@MAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB120_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB120_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB120_19
	.p2align	4, 0x90
.LBB120_23:                             #   in Loop: Header=BB120_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB120_24
.LBB120_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB120_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB120_20
	.p2align	4, 0x90
.LBB120_22:                             #   in Loop: Header=BB120_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB120_23
.LBB120_20:                             #   Parent Loop BB120_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB120_22
# %bb.21:                               #   in Loop: Header=BB120_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB120_22
.LBB120_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB120_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB120_7
.LBB120_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB120_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB120_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB120_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB120_16
	.p2align	4, 0x90
.LBB120_14:                             #   in Loop: Header=BB120_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB120_15
.LBB120_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB120_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB120_11
	.p2align	4, 0x90
.LBB120_13:                             #   in Loop: Header=BB120_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB120_14
.LBB120_11:                             #   Parent Loop BB120_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB120_13
# %bb.12:                               #   in Loop: Header=BB120_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB120_13
.LBB120_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB120_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.globl	"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z" # -- Begin function ??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z
	.p2align	4, 0x90
"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z": # @"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
.Lfunc_begin49:
.seh_proc "??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	64(%rsp), %rbp
	.seh_setframe %rbp, 64
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movd	%xmm3, %eax
	testl	%eax, %eax
	js	.LBB121_2
# %bb.1:
	movl	%eax, %ecx
	movl	%ecx, %edx
	notl	%edx
	testl	$2139095040, %edx               # imm = 0x7F800000
	jne	.LBB121_15
.LBB121_6:
	movl	%ecx, %edx
	andl	$8388607, %edx                  # imm = 0x7FFFFF
	je	.LBB121_7
# %bb.8:
	testl	%eax, %eax
	jns	.LBB121_11
# %bb.9:
	cmpl	$4194304, %edx                  # imm = 0x400000
	jne	.LBB121_11
# %bb.10:
	movl	$8, %ebx
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jge	.LBB121_14
	jmp	.LBB121_13
.LBB121_2:
	cmpq	%r8, %rdi
	je	.LBB121_3
# %bb.4:
	movb	$45, (%rdi)
	incq	%rdi
	movl	%eax, %ecx
	andl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	movd	%ecx, %xmm3
	movl	%ecx, %edx
	notl	%edx
	testl	$2139095040, %edx               # imm = 0x7F800000
	je	.LBB121_6
.LBB121_15:
	movl	88(%rbp), %eax
	movl	80(%rbp), %ecx
	cmpl	$3, %ecx
	je	.LBB121_29
# %bb.16:
	cmpl	$2, %ecx
	je	.LBB121_23
# %bb.17:
	cmpl	$1, %ecx
	jne	.LBB121_30
# %bb.18:
	testl	%eax, %eax
	js	.LBB121_19
# %bb.20:
	cmpl	$1000000000, %eax               # imm = 0x3B9ACA00
	jae	.LBB121_13
	jmp	.LBB121_21
.LBB121_7:
	movl	$3, %ebx
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jge	.LBB121_14
	jmp	.LBB121_13
.LBB121_3:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB121_31
.LBB121_11:
	testl	$4194304, %ecx                  # imm = 0x400000
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmoveq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %ebx
	cmoveq	%rax, %rbx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jl	.LBB121_13
.LBB121_14:
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memcpy
	addq	%rbx, %rdi
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB121_31
.LBB121_29:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	jmp	.LBB121_31
.LBB121_23:
	testl	%eax, %eax
	js	.LBB121_24
# %bb.25:
	cmpl	$1000000000, %eax               # imm = 0x3B9ACA00
	jb	.LBB121_26
.LBB121_13:
	movq	%r8, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB121_31
.LBB121_30:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	jmp	.LBB121_31
.LBB121_19:
	movl	$6, %eax
.LBB121_21:
	cvtss2sd	%xmm3, %xmm3
.Ltmp292:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
.Ltmp293:
	jmp	.LBB121_31
.LBB121_24:
	movl	$6, %eax
.LBB121_26:
	cvtss2sd	%xmm3, %xmm3
.Ltmp290:
	movl	%eax, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movq	%rdi, %rdx
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
.Ltmp291:
# %bb.27:
	movq	-16(%rbp), %rax
	movq	%rax, (%rsi)
	movl	-8(%rbp), %eax
	movl	%eax, 8(%rsi)
.LBB121_31:
	movq	%rsi, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.seh_endproc
	.def	"?dtor$22@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA":
.seh_proc "?dtor$22@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA"
.LBB121_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	64(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.seh_endproc
	.def	"?dtor$28@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$28@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA":
.seh_proc "?dtor$28@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA"
.LBB121_28:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	64(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end49:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z")@IMGREL # IPToStateXData
	.long	64                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z":
	.long	-1                              # ToState
	.long	"?dtor$22@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$28@?0???$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z@4HA"@IMGREL # Action
"$ip2state$??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z":
	.long	.Lfunc_begin49@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp292@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp290@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp291@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01M@std@@YA?AUto_chars_result@0@PEADQEADMW4chars_format@0@H@Z"
                                        # -- End function
	.def	"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.globl	"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z" # -- Begin function ??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z
	.p2align	4, 0x90
"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z": # @"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
.Lfunc_begin50:
.seh_proc "??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$200, %rsp
	.seh_stackalloc 200
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 64(%rbp)
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movd	%xmm3, %eax
	testl	%eax, %eax
	je	.LBB122_8
# %bb.1:
	movl	176(%rbp), %edx
	testl	%edx, %edx
	js	.LBB122_10
# %bb.2:
	je	.LBB122_11
# %bb.3:
	movl	$1000000, %ecx                  # imm = 0xF4240
	cmpl	$999999, %edx                   # imm = 0xF423F
	ja	.LBB122_7
# %bb.4:
	cmpl	$7, %edx
	jbe	.LBB122_12
# %bb.5:
	cmpl	$40, %edx
	jb	.LBB122_35
# %bb.6:
	movl	%edx, %ecx
.LBB122_7:
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@M@std@@2QBIB"(%rip), %r8
	movl	$39, %edx
	jmp	.LBB122_14
.LBB122_8:
	cmpq	%rbx, %rdi
	je	.LBB122_34
# %bb.9:
	movb	$48, (%rdi)
	incq	%rdi
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB122_33
.LBB122_10:
	movl	$6, %edx
	jmp	.LBB122_12
.LBB122_11:
	movl	$1, %edx
.LBB122_12:
	leal	-1(%rdx), %ecx
	leal	10(%rdx), %r8d
	imull	%ecx, %r8d
	shrl	%r8d
	andl	$127, %r8d
	leaq	"?_Special_X_table@?$_General_precision_tables_2@M@std@@2QBIB"(%rip), %rcx
	leaq	(%rcx,%r8,4), %r8
.LBB122_13:
	movl	%edx, %ecx
.LBB122_14:
	movl	%edx, %r10d
	leaq	(%r8,%r10,4), %r9
	addq	$20, %r9
	movq	%r8, %rdx
	cmpq	%r9, %r8
	je	.LBB122_19
# %bb.15:
	leaq	20(,%r10,4), %r10
	movq	%r8, %rdx
	.p2align	4, 0x90
.LBB122_16:                             # =>This Inner Loop Header: Depth=1
	cmpl	%eax, (%rdx)
	jae	.LBB122_19
# %bb.17:                               #   in Loop: Header=BB122_16 Depth=1
	addq	$4, %rdx
	addq	$-4, %r10
	jne	.LBB122_16
# %bb.18:
	movq	%r9, %rdx
.LBB122_19:
	subq	%r8, %rdx
	shrq	$2, %rdx
	leal	-5(%rdx), %eax
	cmpl	%eax, %ecx
	setg	%r8b
	cmpl	$-4, %eax
	setge	%r13b
	andb	%r8b, %r13b
	leaq	37(%rbp), %r8
	cmpb	$1, %r13b
	jne	.LBB122_22
# %bb.20:
	subl	%edx, %ecx
	addl	$4, %ecx
	cmpl	$37, %ecx
	movl	$37, %r15d
	cmovll	%ecx, %r15d
	testl	%r15d, %r15d
	movl	$6, %eax
	cmovnsl	%r15d, %eax
	cvtss2sd	%xmm3, %xmm3
.Ltmp296:
	movl	%eax, 32(%rsp)
	leaq	48(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
.Ltmp297:
# %bb.21:
	movq	48(%rbp), %r12
	xorl	%ecx, %ecx
	xorl	%r14d, %r14d
	testl	%r15d, %r15d
	jg	.LBB122_24
	jmp	.LBB122_27
.LBB122_22:
	cmpl	$112, %ecx
	movl	$112, %eax
	cmovll	%ecx, %eax
	leal	-1(%rax), %r15d
	testl	%eax, %eax
	movl	$6, %eax
	cmovgl	%r15d, %eax
	cvtss2sd	%xmm3, %xmm3
.Ltmp294:
	movl	%eax, 32(%rsp)
	leaq	48(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	callq	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
.Ltmp295:
# %bb.23:
	movq	48(%rbp), %rdx
	leaq	-80(%rbp), %rcx
	movb	$101, %r8b
	callq	__std_find_trivial_1
	movq	%rax, %r12
	movq	48(%rbp), %r14
	movq	%rax, %rcx
	testl	%r15d, %r15d
	jle	.LBB122_27
	.p2align	4, 0x90
.LBB122_24:                             # =>This Inner Loop Header: Depth=1
	movzbl	-1(%r12), %eax
	decq	%r12
	cmpl	$48, %eax
	je	.LBB122_24
# %bb.25:
	cmpl	$46, %eax
	je	.LBB122_27
# %bb.26:
	incq	%r12
.LBB122_27:
	leaq	-80(%rbp), %rax
	subq	%rax, %r12
	movq	%rbx, %rax
	subq	%rdi, %rax
	movl	$132, %r15d
	cmpq	%r12, %rax
	jl	.LBB122_32
# %bb.28:
	movq	%rbx, 40(%rbp)                  # 8-byte Spill
	movq	%rcx, %rbx
	leaq	-80(%rbp), %rdx
	movq	%rdi, %rcx
	movq	%r12, %r8
	callq	memcpy
	addq	%r12, %rdi
	testb	%r13b, %r13b
	jne	.LBB122_31
# %bb.29:
	movq	%rbx, %rdx
	subq	%rbx, %r14
	movq	40(%rbp), %rbx                  # 8-byte Reload
	movq	%rbx, %rax
	subq	%rdi, %rax
	cmpq	%r14, %rax
	jl	.LBB122_32
# %bb.30:
	movq	%rdi, %rcx
	movq	%r14, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB122_31:
	movq	%rdi, %rbx
	xorl	%r15d, %r15d
.LBB122_32:
	movq	%rbx, (%rsi)
	movl	%r15d, 8(%rsi)
.LBB122_33:
	movq	%rsi, %rax
	addq	$200, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB122_34:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB122_33
.LBB122_35:
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@M@std@@2QBIB"(%rip), %r8
	jmp	.LBB122_13
	.seh_handlerdata
	.long	("$cppxdata$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.seh_endproc
	.def	"?dtor$36@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$36@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA":
.seh_proc "?dtor$36@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA"
.LBB122_36:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.seh_endproc
	.def	"?dtor$37@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$37@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA":
.seh_proc "?dtor$37@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA"
.LBB122_37:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end50:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z")@IMGREL # IPToStateXData
	.long	192                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z":
	.long	-1                              # ToState
	.long	"?dtor$37@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$36@?0???$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z@4HA"@IMGREL # Action
"$ip2state$??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z":
	.long	.Lfunc_begin50@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp296@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp294@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp295@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
                                        # -- End function
	.def	"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
	.globl	"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z" # -- Begin function ??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z
	.p2align	4, 0x90
"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z": # @"??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
.seh_proc "??$_Floating_to_chars_hex_precision@M@std@@YA?AUto_chars_result@0@PEADQEADMH@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	.seh_endprologue
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movl	160(%rsp), %ecx
	testl	%ecx, %ecx
	movl	$6, %eax
	cmovnsl	%ecx, %eax
	movd	%xmm3, %r15d
	movl	%r15d, %ecx
	andl	$8388607, %ecx                  # imm = 0x7FFFFF
	leal	(%rcx,%rcx), %edx
	cmpl	$8388607, %r15d                 # imm = 0x7FFFFF
	ja	.LBB123_2
# %bb.1:
	testl	%ecx, %ecx
	movl	$-126, %r15d
	cmovel	%ecx, %r15d
	jmp	.LBB123_3
.LBB123_2:
	shrl	$23, %r15d
	orl	$16777216, %edx                 # imm = 0x1000000
	addl	$-127, %r15d
.LBB123_3:
	movl	%r15d, %ebp
	negl	%ebp
	cmovsl	%r15d, %ebp
	movq	%rbx, %rcx
	subq	%rdi, %rcx
	movl	%eax, %r8d
	subq	%r8, %rcx
	jl	.LBB123_4
# %bb.5:
	xorl	%r8d, %r8d
	cmpl	$100, %ebp
	setb	%r8b
	xorq	$3, %r8
	cmpl	$10, %ebp
	movl	$1, %r9d
	cmovaeq	%r8, %r9
	cmpl	$1, %eax
	sbbq	$0, %r9
	addq	$4, %r9
	cmpq	%r9, %rcx
	jge	.LBB123_6
.LBB123_4:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB123_25
.LBB123_6:
	shrl	$31, %r15d
	addb	%r15b, %r15b
	addb	$43, %r15b
	cmpl	$5, %eax
	ja	.LBB123_19
# %bb.7:
	leal	(,%rax,4), %r8d
	leal	(%rdx,%rdx), %r9d
	leal	(%rdx,%rdx), %r10d
	decl	%r10d
	orl	%edx, %r10d
	movb	$24, %cl
	subb	%r8b, %cl
	movl	$1, %r8d
	shll	%cl, %r8d
	andl	%r9d, %r10d
	andl	%r10d, %r8d
	addl	%edx, %r8d
	movl	%r8d, %ecx
	shrl	$24, %ecx
	orb	$48, %cl
	movb	%cl, (%rdi)
	testl	%eax, %eax
	je	.LBB123_8
# %bb.9:
	movb	$46, 1(%rdi)
	movl	%r8d, %edx
	shrl	$20, %edx
	andl	$15, %edx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 2(%rdi)
	cmpl	$1, %eax
	jne	.LBB123_11
# %bb.10:
	addq	$3, %rdi
	jmp	.LBB123_20
.LBB123_19:
	movl	%edx, %ecx
	shrl	$24, %ecx
	orb	$48, %cl
	movb	%cl, (%rdi)
	movb	$46, 1(%rdi)
	movl	%edx, %r8d
	shrl	$20, %r8d
	andl	$15, %r8d
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 2(%rdi)
	movl	%edx, %r8d
	shrl	$16, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 3(%rdi)
	movl	%edx, %r8d
	shrl	$12, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 4(%rdi)
	movl	%edx, %r8d
	shrl	$8, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 5(%rdi)
	movl	%edx, %r8d
	shrl	$4, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 6(%rdi)
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 7(%rdi)
	addq	$8, %rdi
	addl	$-6, %eax
	je	.LBB123_20
# %bb.13:
	movl	%eax, %r14d
	movq	%rdi, %rcx
	movb	$48, %dl
	movq	%r14, %r8
	callq	memset
	addq	%r14, %rdi
	jmp	.LBB123_20
.LBB123_8:
	incq	%rdi
	jmp	.LBB123_20
.LBB123_11:
	movl	%r8d, %edx
	shrl	$16, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 3(%rdi)
	cmpl	$2, %eax
	jne	.LBB123_14
# %bb.12:
	addq	$4, %rdi
	jmp	.LBB123_20
.LBB123_14:
	movl	%r8d, %edx
	shrl	$12, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 4(%rdi)
	cmpl	$3, %eax
	jne	.LBB123_16
# %bb.15:
	addq	$5, %rdi
	jmp	.LBB123_20
.LBB123_16:
	movl	%r8d, %edx
	shrl	$8, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 5(%rdi)
	cmpl	$4, %eax
	jne	.LBB123_18
# %bb.17:
	addq	$6, %rdi
	jmp	.LBB123_20
.LBB123_18:
	shrl	$4, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %eax
	movb	%al, 6(%rdi)
	addq	$7, %rdi
.LBB123_20:
	movb	$112, (%rdi)
	movb	%r15b, 1(%rdi)
	xorl	%r14d, %r14d
	movl	$3435973837, %eax               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB123_21:                             # =>This Inner Loop Header: Depth=1
	movl	%ebp, %ecx
	imulq	%rax, %rcx
	shrq	$35, %rcx
	leal	(%rcx,%rcx), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%ebp, %r8d
	subl	%edx, %r8d
	orb	$48, %r8b
	movb	%r8b, 63(%rsp,%r14)
	decq	%r14
	cmpl	$9, %ebp
	movl	%ecx, %ebp
	ja	.LBB123_21
# %bb.22:
	addq	$2, %rdi
	movq	%r14, %r8
	negq	%r8
	movq	%rbx, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%r8, %rcx
	jl	.LBB123_24
# %bb.23:
	leaq	(%rsp,%r14), %rdx
	addq	$64, %rdx
	movq	%rdi, %rcx
	callq	memcpy
	subq	%r14, %rdi
	xorl	%eax, %eax
	movq	%rdi, %rbx
.LBB123_24:
	movq	%rbx, (%rsi)
	movl	%eax, 8(%rsi)
.LBB123_25:
	movq	%rsi, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
	.globl	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z" # -- Begin function ?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z
	.p2align	4, 0x90
"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z": # @"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
.seh_proc "?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$136, %rsp
	.seh_stackalloc 136
	.seh_endprologue
	movq	%r8, %r13
	movq	%rdx, %r14
	movq	%rcx, %rbx
	movl	240(%rsp), %r8d
	movq	%xmm3, %rax
	testq	%rax, %rax
	je	.LBB124_37
# %bb.1:
	movq	%rbx, 48(%rsp)                  # 8-byte Spill
	movabsq	$4503599627370495, %rcx         # imm = 0xFFFFFFFFFFFFF
	movq	%rax, %rdx
	andq	%rcx, %rdx
	shrq	$52, %rax
	testq	%rax, %rax
	leaq	1(%rdx,%rcx), %rcx
	cmoveq	%rdx, %rcx
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	leal	-1075(%rax), %eax
	movl	$-1074, %ecx                    # imm = 0xFBCE
	cmovnel	%eax, %ecx
	leal	1(%r8), %ebp
	xorl	%ebx, %ebx
	movq	%r14, 80(%rsp)                  # 8-byte Spill
	movl	$0, 40(%rsp)                    # 4-byte Folded Spill
	movq	%rcx, 88(%rsp)                  # 8-byte Spill
	cmpl	$-52, %ecx
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	movl	%ebp, 44(%rsp)                  # 4-byte Spill
	jl	.LBB124_40
# %bb.2:
	movq	88(%rsp), %r8                   # 8-byte Reload
	leal	15(%r8), %ecx
	shrl	$4, %ecx
	xorl	%ebx, %ebx
	testl	%r8d, %r8d
	cmovsl	%ebx, %ecx
	imull	$1262608, %ecx, %eax            # imm = 0x134410
	leaq	"?__POW10_OFFSET@std@@3QBGB"(%rip), %rdx
	movzwl	(%rdx,%rcx,2), %edx
	movq	%rdx, 104(%rsp)                 # 8-byte Spill
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	shll	$4, %ecx
	movq	72(%rsp), %r10                  # 8-byte Reload
	shlq	$8, %r10
	subl	%r8d, %ecx
	shrl	$18, %eax
	imull	$7282, %eax, %esi               # imm = 0x1C72
	addl	$182050, %esi                   # imm = 0x2C722
	shrl	$16, %esi
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rdi
	movq	80(%rsp), %r14                  # 8-byte Reload
	movl	$0, 40(%rsp)                    # 4-byte Folded Spill
	jmp	.LBB124_3
	.p2align	4, 0x90
.LBB124_7:                              #   in Loop: Header=BB124_3 Depth=1
	movl	%r12d, %edx
	imulq	$1441151881, %rdx, %r8          # imm = 0x55E63B89
	movl	$3518437209, %r9d               # imm = 0xD1B71759
	imulq	%r9, %rdx
	shrq	$45, %rdx
	imull	$-10000, %edx, %r9d             # imm = 0xD8F0
	addl	%r12d, %r9d
	imulq	$1374389535, %r9, %r11          # imm = 0x51EB851F
	shrq	$37, %r11
	imull	$100, %r11d, %ebx
	subl	%ebx, %r9d
	movzwl	(%rdi,%r9,2), %r9d
	movw	%r9w, 7(%r14)
	movzwl	(%rdi,%r11,2), %r9d
	movw	%r9w, 5(%r14)
	shrq	$57, %r8
	imull	$-10000, %r8d, %r9d             # imm = 0xD8F0
	addl	%edx, %r9d
	imulq	$1374389535, %r9, %rdx          # imm = 0x51EB851F
	shrq	$37, %rdx
	imull	$100, %edx, %r11d
	subl	%r11d, %r9d
	movzwl	(%rdi,%r9,2), %r9d
	movw	%r9w, 3(%r14)
	movzwl	(%rdi,%rdx,2), %edx
	movw	%dx, 1(%r14)
	addb	$48, %r8b
	movb	%r8b, (%r14)
.LBB124_25:                             #   in Loop: Header=BB124_3 Depth=1
	addq	$9, %r14
	movl	%eax, %ebx
	movq	64(%rsp), %rdx                  # 8-byte Reload
	cmpq	$1, %rdx
	jle	.LBB124_35
.LBB124_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB124_22 Depth 2
	movq	%rsi, 64(%rsp)                  # 8-byte Spill
	decq	%rsi
	movq	104(%rsp), %rax                 # 8-byte Reload
	addl	%esi, %eax
	leaq	(%rax,%rax,2), %r13
	movq	%r10, %rax
	leaq	"?__POW10_SPLIT@std@@3QAY02$$CB_KA"(%rip), %r8
	mulq	(%r8,%r13,8)
	movq	%rdx, %r15
	movq	%r10, %rax
	mulq	8(%r8,%r13,8)
	movq	%rdx, %r11
	movq	%rax, %r12
	movq	%r10, %rax
	mulq	16(%r8,%r13,8)
	addq	%r15, %r12
	adcq	%rax, %r11
	cmpq	%rax, %r11
	adcq	$0, %rdx
	movq	%rdx, %r15
	shrq	%cl, %r15
	shrdq	%cl, %rdx, %r11
	movq	%r11, %rax
	movabsq	$3560107088838733873, %r9       # imm = 0x31680A88F8953031
	mulq	%r9
	movq	%rdx, %r12
	movq	%r11, %rax
	movabsq	$-8543223759426509417, %r8      # imm = 0x89705F4136B4A597
	mulq	%r8
	movq	%rdx, %r13
	movq	%rax, %rbp
	movq	%r15, %rax
	mulq	%r9
	imulq	%r8, %r15
	leaq	(%r12,%rax), %r8
	xorl	%r9d, %r9d
	addq	%r8, %rbp
	setb	%r9b
	addq	%r13, %rdx
	addq	%r15, %rdx
	addq	%rax, %r12
	adcq	%rdx, %r9
	shrq	$29, %r9
	imull	$-1000000000, %r9d, %r12d       # imm = 0xC4653600
	addl	%r11d, %r12d
	testl	%ebx, %ebx
	je	.LBB124_8
# %bb.4:                                #   in Loop: Header=BB124_3 Depth=1
	leal	9(%rbx), %eax
	movl	44(%rsp), %ebp                  # 4-byte Reload
	cmpl	%ebp, %eax
	ja	.LBB124_81
# %bb.5:                                #   in Loop: Header=BB124_3 Depth=1
	movq	56(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rdx
	subq	%r14, %rdx
	cmpq	$9, %rdx
	jl	.LBB124_79
# %bb.6:                                #   in Loop: Header=BB124_3 Depth=1
	testl	%r12d, %r12d
	jne	.LBB124_7
# %bb.24:                               #   in Loop: Header=BB124_3 Depth=1
	movabsq	$3472328296227680304, %rdx      # imm = 0x3030303030303030
	movq	%rdx, (%r14)
	movb	$48, 8(%r14)
	jmp	.LBB124_25
	.p2align	4, 0x90
.LBB124_8:                              #   in Loop: Header=BB124_3 Depth=1
	testl	%r12d, %r12d
	je	.LBB124_26
# %bb.9:                                #   in Loop: Header=BB124_3 Depth=1
	movl	$9, %ebx
	cmpl	$99999999, %r12d                # imm = 0x5F5E0FF
	movl	$3518437209, %r15d              # imm = 0xD1B71759
	ja	.LBB124_17
# %bb.10:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$8, %ebx
	cmpl	$9999999, %r12d                 # imm = 0x98967F
	ja	.LBB124_17
# %bb.11:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$7, %ebx
	cmpl	$999999, %r12d                  # imm = 0xF423F
	ja	.LBB124_17
# %bb.12:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$6, %ebx
	cmpl	$99999, %r12d                   # imm = 0x1869F
	ja	.LBB124_17
# %bb.13:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$5, %ebx
	cmpl	$9999, %r12d                    # imm = 0x270F
	ja	.LBB124_17
# %bb.14:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$4, %ebx
	cmpl	$999, %r12d                     # imm = 0x3E7
	ja	.LBB124_17
# %bb.15:                               #   in Loop: Header=BB124_3 Depth=1
	movl	$3, %ebx
	cmpl	$99, %r12d
	ja	.LBB124_17
# %bb.16:                               #   in Loop: Header=BB124_3 Depth=1
	cmpl	$10, %r12d
	movl	$1, %ebx
	sbbl	$-1, %ebx
	.p2align	4, 0x90
.LBB124_17:                             #   in Loop: Header=BB124_3 Depth=1
	leal	(%rsi,%rsi,8), %eax
	addl	%ebx, %eax
	decl	%eax
	movl	%eax, 40(%rsp)                  # 4-byte Spill
	movl	44(%rsp), %ebp                  # 4-byte Reload
	cmpl	%ebp, %ebx
	movq	56(%rsp), %r13                  # 8-byte Reload
	ja	.LBB124_84
# %bb.18:                               #   in Loop: Header=BB124_3 Depth=1
	movl	240(%rsp), %eax
	testl	%eax, %eax
	je	.LBB124_27
# %bb.19:                               #   in Loop: Header=BB124_3 Depth=1
	movq	%r13, %rdx
	subq	%r14, %rdx
	leal	1(%rbx), %eax
	cmpq	%rax, %rdx
	jl	.LBB124_79
# %bb.20:                               #   in Loop: Header=BB124_3 Depth=1
	cmpl	$10000, %r12d                   # imm = 0x2710
	jb	.LBB124_29
# %bb.21:                               #   in Loop: Header=BB124_3 Depth=1
	movl	%ebx, %edx
	leaq	(%r14,%rdx), %r11
	incq	%r11
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB124_22:                             #   Parent Loop BB124_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	%r12d, %r8d
	movl	%r12d, %r12d
	imulq	%r15, %r12
	shrq	$45, %r12
	imull	$-10000, %r12d, %r9d            # imm = 0xD8F0
	addl	%r8d, %r9d
	imulq	$1374389535, %r9, %r15          # imm = 0x51EB851F
	shrq	$37, %r15
	imull	$100, %r15d, %ebp
	subl	%ebp, %r9d
	movl	%edx, %r13d
	movq	%r11, %rbp
	subq	%r13, %rbp
	movzwl	(%rdi,%r9,2), %r9d
	movw	%r9w, -2(%rbp)
	movzwl	(%rdi,%r15,2), %r9d
	movl	$3518437209, %r15d              # imm = 0xD1B71759
	movw	%r9w, -4(%rbp)
	addl	$4, %edx
	cmpl	$99999999, %r8d                 # imm = 0x5F5E0FF
	ja	.LBB124_22
# %bb.23:                               #   in Loop: Header=BB124_3 Depth=1
	movl	%edx, %edx
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	44(%rsp), %ebp                  # 4-byte Reload
	cmpl	$100, %r12d
	jae	.LBB124_30
	jmp	.LBB124_31
.LBB124_26:                             #   in Loop: Header=BB124_3 Depth=1
	xorl	%ebx, %ebx
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	44(%rsp), %ebp                  # 4-byte Reload
	movq	64(%rsp), %rdx                  # 8-byte Reload
	cmpq	$1, %rdx
	jg	.LBB124_3
	jmp	.LBB124_35
.LBB124_27:                             #   in Loop: Header=BB124_3 Depth=1
	cmpq	%r13, %r14
	je	.LBB124_79
# %bb.28:                               #   in Loop: Header=BB124_3 Depth=1
	addb	$48, %r11b
	movb	%r11b, (%r14)
	incq	%r14
	movq	64(%rsp), %rdx                  # 8-byte Reload
	cmpq	$1, %rdx
	jg	.LBB124_3
	jmp	.LBB124_35
.LBB124_29:                             #   in Loop: Header=BB124_3 Depth=1
	xorl	%edx, %edx
	cmpl	$100, %r12d
	jb	.LBB124_31
.LBB124_30:                             #   in Loop: Header=BB124_3 Depth=1
	movzwl	%r12w, %r8d
	shrl	$2, %r8d
	imull	$5243, %r8d, %r8d               # imm = 0x147B
	shrl	$17, %r8d
	imull	$100, %r8d, %r9d
	subl	%r9d, %r12d
	movzwl	%r12w, %r9d
	movl	%ebx, %r11d
	addq	%r14, %r11
	notq	%rdx
	movzwl	(%rdi,%r9,2), %r9d
	movw	%r9w, (%rdx,%r11)
	movl	%r8d, %r12d
.LBB124_31:                             #   in Loop: Header=BB124_3 Depth=1
	cmpl	$10, %r12d
	jb	.LBB124_33
# %bb.32:                               #   in Loop: Header=BB124_3 Depth=1
	movl	%r12d, %edx
	leaq	(%rdx,%rdx), %r8
	movl	%r8d, %r8d
	movzbl	1(%r8,%rdi), %r8d
	movb	%r8b, 2(%r14)
	movb	$46, 1(%r14)
	movzbl	(%rdi,%rdx,2), %r12d
	jmp	.LBB124_34
.LBB124_33:                             #   in Loop: Header=BB124_3 Depth=1
	movb	$46, 1(%r14)
	addb	$48, %r12b
.LBB124_34:                             #   in Loop: Header=BB124_3 Depth=1
	movq	64(%rsp), %rdx                  # 8-byte Reload
	movb	%r12b, (%r14)
	addq	%rax, %r14
	cmpq	$1, %rdx
	jg	.LBB124_3
.LBB124_35:
	cmpl	$0, 88(%rsp)                    # 4-byte Folded Reload
	js	.LBB124_40
.LBB124_36:
	subl	%ebx, %ebp
	xorl	%r12d, %r12d
	movl	%ebp, %r9d
	movl	%ebx, %r8d
	xorl	%eax, %eax
	movq	48(%rsp), %rbx                  # 8-byte Reload
	movl	240(%rsp), %r11d
	jmp	.LBB124_99
.LBB124_37:
	cmpl	$1, %r8d
	movl	%r8d, %eax
	sbbl	$0, %eax
	addl	$6, %eax
	movq	%r13, %rdx
	subq	%r14, %rdx
	cltq
	movl	$132, %ecx
	cmpq	%rax, %rdx
	jl	.LBB124_138
# %bb.38:
	movb	$48, (%r14)
	testl	%r8d, %r8d
	je	.LBB124_82
# %bb.39:
	leaq	2(%r14), %rcx
	movb	$46, 1(%r14)
	movl	%r8d, %edi
	movb	$48, %dl
	movq	%rdi, %r8
	callq	memset
	leaq	(%r14,%rdi), %r13
	addq	$2, %r13
	jmp	.LBB124_83
.LBB124_40:
	movq	88(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	negl	%ecx
	movl	%ecx, %eax
	shrq	$4, %rax
	leaq	"?__MIN_BLOCK_2@std@@3QBEB"(%rip), %rdx
	movzbl	(%rax,%rdx), %r15d
	leaq	"?__POW10_OFFSET_2@std@@3QBGB"(%rip), %rdx
	movzwl	(%rdx,%rax,2), %r10d
	movzwl	2(%rdx,%rax,2), %eax
	movq	%rax, 64(%rsp)                  # 8-byte Spill
	andl	$15, %ecx
	movq	72(%rsp), %rax                  # 8-byte Reload
	shlq	$8, %rax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	cmpb	$-56, %r15b
	movl	$199, %eax
	cmovael	%r15d, %eax
	movq	%rax, 104(%rsp)                 # 8-byte Spill
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r9
	movq	%r15, %rdi
	movl	%ebx, %r8d
	movq	%r10, 96(%rsp)                  # 8-byte Spill
	jmp	.LBB124_44
	.p2align	4, 0x90
.LBB124_41:                             #   in Loop: Header=BB124_44 Depth=1
	movl	%r12d, %eax
	imulq	$1441151881, %rax, %rdx         # imm = 0x55E63B89
	imulq	%r11, %rax
	shrq	$45, %rax
	imull	$-10000, %eax, %r8d             # imm = 0xD8F0
	addl	%r12d, %r8d
	imulq	$1374389535, %r8, %r11          # imm = 0x51EB851F
	shrq	$37, %r11
	imull	$100, %r11d, %esi
	subl	%esi, %r8d
	movzwl	(%r9,%r8,2), %r8d
	movw	%r8w, 7(%r14)
	movzwl	(%r9,%r11,2), %r8d
	movw	%r8w, 5(%r14)
	shrq	$57, %rdx
	imull	$-10000, %edx, %r8d             # imm = 0xD8F0
	addl	%eax, %r8d
	imulq	$1374389535, %r8, %rax          # imm = 0x51EB851F
	shrq	$37, %rax
	imull	$100, %eax, %r11d
	subl	%r11d, %r8d
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	movzwl	(%r9,%r8,2), %r8d
	movw	%r8w, 3(%r14)
	movzwl	(%r9,%rax,2), %eax
	movw	%ax, 1(%r14)
	addb	$48, %dl
	movb	%dl, (%r14)
.LBB124_42:                             #   in Loop: Header=BB124_44 Depth=1
	addq	$9, %r14
.LBB124_43:                             #   in Loop: Header=BB124_44 Depth=1
	leaq	1(%rdi), %rax
	movl	%ebx, %r8d
	cmpq	104(%rsp), %rdi                 # 8-byte Folded Reload
	movq	%rax, %rdi
	je	.LBB124_36
.LBB124_44:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB124_66 Depth 2
	movq	%rdi, %rax
	subq	%r15, %rax
	addq	%r10, %rax
	cmpq	64(%rsp), %rax                  # 8-byte Folded Reload
	jae	.LBB124_47
# %bb.45:                               #   in Loop: Header=BB124_44 Depth=1
	movq	%r15, %r10
	leaq	(%rax,%rax,2), %rbx
	movq	128(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %rax
	leaq	"?__POW10_SPLIT_2@std@@3QAY02$$CB_KA"(%rip), %r13
	mulq	(%r13,%rbx,8)
	movq	%rdx, %r15
	movq	%rsi, %rax
	mulq	8(%r13,%rbx,8)
	movq	%rdx, %r11
	movq	%rax, %r12
	movq	%rsi, %rax
	mulq	16(%r13,%rbx,8)
	addq	%r15, %r12
	adcq	%rax, %r11
	cmpq	%rax, %r11
	adcq	$0, %rdx
	movq	%rdx, %r15
	shrq	%cl, %r15
	shrdq	%cl, %rdx, %r11
	movq	%r11, %rax
	movabsq	$3560107088838733873, %rbx      # imm = 0x31680A88F8953031
	mulq	%rbx
	movq	%rdx, %r12
	movq	%r11, %rax
	movabsq	$-8543223759426509417, %rsi     # imm = 0x89705F4136B4A597
	mulq	%rsi
	movq	%rdx, %r13
	movq	%rax, %rbp
	movq	%r15, %rax
	mulq	%rbx
	imulq	%rsi, %r15
	leaq	(%r12,%rax), %rbx
	xorl	%esi, %esi
	addq	%rbx, %rbp
	setb	%sil
	addq	%r13, %rdx
	addq	%r15, %rdx
	addq	%rax, %r12
	adcq	%rdx, %rsi
	shrq	$29, %rsi
	imull	$-1000000000, %esi, %r12d       # imm = 0xC4653600
	addl	%r11d, %r12d
	testl	%r8d, %r8d
	je	.LBB124_52
# %bb.46:                               #   in Loop: Header=BB124_44 Depth=1
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	44(%rsp), %ebp                  # 4-byte Reload
	movq	%r10, %r15
	movq	96(%rsp), %r10                  # 8-byte Reload
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	jmp	.LBB124_48
	.p2align	4, 0x90
.LBB124_47:                             #   in Loop: Header=BB124_44 Depth=1
	xorl	%r12d, %r12d
	testl	%r8d, %r8d
	je	.LBB124_68
.LBB124_48:                             #   in Loop: Header=BB124_44 Depth=1
	leal	9(%r8), %ebx
	cmpl	%ebp, %ebx
	ja	.LBB124_80
# %bb.49:                               #   in Loop: Header=BB124_44 Depth=1
	movq	%r13, %rax
	subq	%r14, %rax
	cmpq	$9, %rax
	jl	.LBB124_79
# %bb.50:                               #   in Loop: Header=BB124_44 Depth=1
	testl	%r12d, %r12d
	jne	.LBB124_41
# %bb.51:                               #   in Loop: Header=BB124_44 Depth=1
	movabsq	$3472328296227680304, %rax      # imm = 0x3030303030303030
	movq	%rax, (%r14)
	movb	$48, 8(%r14)
	jmp	.LBB124_42
.LBB124_52:                             #   in Loop: Header=BB124_44 Depth=1
	testl	%r12d, %r12d
	je	.LBB124_69
# %bb.53:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$9, %ebx
	cmpl	$99999999, %r12d                # imm = 0x5F5E0FF
	ja	.LBB124_61
# %bb.54:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$8, %ebx
	cmpl	$9999999, %r12d                 # imm = 0x98967F
	ja	.LBB124_61
# %bb.55:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$7, %ebx
	cmpl	$999999, %r12d                  # imm = 0xF423F
	ja	.LBB124_61
# %bb.56:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$6, %ebx
	cmpl	$99999, %r12d                   # imm = 0x1869F
	ja	.LBB124_61
# %bb.57:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$5, %ebx
	cmpl	$9999, %r12d                    # imm = 0x270F
	ja	.LBB124_61
# %bb.58:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$4, %ebx
	cmpl	$999, %r12d                     # imm = 0x3E7
	ja	.LBB124_61
# %bb.59:                               #   in Loop: Header=BB124_44 Depth=1
	movl	$3, %ebx
	cmpl	$99, %r12d
	ja	.LBB124_61
# %bb.60:                               #   in Loop: Header=BB124_44 Depth=1
	cmpl	$10, %r12d
	movl	$1, %ebx
	sbbl	$-1, %ebx
.LBB124_61:                             #   in Loop: Header=BB124_44 Depth=1
	movl	%edi, %eax
	notl	%eax
	leal	(%rax,%rax,8), %eax
	addl	%ebx, %eax
	decl	%eax
	movl	%eax, 40(%rsp)                  # 4-byte Spill
	movl	44(%rsp), %ebp                  # 4-byte Reload
	cmpl	%ebp, %ebx
	movq	56(%rsp), %r13                  # 8-byte Reload
	ja	.LBB124_84
# %bb.62:                               #   in Loop: Header=BB124_44 Depth=1
	movl	240(%rsp), %eax
	testl	%eax, %eax
	movq	%r10, %r15
	je	.LBB124_70
# %bb.63:                               #   in Loop: Header=BB124_44 Depth=1
	movq	%r13, %rdx
	subq	%r14, %rdx
	leal	1(%rbx), %eax
	cmpq	%rax, %rdx
	jl	.LBB124_79
# %bb.64:                               #   in Loop: Header=BB124_44 Depth=1
	movl	%ebx, %esi
	cmpl	$10000, %r12d                   # imm = 0x2710
	jb	.LBB124_73
# %bb.65:                               #   in Loop: Header=BB124_44 Depth=1
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	movq	%rsi, 112(%rsp)                 # 8-byte Spill
	leaq	(%r14,%rsi), %rdx
	incq	%rdx
	xorl	%r8d, %r8d
	movl	$3518437209, %eax               # imm = 0xD1B71759
	.p2align	4, 0x90
.LBB124_66:                             #   Parent Loop BB124_44 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	%r12d, %esi
	movl	%r12d, %r12d
	imulq	%rax, %r12
	shrq	$45, %r12
	imull	$-10000, %r12d, %r15d           # imm = 0xD8F0
	addl	%esi, %r15d
	imulq	$1374389535, %r15, %r13         # imm = 0x51EB851F
	shrq	$37, %r13
	imull	$100, %r13d, %ebp
	subl	%ebp, %r15d
	movl	%r8d, %ebp
	movq	%rdx, %r11
	subq	%rbp, %r11
	movzwl	(%r9,%r15,2), %ebp
	movw	%bp, -2(%r11)
	movzwl	(%r9,%r13,2), %ebp
	movw	%bp, -4(%r11)
	addl	$4, %r8d
	cmpl	$99999999, %esi                 # imm = 0x5F5E0FF
	ja	.LBB124_66
# %bb.67:                               #   in Loop: Header=BB124_44 Depth=1
	movl	%r8d, %r8d
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	44(%rsp), %ebp                  # 4-byte Reload
	movq	%r10, %r15
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	112(%rsp), %rsi                 # 8-byte Reload
	cmpl	$100, %r12d
	movq	96(%rsp), %r10                  # 8-byte Reload
	jae	.LBB124_74
	jmp	.LBB124_75
.LBB124_68:                             #   in Loop: Header=BB124_44 Depth=1
	xorl	%ebx, %ebx
	jmp	.LBB124_43
.LBB124_69:                             #   in Loop: Header=BB124_44 Depth=1
	xorl	%ebx, %ebx
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	44(%rsp), %ebp                  # 4-byte Reload
	movq	%r10, %r15
	jmp	.LBB124_72
.LBB124_70:                             #   in Loop: Header=BB124_44 Depth=1
	cmpq	%r13, %r14
	je	.LBB124_79
# %bb.71:                               #   in Loop: Header=BB124_44 Depth=1
	addb	$48, %r11b
	movb	%r11b, (%r14)
	incq	%r14
.LBB124_72:                             #   in Loop: Header=BB124_44 Depth=1
	movq	96(%rsp), %r10                  # 8-byte Reload
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	jmp	.LBB124_43
.LBB124_73:                             #   in Loop: Header=BB124_44 Depth=1
	xorl	%r8d, %r8d
	cmpl	$100, %r12d
	movq	96(%rsp), %r10                  # 8-byte Reload
	jb	.LBB124_75
.LBB124_74:                             #   in Loop: Header=BB124_44 Depth=1
	movzwl	%r12w, %edx
	shrl	$2, %edx
	imull	$5243, %edx, %edx               # imm = 0x147B
	shrl	$17, %edx
	imull	$100, %edx, %r11d
	subl	%r11d, %r12d
	movzwl	%r12w, %r11d
	addq	%r14, %rsi
	notq	%r8
	movzwl	(%r9,%r11,2), %r11d
	movw	%r11w, (%r8,%rsi)
	movl	%edx, %r12d
.LBB124_75:                             #   in Loop: Header=BB124_44 Depth=1
	movl	$3518437209, %r11d              # imm = 0xD1B71759
	cmpl	$10, %r12d
	jb	.LBB124_77
# %bb.76:                               #   in Loop: Header=BB124_44 Depth=1
	movl	%r12d, %edx
	leaq	(%rdx,%rdx), %r8
	movl	%r8d, %r8d
	movzbl	1(%r8,%r9), %r8d
	movb	%r8b, 2(%r14)
	movb	$46, 1(%r14)
	movzbl	(%r9,%rdx,2), %r12d
	jmp	.LBB124_78
.LBB124_77:                             #   in Loop: Header=BB124_44 Depth=1
	movb	$46, 1(%r14)
	addb	$48, %r12b
.LBB124_78:                             #   in Loop: Header=BB124_44 Depth=1
	movb	%r12b, (%r14)
	addq	%rax, %r14
	jmp	.LBB124_43
.LBB124_79:
	movl	$132, %ecx
	movq	48(%rsp), %rbx                  # 8-byte Reload
	jmp	.LBB124_138
.LBB124_80:
	movl	$9, %ebx
	jmp	.LBB124_85
.LBB124_81:
	movl	%ebx, %r8d
	movl	$9, %ebx
	movq	56(%rsp), %r13                  # 8-byte Reload
	jmp	.LBB124_85
.LBB124_82:
	incq	%r14
	movq	%r14, %r13
.LBB124_83:
	movl	$808463205, (%r13)              # imm = 0x30302B65
	addq	$4, %r13
	jmp	.LBB124_137
.LBB124_84:
	xorl	%r8d, %r8d
.LBB124_85:
	movl	240(%rsp), %r11d
	movq	72(%rsp), %rdi                  # 8-byte Reload
	movl	%ebp, %r9d
	subl	%r8d, %r9d
	xorl	%eax, %eax
	subl	%r9d, %ebx
	jbe	.LBB124_88
# %bb.86:
	cmpl	$2, %ebx
	movl	$1, %eax
	cmovael	%ebx, %eax
	leal	-1(%rax), %edx
	movl	%eax, %ecx
	andl	$3, %ecx
	cmpl	$3, %edx
	jae	.LBB124_89
# %bb.87:
                                        # implicit-def: $eax
	jmp	.LBB124_92
.LBB124_88:
	movq	48(%rsp), %rbx                  # 8-byte Reload
	jmp	.LBB124_99
.LBB124_89:
	andl	$-4, %eax
	movl	$3518437209, %edx               # imm = 0xD1B71759
	.p2align	4, 0x90
.LBB124_90:                             # =>This Inner Loop Header: Depth=1
	movl	%r12d, %r10d
	movq	%r10, %r12
	imulq	%rdx, %r12
	shrq	$45, %r12
	addl	$-4, %eax
	jne	.LBB124_90
# %bb.91:
	imulq	$274877907, %r10, %rax          # imm = 0x10624DD3
	shrq	$38, %rax
.LBB124_92:
	movq	48(%rsp), %rbx                  # 8-byte Reload
	movl	40(%rsp), %r10d                 # 4-byte Reload
	testl	%ecx, %ecx
	je	.LBB124_95
# %bb.93:
	movl	$3435973837, %edx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB124_94:                             # =>This Inner Loop Header: Depth=1
	movl	%r12d, %eax
	movl	%r12d, %r12d
	imulq	%rdx, %r12
	shrq	$35, %r12
	decl	%ecx
	jne	.LBB124_94
.LBB124_95:
	movl	%eax, %ecx
	movl	$3435973837, %edx               # imm = 0xCCCCCCCD
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	addl	%edx, %edx
	leal	(%rdx,%rdx,4), %ecx
	subl	%ecx, %eax
	cmpl	$5, %eax
	jne	.LBB124_99
# %bb.96:
	subl	%r10d, %ebp
	movq	88(%rsp), %rcx                  # 8-byte Reload
	addl	%ebp, %ecx
	negl	%ecx
	testl	%ecx, %ecx
	jle	.LBB124_143
# %bb.97:
	movl	$1, %esi
	cmpl	$59, %ecx
	ja	.LBB124_100
# %bb.98:
	movq	$-1, %rax
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rax
	notq	%rax
	testq	%rax, %rdi
	sete	%al
	jmp	.LBB124_144
.LBB124_99:
	xorl	%esi, %esi
	cmpl	$6, %eax
	setae	%sil
.LBB124_100:
	testl	%r8d, %r8d
	je	.LBB124_109
# %bb.101:
	movq	%r13, %rax
	subq	%r14, %rax
	movl	%r9d, %r15d
	movl	$132, %ecx
	cmpq	%r15, %rax
	movl	40(%rsp), %edi                  # 4-byte Reload
	jl	.LBB124_138
# %bb.102:
	testl	%r12d, %r12d
	je	.LBB124_117
# %bb.103:
	movl	%r9d, %eax
	decl	%eax
	je	.LBB124_118
# %bb.104:
	movl	%eax, %ecx
	leaq	(%r14,%r15), %rdx
	addq	$-2, %rdx
	xorl	%eax, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r8
	.p2align	4, 0x90
.LBB124_105:                            # =>This Inner Loop Header: Depth=1
	movl	%r12d, %r10d
	movl	%r12d, %r11d
	imulq	$1374389535, %r11, %r12         # imm = 0x51EB851F
	shrq	$37, %r12
	imull	$100, %r12d, %r11d
	subl	%r11d, %r10d
	movzwl	(%r8,%r10,2), %r10d
	movw	%r10w, (%rdx)
	addq	$2, %rax
	addq	$-2, %rdx
	cmpq	%rcx, %rax
	jb	.LBB124_105
# %bb.106:
	cmpl	%r9d, %eax
	jae	.LBB124_108
.LBB124_107:
	movl	%r12d, %ecx
	movl	$3435973837, %edx               # imm = 0xCCCCCCCD
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	addl	%edx, %edx
	leal	(%rdx,%rdx,4), %ecx
	subl	%ecx, %r12d
	orb	$48, %r12b
	notl	%eax
	addl	%eax, %r9d
	movb	%r12b, (%r14,%r9)
.LBB124_108:
	addq	%r15, %r14
	movq	80(%rsp), %r9                   # 8-byte Reload
	testl	%esi, %esi
	jne	.LBB124_125
	jmp	.LBB124_132
.LBB124_109:
	testl	%r11d, %r11d
	movl	40(%rsp), %edi                  # 4-byte Reload
	je	.LBB124_115
# %bb.110:
	movq	%r13, %rdx
	subq	%r14, %rdx
	leal	1(%r9), %eax
	movl	$132, %ecx
	cmpq	%rax, %rdx
	jl	.LBB124_138
# %bb.111:
	xorl	%ecx, %ecx
	cmpl	$10000, %r12d                   # imm = 0x2710
	jb	.LBB124_112
# %bb.119:
	movl	%r9d, %edx
	addq	%r14, %rdx
	incq	%rdx
	movl	$3518437209, %r8d               # imm = 0xD1B71759
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	.p2align	4, 0x90
.LBB124_120:                            # =>This Inner Loop Header: Depth=1
	movl	%r12d, %r11d
	movl	%r12d, %r12d
	imulq	%r8, %r12
	shrq	$45, %r12
	imull	$-10000, %r12d, %edi            # imm = 0xD8F0
	addl	%r11d, %edi
	imulq	$1374389535, %rdi, %rbx         # imm = 0x51EB851F
	shrq	$37, %rbx
	imull	$100, %ebx, %ebp
	subl	%ebp, %edi
	movl	%ecx, %r15d
	movq	%rdx, %r13
	subq	%r15, %r13
	movzwl	(%r10,%rdi,2), %edi
	movw	%di, -2(%r13)
	movzwl	(%r10,%rbx,2), %edi
	movw	%di, -4(%r13)
	addl	$4, %ecx
	cmpl	$99999999, %r11d                # imm = 0x5F5E0FF
	ja	.LBB124_120
# %bb.121:
	movl	%ecx, %ecx
	movq	48(%rsp), %rbx                  # 8-byte Reload
	movq	56(%rsp), %r13                  # 8-byte Reload
	movl	40(%rsp), %edi                  # 4-byte Reload
	cmpl	$100, %r12d
	jae	.LBB124_122
.LBB124_113:
	movq	80(%rsp), %r9                   # 8-byte Reload
	cmpl	$10, %r12d
	jb	.LBB124_123
.LBB124_114:
	movl	%r12d, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r8
	movzbl	1(%rdx,%r8), %edx
	movb	%dl, 2(%r14)
	movb	$46, 1(%r14)
	movzbl	(%r8,%rcx,2), %r12d
	jmp	.LBB124_124
.LBB124_115:
	cmpq	%r13, %r14
	je	.LBB124_142
# %bb.116:
	addb	$48, %r12b
	movb	%r12b, (%r14)
	incq	%r14
	movq	80(%rsp), %r9                   # 8-byte Reload
	testl	%esi, %esi
	jne	.LBB124_125
	jmp	.LBB124_132
.LBB124_117:
	movq	%r14, %rcx
	movb	$48, %dl
	movq	%r15, %r8
	callq	memset
	addq	%r15, %r14
	movq	80(%rsp), %r9                   # 8-byte Reload
	testl	%esi, %esi
	jne	.LBB124_125
	jmp	.LBB124_132
.LBB124_112:
	cmpl	$100, %r12d
	jb	.LBB124_113
.LBB124_122:
	movzwl	%r12w, %edx
	shrl	$2, %edx
	imull	$5243, %edx, %edx               # imm = 0x147B
	shrl	$17, %edx
	imull	$100, %edx, %r8d
	subl	%r8d, %r12d
	movzwl	%r12w, %r8d
	movl	%r9d, %r9d
	addq	%r14, %r9
	notq	%rcx
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %r10
	movzwl	(%r10,%r8,2), %r8d
	movw	%r8w, (%rcx,%r9)
	movl	%edx, %r12d
	movq	80(%rsp), %r9                   # 8-byte Reload
	cmpl	$10, %r12d
	jae	.LBB124_114
.LBB124_123:
	movb	$46, 1(%r14)
	addb	$48, %r12b
.LBB124_124:
	movb	%r12b, (%r14)
	addq	%rax, %r14
	testl	%esi, %esi
	je	.LBB124_132
.LBB124_125:
	cmpq	%r9, %r14
	je	.LBB124_131
# %bb.126:
	movq	%r14, %rax
	jmp	.LBB124_128
	.p2align	4, 0x90
.LBB124_127:                            #   in Loop: Header=BB124_128 Depth=1
	movq	%rcx, %rax
	cmpq	%r9, %rcx
	je	.LBB124_131
.LBB124_128:                            # =>This Inner Loop Header: Depth=1
	leaq	-1(%rax), %rcx
	movzbl	-1(%rax), %edx
	cmpl	$46, %edx
	je	.LBB124_127
# %bb.129:                              #   in Loop: Header=BB124_128 Depth=1
	cmpl	$57, %edx
	jne	.LBB124_139
# %bb.130:                              #   in Loop: Header=BB124_128 Depth=1
	movb	$48, (%rcx)
	movl	$1, %esi
	jmp	.LBB124_127
.LBB124_131:
	movb	$49, (%r9)
	incl	%edi
.LBB124_132:
	movl	%edi, %eax
	negl	%eax
	cmovsl	%edi, %eax
	xorl	%edx, %edx
	cmpl	$100, %eax
	setae	%dl
	orq	$4, %rdx
	movq	%r13, %r8
	subq	%r14, %r8
	movl	$132, %ecx
	cmpq	%rdx, %r8
	jl	.LBB124_138
# %bb.133:
	shrl	$31, %edi
	addb	%dil, %dil
	addb	$43, %dil
	movb	$101, (%r14)
	movb	%dil, 1(%r14)
	cmpl	$100, %eax
	jb	.LBB124_135
# %bb.134:
	movl	%eax, %ecx
	movl	$3435973837, %edx               # imm = 0xCCCCCCCD
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %ecx
	leal	(%rcx,%rcx,4), %ecx
	subl	%ecx, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rcx
	movzwl	(%rcx,%rdx,2), %ecx
	orb	$48, %al
	movb	%al, 4(%r14)
	movl	$5, %r13d
	jmp	.LBB124_136
.LBB124_135:
	movl	%eax, %eax
	leaq	"??$__DIGIT_TABLE@D@std@@3QBDB"(%rip), %rcx
	movzwl	(%rcx,%rax,2), %ecx
	movl	$4, %r13d
.LBB124_136:
	addq	%r14, %r13
	movw	%cx, 2(%r14)
.LBB124_137:
	xorl	%ecx, %ecx
.LBB124_138:
	movq	%r13, (%rbx)
	movl	%ecx, 8(%rbx)
	movq	%rbx, %rax
	addq	$136, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB124_118:
	xorl	%eax, %eax
	cmpl	%r9d, %eax
	jb	.LBB124_107
	jmp	.LBB124_108
.LBB124_139:
	cmpl	$1, %esi
	je	.LBB124_141
# %bb.140:
	movl	%edx, %ecx
	andb	$1, %cl
	je	.LBB124_132
.LBB124_141:
	incb	%dl
	movb	%dl, -1(%rax)
	jmp	.LBB124_132
.LBB124_142:
	movl	$132, %ecx
	jmp	.LBB124_138
.LBB124_143:
	movb	$1, %al
.LBB124_144:
	testl	%ebp, %ebp
	jns	.LBB124_149
# %bb.145:
	testb	%al, %al
	je	.LBB124_149
# %bb.146:
	movl	$-1, %ecx
	movabsq	$-3689348814741910323, %r10     # imm = 0xCCCCCCCCCCCCCCCD
	.p2align	4, 0x90
.LBB124_147:                            # =>This Inner Loop Header: Depth=1
	movq	%rdi, %rax
	mulq	%r10
	shrq	$2, %rdx
	leal	(%rdx,%rdx,4), %eax
	incl	%ecx
	cmpl	%edi, %eax
	movq	%rdx, %rdi
	je	.LBB124_147
# %bb.148:
	negl	%ebp
	movl	$1, %esi
	cmpl	%ebp, %ecx
	jb	.LBB124_100
	jmp	.LBB124_150
.LBB124_149:
	testl	%ebp, %ebp
	setns	%cl
	andb	%al, %cl
	movl	$1, %esi
	cmpb	$1, %cl
	jne	.LBB124_100
.LBB124_150:
	movl	$2, %esi
	jmp	.LBB124_100
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.globl	__xmm@7fffffffffffffff7fffffffffffffff # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.section	.rdata,"dr",discard,__xmm@7fffffffffffffff7fffffffffffffff
	.p2align	4, 0x0
__xmm@7fffffffffffffff7fffffffffffffff:
	.quad	0x7fffffffffffffff              # double NaN
	.quad	0x7fffffffffffffff              # double NaN
	.globl	__real@3ff0000000000000
	.section	.rdata,"dr",discard,__real@3ff0000000000000
	.p2align	3, 0x0
__real@3ff0000000000000:
	.quad	0x3ff0000000000000              # double 1
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin51:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$1768, %rsp                     # imm = 0x6E8
	.seh_stackalloc 1768
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	movaps	%xmm6, 1616(%rbp)               # 16-byte Spill
	.seh_savexmm %xmm6, 1744
	.seh_endprologue
	movq	$-2, 1608(%rbp)
	movq	%r9, %rbx
	movdqa	%xmm2, %xmm6
	movq	%rdx, %r12
	movq	%rcx, %r15
	movq	1744(%rbp), %rax
	movq	%rax, 1312(%rbp)
	movzbl	10(%r9), %eax
	testb	%al, %al
	movl	$2, %r13d
	cmovnel	%eax, %r13d
	movb	%r13b, 1598(%rbp)
	movl	4(%r9), %eax
	movsbl	8(%r9), %ecx
	movl	$3, %edx
	movq	%rdx, 1576(%rbp)                # 8-byte Spill
	movl	$0, 1592(%rbp)                  # 4-byte Folded Spill
	xorl	%esi, %esi
	xorl	%r14d, %r14d
	addl	$-65, %ecx
	cmpl	$38, %ecx
	ja	.LBB125_1
# %bb.2:
	leaq	.LJTI125_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	xorl	%edx, %edx
	jmpq	*%rcx
.LBB125_3:
	movb	$1, %sil
.LBB125_4:
	movl	%esi, %edx
	movl	$4, %ecx
	movq	%rcx, 1576(%rbp)                # 8-byte Spill
	movb	$1, %sil
	movb	$112, %r14b
	jmp	.LBB125_12
.LBB125_7:
	movb	$1, %sil
.LBB125_8:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$2, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
	xorl	%r14d, %r14d
	movl	%ecx, %eax
	xorl	%esi, %esi
	jmp	.LBB125_12
.LBB125_9:
	movb	$1, %sil
.LBB125_10:
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	%esi, %edx
	jmp	.LBB125_11
.LBB125_5:
	movb	$1, %sil
.LBB125_6:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$1, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
.LBB125_11:
	movb	$101, %r14b
	xorl	%esi, %esi
	movl	%ecx, %eax
.LBB125_12:
	movl	%edx, 1600(%rbp)                # 4-byte Spill
	leal	-1074(%rax), %ecx
	cmpl	$1074, %eax                     # imm = 0x432
	movl	$1074, %edx                     # imm = 0x432
	cmovll	%eax, %edx
	movl	%edx, 1568(%rbp)                # 4-byte Spill
	movl	1592(%rbp), %eax                # 4-byte Reload
	cmovgl	%ecx, %eax
	movl	%eax, 1592(%rbp)                # 4-byte Spill
.Ltmp298:
	movdqa	%xmm6, %xmm0
	callq	_dsign
.Ltmp299:
# %bb.13:
	movl	%eax, %edi
	testl	%eax, %eax
	setne	1599(%rbp)
	movq	%xmm6, 1328(%rbp)
.Ltmp300:
	leaq	1328(%rbp), %rcx
	callq	_dtest
.Ltmp301:
# %bb.14:
	movq	%r15, 1320(%rbp)                # 8-byte Spill
	cmpw	$2, %ax
	movq	%r12, 1480(%rbp)                # 8-byte Spill
	jne	.LBB125_16
# %bb.15:
	xorl	%eax, %eax
	testl	%edi, %edi
	setne	%al
	movb	$110, -78(%rbp,%rax)
	movw	$24942, -80(%rbp,%rax)          # imm = 0x616E
	leaq	(%rax,%rbp), %r15
	addq	$-77, %r15
	movq	%r15, 1448(%rbp)
	jmp	.LBB125_48
.LBB125_16:
	leaq	1305(%rbp), %r15
	movl	1568(%rbp), %eax                # 4-byte Reload
	cmpl	$-1, %eax
	je	.LBB125_17
# %bb.47:
	movl	%eax, 40(%rsp)
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1448(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movq	%r15, %r8
	movdqa	%xmm6, %xmm3
	callq	"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	movq	1448(%rbp), %r15
	jmp	.LBB125_48
.LBB125_17:
	movq	%xmm6, %rax
	testq	%rax, %rax
	js	.LBB125_19
# %bb.18:
	xorl	%edx, %edx
	movdqa	%xmm6, %xmm3
	movq	%rax, %rcx
	jmp	.LBB125_20
.LBB125_19:
	movb	$45, -80(%rbp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rax, %rcx
	movq	%rcx, %xmm3
	movl	$1, %edx
.LBB125_20:
	leaq	(%rdx,%rbp), %r12
	addq	$-80, %r12
	movq	%rcx, %r8
	notq	%r8
	movabsq	$9218868437227405312, %r9       # imm = 0x7FF0000000000000
	testq	%r9, %r8
	jne	.LBB125_28
# %bb.21:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %rdx
	je	.LBB125_22
# %bb.23:
	testq	%rax, %rax
	jns	.LBB125_26
# %bb.24:
	movabsq	$2251799813685248, %rax         # imm = 0x8000000000000
	cmpq	%rax, %rdx
	jne	.LBB125_26
# %bb.25:
	movl	$8, %r15d
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	jmp	.LBB125_27
.LBB125_28:
	testb	%sil, %sil
	je	.LBB125_44
# %bb.29:
	movq	%xmm3, %rcx
	testq	%rcx, %rcx
	je	.LBB125_30
# %bb.32:
	movq	%rcx, %r8
	shrq	$52, %r8
	leal	-1023(%r8), %eax
	testq	%r8, %r8
	sete	%r10b
	movl	$-1022, %r8d                    # imm = 0xFC02
	cmovnel	%eax, %r8d
	xorb	$49, %r10b
	movabsq	$4503599627370495, %r9          # imm = 0xFFFFFFFFFFFFF
	movb	%r10b, -80(%rbp,%rdx)
	andq	%rcx, %r9
	je	.LBB125_33
# %bb.34:
	movb	$46, -79(%rbp,%rdx)
	leaq	(%rdx,%rbp), %r12
	addq	$-78, %r12
	shlq	$2, %rdx
	movl	$5532, %r10d                    # imm = 0x159C
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r11
	.p2align	4, 0x90
.LBB125_35:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r10, %rdx
	je	.LBB125_36
# %bb.37:                               #   in Loop: Header=BB125_35 Depth=1
	leal	-108(%r10), %ecx
	movq	%r9, %rsi
	shrq	%cl, %rsi
	movl	%esi, %esi
	movzbl	(%rsi,%r11), %esi
	movb	%sil, (%r12)
	movq	$-1, %rsi
                                        # kill: def $cl killed $cl killed $ecx
	shlq	%cl, %rsi
	notq	%rsi
	addq	$-4, %r10
	incq	%r12
	andq	%rsi, %r9
	jne	.LBB125_35
	jmp	.LBB125_38
.LBB125_1:
	xorl	%edx, %edx
	jmp	.LBB125_12
.LBB125_44:
.Ltmp302:
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1328(%rbp), %rcx
	movq	%r12, %rdx
	movq	%r15, %r8
	callq	"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z"
.Ltmp303:
# %bb.45:
	movq	1328(%rbp), %r15
	movl	1336(%rbp), %ecx
	jmp	.LBB125_46
.LBB125_22:
	movl	$3, %r15d
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	jmp	.LBB125_27
.LBB125_26:
	btq	$51, %rcx
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmovaeq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %r15d
	cmovaeq	%rax, %r15
.LBB125_27:
	movq	%r12, %rcx
	movq	%r15, %r8
	callq	memcpy
	addq	%r15, %r12
.LBB125_31:
	xorl	%ecx, %ecx
	movq	%r12, %r15
.LBB125_46:
	movq	%r15, 1448(%rbp)
	movl	%ecx, 1456(%rbp)
.LBB125_48:
	leaq	-80(%rbp), %rsi
	movl	%r15d, %r12d
	subl	%esi, %r12d
	movq	%rsi, 1464(%rbp)
	movl	%r12d, 1584(%rbp)
	testl	%edi, %edi
	je	.LBB125_50
# %bb.49:
	leaq	-79(%rbp), %rsi
	movq	%rsi, 1464(%rbp)
	movl	1600(%rbp), %eax                # 4-byte Reload
	jmp	.LBB125_52
.LBB125_50:
	cmpb	$2, %r13b
	movl	1600(%rbp), %eax                # 4-byte Reload
	je	.LBB125_52
# %bb.51:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
.LBB125_52:
	testb	%al, %al
	je	.LBB125_57
# %bb.53:
	cmpq	%r15, %rsi
	je	.LBB125_56
# %bb.54:
	movq	%rsi, %rdi
	.p2align	4, 0x90
.LBB125_55:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%rdi), %ecx
	callq	toupper
	movb	%al, (%rdi)
	incq	%rdi
	cmpq	%r15, %rdi
	jne	.LBB125_55
.LBB125_56:
	movzbl	%r14b, %ecx
	callq	toupper
	movl	%eax, %r14d
.LBB125_57:
	movq	%xmm6, 1328(%rbp)
.Ltmp304:
	leaq	1328(%rbp), %rdi
	movq	%rdi, %rcx
	callq	_dtest
.Ltmp305:
# %bb.58:
	movb	$0, 1607(%rbp)
	movq	%r15, 1552(%rbp)
	movq	%r15, 1544(%rbp)
	movq	%r15, 1472(%rbp)
	movl	$0, 1588(%rbp)
	movl	$0, 1564(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, 1488(%rbp)
	movq	$0, 1504(%rbp)
	movq	$15, 1512(%rbp)
	testw	%ax, %ax
	jle	.LBB125_60
# %bb.59:
	xorl	%r8d, %r8d
	jmp	.LBB125_124
.LBB125_60:
	movw	%ax, 1600(%rbp)                 # 2-byte Spill
	movzbl	11(%rbx), %ecx
	movzbl	12(%rbx), %eax
	movl	%ecx, %edx
	orb	%al, %dl
	jne	.LBB125_63
# %bb.61:
	xorl	%edx, %edx
	movq	%r15, %r13
	jmp	.LBB125_62
.LBB125_63:
	movq	%r15, %r9
	movq	%r15, %r13
	cmpq	%r15, %rsi
	jae	.LBB125_75
# %bb.64:
	movl	%r15d, %r9d
	subl	%esi, %r9d
	movq	1552(%rbp), %rdx
	movq	1544(%rbp), %r8
	movq	%rsi, %r11
	notq	%r11
	testb	$1, %r9b
	jne	.LBB125_66
# %bb.65:
	movq	%r15, %r9
	movq	%r15, %r13
	movq	%rsi, %r10
	addq	%r15, %r11
	je	.LBB125_74
	jmp	.LBB125_71
.LBB125_66:
	movzbl	(%rsi), %r9d
	cmpb	$46, %r9b
	jne	.LBB125_68
# %bb.67:
	movq	%rsi, %r8
	movq	%rsi, %r9
	movq	%r15, %r13
	jmp	.LBB125_69
.LBB125_68:
	cmpb	%r14b, %r9b
	cmoveq	%rsi, %rdx
	movq	%r15, %r13
	cmoveq	%rsi, %r13
	movq	%r15, %r9
.LBB125_69:
	leaq	1(%rsi), %r10
	addq	%r15, %r11
	jne	.LBB125_71
.LBB125_74:
	movq	%rdx, 1552(%rbp)
	movq	%r8, 1544(%rbp)
.LBB125_75:
	cmpq	%r9, %r13
	movq	%r9, %rdi
	cmovbq	%r13, %rdi
	movl	$0, 1572(%rbp)                  # 4-byte Folded Spill
	movq	%rdi, 1472(%rbp)
	testb	%cl, %cl
	je	.LBB125_78
# %bb.76:
	cmpq	%r15, %r9
	jne	.LBB125_78
# %bb.77:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
	movb	$1, 1607(%rbp)
	movb	$1, %cl
	movl	%ecx, 1572(%rbp)                # 4-byte Spill
.LBB125_78:
	testb	%al, %al
	je	.LBB125_79
# %bb.85:
	movq	1744(%rbp), %rax
	testq	%rax, %rax
	je	.LBB125_88
# %bb.86:
	movq	8(%rax), %rcx
	movq	%rcx, 1536(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB125_90
.LBB125_79:
	movl	1572(%rbp), %edx                # 4-byte Reload
.LBB125_62:
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI125_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	jmpq	*%rcx
.LBB125_71:
	incq	%r10
	jmp	.LBB125_72
	.p2align	4, 0x90
.LBB125_83:                             #   in Loop: Header=BB125_72 Depth=1
	cmpb	%r14b, %r11b
	cmoveq	%r10, %rdx
	cmoveq	%r10, %r13
.LBB125_84:                             #   in Loop: Header=BB125_72 Depth=1
	leaq	2(%r10), %r11
	incq	%r10
	cmpq	%r15, %r10
	movq	%r11, %r10
	je	.LBB125_74
.LBB125_72:                             # =>This Inner Loop Header: Depth=1
	leaq	-1(%r10), %r11
	movzbl	-1(%r10), %edi
	cmpb	$46, %dil
	jne	.LBB125_80
# %bb.73:                               #   in Loop: Header=BB125_72 Depth=1
	movq	%r11, %r8
	movq	%r11, %r9
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB125_83
	jmp	.LBB125_82
	.p2align	4, 0x90
.LBB125_80:                             #   in Loop: Header=BB125_72 Depth=1
	cmpb	%r14b, %dil
	cmoveq	%r11, %rdx
	cmoveq	%r11, %r13
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB125_83
.LBB125_82:                             #   in Loop: Header=BB125_72 Depth=1
	movq	%r10, %r8
	movq	%r10, %r9
	jmp	.LBB125_84
.LBB125_88:
.Ltmp306:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp307:
# %bb.89:
	movq	%rax, 1536(%rbp)
.LBB125_90:
.Ltmp308:
	leaq	1528(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp309:
# %bb.91:
	movq	(%rax), %r8
.Ltmp310:
	leaq	1328(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp311:
# %bb.92:
	movq	1536(%rbp), %rcx
	movdqu	1328(%rbp), %xmm0
	movups	1344(%rbp), %xmm1
	movdqa	%xmm0, 1488(%rbp)
	movaps	%xmm1, 1504(%rbp)
	movq	$0, 1344(%rbp)
	movq	$15, 1352(%rbp)
	movb	$0, 1328(%rbp)
	testq	%rcx, %rcx
	je	.LBB125_95
# %bb.93:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB125_95
# %bb.94:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB125_95:
	movq	1504(%rbp), %rax
	cmpq	$16, 1512(%rbp)
	jb	.LBB125_96
# %bb.97:
	movq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB125_99
	jmp	.LBB125_102
.LBB125_96:
	leaq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB125_102
.LBB125_99:
	subq	%rsi, %rdi
	movsbq	(%rcx), %r8
	cmpq	%r8, %rdi
	jbe	.LBB125_102
# %bb.100:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r9
	.p2align	4, 0x90
.LBB125_101:                            # =>This Inner Loop Header: Depth=1
	subq	%r8, %rdi
	incq	%r9
	incl	%edx
	cmpq	%rax, %r9
	cmovneq	%r9, %rcx
	movsbq	(%rcx), %r8
	movq	%rcx, %r9
	cmpq	%r8, %rdi
	ja	.LBB125_101
.LBB125_102:
	movl	%edx, 1564(%rbp)
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI125_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	movl	1572(%rbp), %edx                # 4-byte Reload
	jmpq	*%rcx
.LBB125_107:
	cmpl	$0, 1592(%rbp)                  # 4-byte Folded Reload
	je	.LBB125_110
# %bb.108:
	decq	%r13
	.p2align	4, 0x90
.LBB125_109:                            # =>This Inner Loop Header: Depth=1
	movq	%r13, 1552(%rbp)
	leaq	-1(%r13), %rax
	cmpb	%r14b, (%r13)
	movq	%rax, %r13
	jne	.LBB125_109
.LBB125_110:
	movl	1592(%rbp), %r8d                # 4-byte Reload
	movl	%r8d, 1588(%rbp)
.LBB125_114:
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
.LBB125_124:
	testw	%ax, %ax
	setle	%al
	addl	%r8d, %r12d
	movl	%r12d, 1584(%rbp)
	cmpb	$0, 13(%rbx)
	setne	%dl
	cmpb	$0, 9(%rbx)
	sete	%cl
	andb	%dl, %cl
	leaq	1598(%rbp), %rdx
	movq	%rdx, 1328(%rbp)
	leaq	1599(%rbp), %rdx
	movq	%rdx, 1336(%rbp)
	leaq	1528(%rbp), %rdx
	movq	%rdx, 1344(%rbp)
	leaq	1584(%rbp), %rdx
	movq	%rdx, 1352(%rbp)
	movq	%rbx, 1360(%rbp)
	leaq	1312(%rbp), %rdx
	movq	%rdx, 1368(%rbp)
	leaq	1464(%rbp), %rdx
	movq	%rdx, 1376(%rbp)
	leaq	1472(%rbp), %rdx
	movq	%rdx, 1384(%rbp)
	leaq	1488(%rbp), %rdx
	movq	%rdx, 1392(%rbp)
	leaq	1564(%rbp), %rdx
	movq	%rdx, 1400(%rbp)
	leaq	1544(%rbp), %rdx
	movq	%rdx, 1408(%rbp)
	leaq	1448(%rbp), %rdx
	movq	%rdx, 1416(%rbp)
	leaq	1607(%rbp), %rdx
	movq	%rdx, 1424(%rbp)
	leaq	1552(%rbp), %rdx
	movq	%rdx, 1432(%rbp)
	leaq	1588(%rbp), %rdx
	movq	%rdx, 1440(%rbp)
	andb	%al, %cl
	movb	%cl, 1528(%rbp)
	movq	1320(%rbp), %rsi                # 8-byte Reload
	je	.LBB125_126
# %bb.125:
.Ltmp314:
	leaq	1328(%rbp), %rcx
	movq	%rsi, %rdx
	movq	1480(%rbp), %r8                 # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp315:
	jmp	.LBB125_127
.LBB125_126:
.Ltmp312:
	movq	%rdi, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	1480(%rbp), %rdx                # 8-byte Reload
	movl	%r12d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z"
.Ltmp313:
.LBB125_127:
	movq	1512(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB125_135
# %bb.128:
	movq	1488(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB125_134
# %bb.129:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB125_130
# %bb.133:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB125_134:
	callq	"??3@YAXPEAX_K@Z"
.LBB125_135:
	movq	%rsi, %rax
	movaps	1616(%rbp), %xmm6               # 16-byte Reload
	addq	$1768, %rsp                     # imm = 0x6E8
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB125_111:
	cmpb	$0, 11(%rbx)
	je	.LBB125_112
# %bb.113:
	movl	%esi, %eax
	subl	%r13d, %eax
	xorb	$1, %dl
	movzbl	%dl, %ecx
	movl	1592(%rbp), %r8d                # 4-byte Reload
	addl	1568(%rbp), %r8d                # 4-byte Folded Reload
	addl	%eax, %r8d
	addl	%ecx, %r8d
	movl	%r8d, 1588(%rbp)
	cmpq	%r15, %r13
	jne	.LBB125_114
# %bb.115:
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm6
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
	jne	.LBB125_116
	jnp	.LBB125_124
.LBB125_116:
	andpd	__xmm@7fffffffffffffff7fffffffffffffff(%rip), %xmm6
	movsd	__real@3ff0000000000000(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	%xmm6, %xmm0
	jbe	.LBB125_124
# %bb.117:
	cmpq	%r15, %rsi
	jae	.LBB125_124
# %bb.118:
	subq	%rsi, %r15
	movl	1588(%rbp), %r9d
	xorl	%ecx, %ecx
	jmp	.LBB125_119
.LBB125_121:                            #   in Loop: Header=BB125_119 Depth=1
	incl	%r8d
	movl	%r8d, %r9d
.LBB125_122:                            #   in Loop: Header=BB125_119 Depth=1
	incq	%rcx
	cmpq	%rcx, %r15
	je	.LBB125_123
.LBB125_119:                            # =>This Inner Loop Header: Depth=1
	movzbl	(%rsi,%rcx), %edx
	cmpl	$46, %edx
	je	.LBB125_122
# %bb.120:                              #   in Loop: Header=BB125_119 Depth=1
	cmpl	$48, %edx
	je	.LBB125_121
.LBB125_123:
	movl	%r9d, 1588(%rbp)
	jmp	.LBB125_124
.LBB125_112:
	xorl	%r8d, %r8d
	jmp	.LBB125_114
.LBB125_30:
	movl	$808153136, (%r12)              # imm = 0x302B7030
	addq	$4, %r12
	jmp	.LBB125_31
.LBB125_33:
	leaq	(%rdx,%rbp), %r12
	addq	$-79, %r12
.LBB125_38:
	movq	%r15, %rdx
	subq	%r12, %rdx
	movl	$132, %ecx
	cmpq	$2, %rdx
	jl	.LBB125_46
# %bb.39:
	movl	%r8d, %ecx
	negl	%ecx
	movl	%r8d, %edx
	shrl	$31, %edx
	addb	%dl, %dl
	addb	$43, %dl
	testl	%r8d, %r8d
	cmovsl	%ecx, %eax
	movb	$112, (%r12)
	movb	%dl, 1(%r12)
	xorl	%esi, %esi
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB125_40:                             # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r8d
	leal	(%r8,%r8,4), %r8d
	movl	%eax, %r9d
	subl	%r8d, %r9d
	orb	$48, %r9b
	movb	%r9b, 1359(%rbp,%rsi)
	decq	%rsi
	cmpl	$9, %eax
	movl	%edx, %eax
	ja	.LBB125_40
# %bb.41:
	addq	$2, %r12
	movq	%rsi, %r8
	negq	%r8
	movq	%r15, %rax
	subq	%r12, %rax
	movl	$132, %ecx
	cmpq	%r8, %rax
	jl	.LBB125_46
# %bb.42:
	leaq	(%rsi,%rbp), %rdx
	addq	$1360, %rdx                     # imm = 0x550
	movq	%r12, %rcx
	callq	memcpy
	subq	%rsi, %r12
	jmp	.LBB125_31
.LBB125_36:
	movl	$132, %ecx
	jmp	.LBB125_46
.LBB125_130:
.Ltmp316:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp317:
# %bb.131:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_43:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_87:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_103:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	movq	1536(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB125_106
# %bb.104:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB125_106
# %bb.105:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB125_106:
	movapd	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_132:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movapd	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_136:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movapd	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	leaq	1488(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	movaps	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_137:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_138:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB125_139:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end51:
	.p2align	2, 0x90
.LJTI125_0:
	.long	.LBB125_3-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_5-.LJTI125_0
	.long	.LBB125_7-.LJTI125_0
	.long	.LBB125_9-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_4-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_12-.LJTI125_0
	.long	.LBB125_6-.LJTI125_0
	.long	.LBB125_8-.LJTI125_0
	.long	.LBB125_10-.LJTI125_0
.LJTI125_1:
	.long	.LBB125_107-.LJTI125_1
	.long	.LBB125_110-.LJTI125_1
	.long	.LBB125_111-.LJTI125_1
	.long	.LBB125_107-.LJTI125_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	8                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	14                              # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	1736                            # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	6                               # ToState
	.long	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin51@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp298@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp300@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp302@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp303@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp304@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp305@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp306@IMGREL+1               # IP
	.long	4                               # ToState
	.long	.Ltmp308@IMGREL+1               # IP
	.long	7                               # ToState
	.long	.Ltmp311@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp314@IMGREL+1               # IP
	.long	6                               # ToState
	.long	.Ltmp313@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp316@IMGREL+1               # IP
	.long	5                               # ToState
	.long	.Ltmp317@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@NAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin52:
.seh_proc "??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	cmpb	$0, (%rax)
	je	.LBB126_4
# %bb.1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB126_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB126_12:
	movq	16(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB126_19
# %bb.13:
	movq	24(%rbx), %rcx
	movq	32(%rbx), %rax
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB126_19
# %bb.14:
	jle	.LBB126_19
# %bb.15:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB126_16
	.p2align	4, 0x90
.LBB126_18:                             #   in Loop: Header=BB126_16 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB126_19
.LBB126_16:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_18
# %bb.17:                               #   in Loop: Header=BB126_16 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB126_18
.LBB126_19:
	movq	32(%rbx), %rax
	cmpb	$0, 12(%rax)
	je	.LBB126_38
# %bb.20:
	movq	40(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB126_23
# %bb.21:
	movq	8(%rax), %rcx
	movq	%rcx, -16(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB126_25
.LBB126_4:
	movq	(%rbx), %rax
	movzbl	(%rax), %eax
	cmpl	$3, %eax
	je	.LBB126_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB126_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB126_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	jmp	.LBB126_12
.LBB126_23:
.Ltmp318:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp319:
# %bb.24:
	movq	%rax, -16(%rbp)
.LBB126_25:
.Ltmp320:
	leaq	-24(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp321:
# %bb.26:
	movq	%rax, %r14
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB126_29
# %bb.27:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB126_29
# %bb.28:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB126_29:
	movq	72(%rbx), %rax
	movl	(%rax), %r15d
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*32(%rax)
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB126_31
# %bb.30:
	movq	(%rdx), %rdx
.LBB126_31:
	movq	%rdx, -40(%rbp)
	movq	%rcx, -32(%rbp)
	movq	48(%rbx), %rcx
	movq	56(%rbx), %rdx
	movq	(%rdx), %r8
	movq	(%rcx), %rdx
	movq	%rdi, 48(%rsp)
	movl	%r15d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-24(%rbp), %rcx
	leaq	-40(%rbp), %r9
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
	movq	-24(%rbp), %rdi
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	jne	.LBB126_33
# %bb.32:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB126_36
.LBB126_33:
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*24(%rax)
	movl	%eax, %r14d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_35
# %bb.34:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB126_35:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r14b, (%rcx,%rax)
	movq	96(%rbx), %rax
	movb	$0, (%rax)
.LBB126_36:
	movq	48(%rbx), %rax
	movq	56(%rbx), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	je	.LBB126_38
# %bb.37:
	movq	48(%rbx), %rax
	incq	(%rax)
.LBB126_38:
	movq	48(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rcx), %r14
	movq	(%rax), %r15
	jmp	.LBB126_39
	.p2align	4, 0x90
.LBB126_42:                             #   in Loop: Header=BB126_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r12b, (%rcx,%rax)
	incq	%r15
.LBB126_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %r15
	je	.LBB126_43
# %bb.40:                               #   in Loop: Header=BB126_39 Depth=1
	movzbl	(%r15), %r12d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_42
# %bb.41:                               #   in Loop: Header=BB126_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB126_42
.LBB126_43:
	movq	32(%rbx), %rax
	cmpb	$0, 11(%rax)
	je	.LBB126_48
# %bb.44:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB126_48
# %bb.45:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_47
# %bb.46:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB126_47:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$46, (%rcx,%rax)
.LBB126_48:
	movq	112(%rbx), %rax
	cmpl	$0, (%rax)
	jg	.LBB126_49
.LBB126_52:
	movq	88(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rax), %rbx
	movq	(%rcx), %r14
	jmp	.LBB126_53
	.p2align	4, 0x90
.LBB126_56:                             #   in Loop: Header=BB126_53 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%r14
.LBB126_53:                             # =>This Inner Loop Header: Depth=1
	cmpq	%rbx, %r14
	je	.LBB126_57
# %bb.54:                               #   in Loop: Header=BB126_53 Depth=1
	movzbl	(%r14), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_56
# %bb.55:                               #   in Loop: Header=BB126_53 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB126_56
	.p2align	4, 0x90
.LBB126_51:                             #   in Loop: Header=BB126_49 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	movq	112(%rbx), %rax
	movl	(%rax), %ecx
	leal	-1(%rcx), %edx
	movl	%edx, (%rax)
	cmpl	$1, %ecx
	jle	.LBB126_52
.LBB126_49:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_51
# %bb.50:                               #   in Loop: Header=BB126_49 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB126_51
.LBB126_57:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	addq	$96, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB126_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB126_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB126_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	jmp	.LBB126_12
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB126_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB126_58:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB126_61
# %bb.59:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB126_61
# %bb.60:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB126_61:
	nop
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end52:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin52@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp318@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp320@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp321@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@2@YA?AV12@V12@NAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@01@YA?AV21@0N1V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB127_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB127_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB127_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB127_5
# %bb.4:
	movl	%eax, %r15d
.LBB127_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB127_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@N@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@NAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB127_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB127_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB127_19
	.p2align	4, 0x90
.LBB127_23:                             #   in Loop: Header=BB127_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB127_24
.LBB127_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB127_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB127_20
	.p2align	4, 0x90
.LBB127_22:                             #   in Loop: Header=BB127_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB127_23
.LBB127_20:                             #   Parent Loop BB127_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB127_22
# %bb.21:                               #   in Loop: Header=BB127_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB127_22
.LBB127_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB127_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB127_7
.LBB127_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB127_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB127_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB127_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB127_16
	.p2align	4, 0x90
.LBB127_14:                             #   in Loop: Header=BB127_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB127_15
.LBB127_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB127_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB127_11
	.p2align	4, 0x90
.LBB127_13:                             #   in Loop: Header=BB127_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB127_14
.LBB127_11:                             #   Parent Loop BB127_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB127_13
# %bb.12:                               #   in Loop: Header=BB127_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB127_13
.LBB127_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB127_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.globl	"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z" # -- Begin function ??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z
	.p2align	4, 0x90
"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z": # @"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
.Lfunc_begin53:
.seh_proc "??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	64(%rsp), %rbp
	.seh_setframe %rbp, 64
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	%xmm3, %rax
	testq	%rax, %rax
	js	.LBB128_2
# %bb.1:
	movq	%rax, %rcx
	jmp	.LBB128_5
.LBB128_2:
	cmpq	%r8, %rdi
	je	.LBB128_3
# %bb.4:
	movb	$45, (%rdi)
	incq	%rdi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rax, %rcx
	movq	%rcx, %xmm3
.LBB128_5:
	movq	%rcx, %rdx
	notq	%rdx
	movabsq	$9218868437227405312, %r9       # imm = 0x7FF0000000000000
	testq	%r9, %rdx
	jne	.LBB128_15
# %bb.6:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %rdx
	je	.LBB128_7
# %bb.8:
	testq	%rax, %rax
	jns	.LBB128_11
# %bb.9:
	movabsq	$2251799813685248, %rax         # imm = 0x8000000000000
	cmpq	%rax, %rdx
	jne	.LBB128_11
# %bb.10:
	movl	$8, %ebx
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jge	.LBB128_14
	jmp	.LBB128_13
.LBB128_15:
	movl	88(%rbp), %eax
	movl	80(%rbp), %ecx
	cmpl	$3, %ecx
	je	.LBB128_29
# %bb.16:
	cmpl	$2, %ecx
	je	.LBB128_23
# %bb.17:
	cmpl	$1, %ecx
	jne	.LBB128_30
# %bb.18:
	testl	%eax, %eax
	js	.LBB128_19
# %bb.20:
	cmpl	$1000000000, %eax               # imm = 0x3B9ACA00
	jae	.LBB128_13
	jmp	.LBB128_21
.LBB128_7:
	movl	$3, %ebx
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jge	.LBB128_14
	jmp	.LBB128_13
.LBB128_3:
	movq	%rdi, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB128_31
.LBB128_11:
	btq	$51, %rcx
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmovaeq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %ebx
	cmovaeq	%rax, %rbx
	movq	%r8, %rax
	subq	%rdi, %rax
	cmpq	%rbx, %rax
	jl	.LBB128_13
.LBB128_14:
	movq	%rdi, %rcx
	movq	%rbx, %r8
	callq	memcpy
	addq	%rbx, %rdi
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB128_31
.LBB128_29:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	jmp	.LBB128_31
.LBB128_23:
	testl	%eax, %eax
	js	.LBB128_24
# %bb.25:
	cmpl	$1000000000, %eax               # imm = 0x3B9ACA00
	jb	.LBB128_26
.LBB128_13:
	movq	%r8, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB128_31
.LBB128_30:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	jmp	.LBB128_31
.LBB128_19:
	movl	$6, %eax
.LBB128_21:
.Ltmp324:
	movl	%eax, 32(%rsp)
	movq	%rsi, %rcx
	movq	%rdi, %rdx
	callq	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
.Ltmp325:
	jmp	.LBB128_31
.LBB128_24:
	movl	$6, %eax
.LBB128_26:
.Ltmp322:
	movl	%eax, 32(%rsp)
	leaq	-16(%rbp), %rcx
	movq	%rdi, %rdx
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
.Ltmp323:
# %bb.27:
	movq	-16(%rbp), %rax
	movq	%rax, (%rsi)
	movl	-8(%rbp), %eax
	movl	%eax, 8(%rsi)
.LBB128_31:
	movq	%rsi, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_endproc
	.def	"?dtor$22@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA":
.seh_proc "?dtor$22@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"
.LBB128_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	64(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_endproc
	.def	"?dtor$28@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$28@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA":
.seh_proc "?dtor$28@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"
.LBB128_28:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	64(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end53:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z")@IMGREL # IPToStateXData
	.long	64                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	-1                              # ToState
	.long	"?dtor$22@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$28@?0???$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z@4HA"@IMGREL # Action
"$ip2state$??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z":
	.long	.Lfunc_begin53@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp324@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp322@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp323@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
                                        # -- End function
	.def	"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.globl	"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z" # -- Begin function ??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z
	.p2align	4, 0x90
"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z": # @"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
.Lfunc_begin54:
.seh_proc "??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$856, %rsp                      # imm = 0x358
	.seh_stackalloc 856
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	.seh_endprologue
	movq	$-2, 720(%rbp)
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	%xmm3, %rcx
	testq	%rcx, %rcx
	je	.LBB129_1
# %bb.4:
	movl	832(%rbp), %eax
	testl	%eax, %eax
	js	.LBB129_5
# %bb.6:
	je	.LBB129_7
# %bb.8:
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"+2512(%rip), %rdx
	cmpl	$999999, %eax                   # imm = 0xF423F
	ja	.LBB129_9
# %bb.10:
	cmpl	$15, %eax
	jbe	.LBB129_11
# %bb.14:
	cmpl	$309, %eax                      # imm = 0x135
	ja	.LBB129_16
# %bb.15:
	movl	%eax, %edx
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"(%rip), %r8
	leaq	(%r8,%rdx,8), %rdx
	addq	$40, %rdx
	cmpl	$156, %eax
	jb	.LBB129_12
	jmp	.LBB129_16
.LBB129_1:
	cmpq	%rbx, %rdi
	je	.LBB129_2
# %bb.3:
	movb	$48, (%rdi)
	incq	%rdi
	movq	%rdi, (%rsi)
	movl	$0, 8(%rsi)
	jmp	.LBB129_40
.LBB129_5:
	movl	$6, %eax
	jmp	.LBB129_11
.LBB129_7:
	movl	$1, %eax
.LBB129_11:
	leal	-1(%rax), %edx
	leal	10(%rax), %r8d
	imull	%edx, %r8d
	shrl	%r8d
	andl	$32767, %r8d                    # imm = 0x7FFF
	leaq	"?_Special_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"(%rip), %rdx
	leaq	(%rdx,%r8,8), %r8
	movl	%eax, %edx
	leaq	(%r8,%rdx,8), %rdx
	addq	$40, %rdx
.LBB129_12:
	cmpq	%rdx, %r8
	je	.LBB129_13
# %bb.20:
	movq	%r8, %r9
	.p2align	4, 0x90
.LBB129_21:                             # =>This Inner Loop Header: Depth=1
	cmpq	%rcx, (%r9)
	jae	.LBB129_22
# %bb.23:                               #   in Loop: Header=BB129_21 Depth=1
	addq	$8, %r9
	cmpq	%rdx, %r9
	jne	.LBB129_21
	jmp	.LBB129_24
.LBB129_13:
	movq	%rdx, %r8
	jmp	.LBB129_24
.LBB129_22:
	movq	%r9, %rdx
	jmp	.LBB129_24
.LBB129_2:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB129_40
.LBB129_9:
	movl	$1000000, %eax                  # imm = 0xF4240
.LBB129_16:
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"(%rip), %r8
	subq	%r8, %rdx
	testq	%rdx, %rdx
	jle	.LBB129_17
# %bb.18:
	shrq	$3, %rdx
	leaq	"?_Ordinary_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"(%rip), %r8
	movq	%rdx, %r9
	movq	%r8, %rdx
	.p2align	4, 0x90
.LBB129_19:                             # =>This Inner Loop Header: Depth=1
	movq	%rdx, %r10
	movq	%r9, %r11
	shrq	%r11
	movq	%r11, %r14
	notq	%r14
	addq	%r9, %r14
	cmpq	%rcx, (%rdx,%r11,8)
	leaq	8(%rdx,%r11,8), %rdx
	cmovaeq	%r10, %rdx
	cmovaeq	%r11, %r14
	movq	%r14, %r9
	testq	%r14, %r14
	jg	.LBB129_19
	jmp	.LBB129_24
.LBB129_17:
	movq	%r8, %rdx
.LBB129_24:
	subq	%r8, %rdx
	shrq	$3, %rdx
	leal	-5(%rdx), %ecx
	cmpl	%ecx, %eax
	setg	%r8b
	cmpl	$-4, %ecx
	setge	%r13b
	andb	%r8b, %r13b
	leaq	693(%rbp), %r8
	cmpb	$1, %r13b
	jne	.LBB129_28
# %bb.25:
	subl	%edx, %eax
	addl	$4, %eax
	cmpl	$66, %eax
	movl	$66, %r15d
	cmovll	%eax, %r15d
	testl	%r15d, %r15d
	movl	$6, %eax
	cmovnsl	%r15d, %eax
.Ltmp328:
	movl	%eax, 32(%rsp)
	leaq	704(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	callq	"??$__d2fixed_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@PEADQEADNI@Z"
.Ltmp329:
# %bb.26:
	movq	704(%rbp), %r12
	xorl	%ecx, %ecx
	xorl	%r14d, %r14d
	testl	%r15d, %r15d
	jg	.LBB129_31
	jmp	.LBB129_34
.LBB129_28:
	cmpl	$767, %eax                      # imm = 0x2FF
	movl	$767, %ecx                      # imm = 0x2FF
	cmovll	%eax, %ecx
	leal	-1(%rcx), %r15d
	testl	%ecx, %ecx
	movl	$6, %eax
	cmovgl	%r15d, %eax
.Ltmp326:
	movl	%eax, 32(%rsp)
	leaq	704(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	callq	"?__d2exp_buffered_n@std@@YA?AUto_chars_result@1@PEADQEADNI@Z"
.Ltmp327:
# %bb.29:
	movq	704(%rbp), %rdx
	leaq	-80(%rbp), %rcx
	movb	$101, %r8b
	callq	__std_find_trivial_1
	movq	%rax, %r12
	movq	704(%rbp), %r14
	movq	%rax, %rcx
	testl	%r15d, %r15d
	jle	.LBB129_34
	.p2align	4, 0x90
.LBB129_31:                             # =>This Inner Loop Header: Depth=1
	movzbl	-1(%r12), %eax
	decq	%r12
	cmpl	$48, %eax
	je	.LBB129_31
# %bb.32:
	cmpl	$46, %eax
	je	.LBB129_34
# %bb.33:
	incq	%r12
.LBB129_34:
	leaq	-80(%rbp), %rax
	subq	%rax, %r12
	movq	%rbx, %rax
	subq	%rdi, %rax
	movl	$132, %r15d
	cmpq	%r12, %rax
	jl	.LBB129_39
# %bb.35:
	movq	%rbx, 696(%rbp)                 # 8-byte Spill
	movq	%rcx, %rbx
	leaq	-80(%rbp), %rdx
	movq	%rdi, %rcx
	movq	%r12, %r8
	callq	memcpy
	addq	%r12, %rdi
	testb	%r13b, %r13b
	jne	.LBB129_38
# %bb.36:
	movq	%rbx, %rdx
	subq	%rbx, %r14
	movq	696(%rbp), %rbx                 # 8-byte Reload
	movq	%rbx, %rax
	subq	%rdi, %rax
	cmpq	%r14, %rax
	jl	.LBB129_39
# %bb.37:
	movq	%rdi, %rcx
	movq	%r14, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB129_38:
	movq	%rdi, %rbx
	xorl	%r15d, %r15d
.LBB129_39:
	movq	%rbx, (%rsi)
	movl	%r15d, 8(%rsi)
.LBB129_40:
	movq	%rsi, %rax
	addq	$856, %rsp                      # imm = 0x358
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.seh_endproc
	.def	"?dtor$27@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$27@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA":
.seh_proc "?dtor$27@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA"
.LBB129_27:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.seh_endproc
	.def	"?dtor$41@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$41@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA":
.seh_proc "?dtor$41@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA"
.LBB129_41:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	128(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end54:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z")@IMGREL # IPToStateXData
	.long	848                             # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z":
	.long	-1                              # ToState
	.long	"?dtor$41@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$27@?0???$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z@4HA"@IMGREL # Action
"$ip2state$??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z":
	.long	.Lfunc_begin54@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp328@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp326@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp327@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Floating_to_chars_general_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
                                        # -- End function
	.def	"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
	.globl	"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z" # -- Begin function ??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z
	.p2align	4, 0x90
"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z": # @"??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
.seh_proc "??$_Floating_to_chars_hex_precision@N@std@@YA?AUto_chars_result@0@PEADQEADNH@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	.seh_endprologue
	movq	%r8, %rbx
	movq	%rdx, %rdi
	movl	160(%rsp), %edx
	testl	%edx, %edx
	movl	$13, %eax
	cmovnsl	%edx, %eax
	movq	%rcx, %rsi
	movq	%xmm3, %rcx
	movabsq	$4503599627370495, %r8          # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %r8
	shrq	$52, %rcx
	movabsq	$4503599627370496, %rdx         # imm = 0x10000000000000
	orq	%r8, %rdx
	xorl	%r9d, %r9d
	testq	%r8, %r8
	movl	$-1022, %r15d                   # imm = 0xFC02
	cmovel	%r9d, %r15d
	leal	-1023(%rcx), %r9d
	testq	%rcx, %rcx
	cmovnel	%r9d, %r15d
	cmoveq	%r8, %rdx
	movl	%r15d, %ebp
	negl	%ebp
	cmovsl	%r15d, %ebp
	movl	$1, %ecx
	cmpl	$10, %ebp
	jb	.LBB130_3
# %bb.1:
	movl	$2, %ecx
	cmpl	$100, %ebp
	jb	.LBB130_3
# %bb.2:
	cmpl	$1000, %ebp                     # imm = 0x3E8
	movl	$4, %ecx
	sbbq	$0, %rcx
.LBB130_3:
	movq	%rbx, %r8
	subq	%rdi, %r8
	movl	%eax, %r9d
	subq	%r9, %r8
	jl	.LBB130_4
# %bb.5:
	cmpl	$1, %eax
	sbbq	$0, %rcx
	addq	$4, %rcx
	cmpq	%rcx, %r8
	jge	.LBB130_6
.LBB130_4:
	movq	%rbx, (%rsi)
	movl	$132, 8(%rsi)
	jmp	.LBB130_39
.LBB130_6:
	shrl	$31, %r15d
	addb	%r15b, %r15b
	addb	$43, %r15b
	cmpl	$12, %eax
	ja	.LBB130_33
# %bb.7:
	leal	(,%rax,4), %r8d
	leaq	(%rdx,%rdx), %r9
	leaq	(%rdx,%rdx), %r10
	decq	%r10
	orq	%rdx, %r10
	movb	$52, %cl
	subb	%r8b, %cl
	movl	$1, %r8d
	shlq	%cl, %r8
	andq	%r9, %r10
	andq	%r10, %r8
	addq	%rdx, %r8
	movq	%r8, %rcx
	shrq	$52, %rcx
	orb	$48, %cl
	movb	%cl, (%rdi)
	testl	%eax, %eax
	je	.LBB130_8
# %bb.9:
	movb	$46, 1(%rdi)
	movq	%r8, %rdx
	shrq	$48, %rdx
	andl	$15, %edx
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 2(%rdi)
	cmpl	$1, %eax
	jne	.LBB130_11
# %bb.10:
	addq	$3, %rdi
	jmp	.LBB130_34
.LBB130_33:
	movq	%rdx, %rcx
	shrq	$52, %rcx
	orb	$48, %cl
	movb	%cl, (%rdi)
	movb	$46, 1(%rdi)
	movq	%rdx, %r8
	shrq	$48, %r8
	andl	$15, %r8d
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %rcx
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 2(%rdi)
	movq	%rdx, %r8
	shrq	$44, %r8
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 3(%rdi)
	movq	%rdx, %r8
	shrq	$40, %r8
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 4(%rdi)
	movq	%rdx, %r8
	shrq	$36, %r8
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 5(%rdi)
	movq	%rdx, %r8
	shrq	$32, %r8
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 6(%rdi)
	movl	%edx, %r8d
	shrl	$28, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 7(%rdi)
	movl	%edx, %r8d
	shrl	$24, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 8(%rdi)
	movl	%edx, %r8d
	shrl	$20, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 9(%rdi)
	movl	%edx, %r8d
	shrl	$16, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 10(%rdi)
	movl	%edx, %r8d
	shrl	$12, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 11(%rdi)
	movl	%edx, %r8d
	shrl	$8, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 12(%rdi)
	movl	%edx, %r8d
	shrl	$4, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %r8d
	movb	%r8b, 13(%rdi)
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %ecx
	movb	%cl, 14(%rdi)
	addq	$15, %rdi
	addl	$-13, %eax
	je	.LBB130_34
# %bb.13:
	movl	%eax, %r14d
	movq	%rdi, %rcx
	movb	$48, %dl
	movq	%r14, %r8
	callq	memset
	addq	%r14, %rdi
	jmp	.LBB130_34
.LBB130_8:
	incq	%rdi
	jmp	.LBB130_34
.LBB130_11:
	movq	%r8, %rdx
	shrq	$44, %rdx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 3(%rdi)
	cmpl	$2, %eax
	jne	.LBB130_14
# %bb.12:
	addq	$4, %rdi
	jmp	.LBB130_34
.LBB130_14:
	movq	%r8, %rdx
	shrq	$40, %rdx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 4(%rdi)
	cmpl	$3, %eax
	jne	.LBB130_16
# %bb.15:
	addq	$5, %rdi
	jmp	.LBB130_34
.LBB130_16:
	movq	%r8, %rdx
	shrq	$36, %rdx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 5(%rdi)
	cmpl	$4, %eax
	jne	.LBB130_18
# %bb.17:
	addq	$6, %rdi
	jmp	.LBB130_34
.LBB130_18:
	movq	%r8, %rdx
	shrq	$32, %rdx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 6(%rdi)
	cmpl	$5, %eax
	jne	.LBB130_20
# %bb.19:
	addq	$7, %rdi
	jmp	.LBB130_34
.LBB130_20:
	movl	%r8d, %edx
	shrl	$28, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 7(%rdi)
	cmpl	$6, %eax
	jne	.LBB130_22
# %bb.21:
	addq	$8, %rdi
	jmp	.LBB130_34
.LBB130_22:
	movl	%r8d, %edx
	shrl	$24, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 8(%rdi)
	cmpl	$7, %eax
	jne	.LBB130_24
# %bb.23:
	addq	$9, %rdi
	jmp	.LBB130_34
.LBB130_24:
	movl	%r8d, %edx
	shrl	$20, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 9(%rdi)
	cmpl	$8, %eax
	jne	.LBB130_26
# %bb.25:
	addq	$10, %rdi
	jmp	.LBB130_34
.LBB130_26:
	movl	%r8d, %edx
	shrl	$16, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 10(%rdi)
	cmpl	$9, %eax
	jne	.LBB130_28
# %bb.27:
	addq	$11, %rdi
	jmp	.LBB130_34
.LBB130_28:
	movl	%r8d, %edx
	shrl	$12, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 11(%rdi)
	cmpl	$10, %eax
	jne	.LBB130_30
# %bb.29:
	addq	$12, %rdi
	jmp	.LBB130_34
.LBB130_30:
	movl	%r8d, %edx
	shrl	$8, %edx
	andl	$15, %edx
	movzbl	(%rdx,%rcx), %edx
	movb	%dl, 12(%rdi)
	cmpl	$11, %eax
	jne	.LBB130_32
# %bb.31:
	addq	$13, %rdi
	jmp	.LBB130_34
.LBB130_32:
	shrl	$4, %r8d
	andl	$15, %r8d
	movzbl	(%r8,%rcx), %eax
	movb	%al, 13(%rdi)
	addq	$14, %rdi
.LBB130_34:
	movb	$112, (%rdi)
	movb	%r15b, 1(%rdi)
	xorl	%r14d, %r14d
	movl	$3435973837, %eax               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB130_35:                             # =>This Inner Loop Header: Depth=1
	movl	%ebp, %ecx
	imulq	%rax, %rcx
	shrq	$35, %rcx
	leal	(%rcx,%rcx), %edx
	leal	(%rdx,%rdx,4), %edx
	movl	%ebp, %r8d
	subl	%edx, %r8d
	orb	$48, %r8b
	movb	%r8b, 63(%rsp,%r14)
	decq	%r14
	cmpl	$9, %ebp
	movl	%ecx, %ebp
	ja	.LBB130_35
# %bb.36:
	addq	$2, %rdi
	movq	%r14, %r8
	negq	%r8
	movq	%rbx, %rcx
	subq	%rdi, %rcx
	movl	$132, %eax
	cmpq	%r8, %rcx
	jl	.LBB130_38
# %bb.37:
	leaq	(%rsp,%r14), %rdx
	addq	$64, %rdx
	movq	%rdi, %rcx
	callq	memcpy
	subq	%r14, %rdi
	xorl	%eax, %eax
	movq	%rdi, %rbx
.LBB130_38:
	movq	%rbx, (%rsi)
	movl	%eax, 8(%rsi)
.LBB130_39:
	movq	%rsi, %rax
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
	.seh_endproc
                                        # -- End function
	.def	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.globl	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z" # -- Begin function ??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z
	.p2align	4, 0x90
"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z": # @"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
.Lfunc_begin55:
.seh_proc "??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$1768, %rsp                     # imm = 0x6E8
	.seh_stackalloc 1768
	leaq	128(%rsp), %rbp
	.seh_setframe %rbp, 128
	movaps	%xmm6, 1616(%rbp)               # 16-byte Spill
	.seh_savexmm %xmm6, 1744
	.seh_endprologue
	movq	$-2, 1608(%rbp)
	movq	%r9, %rbx
	movdqa	%xmm2, %xmm6
	movq	%rdx, %r12
	movq	%rcx, %r15
	movq	1744(%rbp), %rax
	movq	%rax, 1312(%rbp)
	movzbl	10(%r9), %eax
	testb	%al, %al
	movl	$2, %r13d
	cmovnel	%eax, %r13d
	movb	%r13b, 1598(%rbp)
	movl	4(%r9), %eax
	movsbl	8(%r9), %ecx
	movl	$3, %edx
	movq	%rdx, 1576(%rbp)                # 8-byte Spill
	movl	$0, 1592(%rbp)                  # 4-byte Folded Spill
	xorl	%esi, %esi
	xorl	%r14d, %r14d
	addl	$-65, %ecx
	cmpl	$38, %ecx
	ja	.LBB131_1
# %bb.2:
	leaq	.LJTI131_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rcx
	addq	%rdx, %rcx
	xorl	%edx, %edx
	jmpq	*%rcx
.LBB131_3:
	movb	$1, %sil
.LBB131_4:
	movl	%esi, %edx
	movl	$4, %ecx
	movq	%rcx, 1576(%rbp)                # 8-byte Spill
	movb	$1, %sil
	movb	$112, %r14b
	jmp	.LBB131_12
.LBB131_7:
	movb	$1, %sil
.LBB131_8:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$2, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
	xorl	%r14d, %r14d
	movl	%ecx, %eax
	xorl	%esi, %esi
	jmp	.LBB131_12
.LBB131_9:
	movb	$1, %sil
.LBB131_10:
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	%esi, %edx
	jmp	.LBB131_11
.LBB131_5:
	movb	$1, %sil
.LBB131_6:
	movl	%esi, %edx
	cmpl	$-1, %eax
	movl	$6, %ecx
	cmovnel	%eax, %ecx
	movl	$1, %eax
	movq	%rax, 1576(%rbp)                # 8-byte Spill
.LBB131_11:
	movb	$101, %r14b
	xorl	%esi, %esi
	movl	%ecx, %eax
.LBB131_12:
	movl	%edx, 1600(%rbp)                # 4-byte Spill
	leal	-1074(%rax), %ecx
	cmpl	$1074, %eax                     # imm = 0x432
	movl	$1074, %edx                     # imm = 0x432
	cmovll	%eax, %edx
	movl	%edx, 1568(%rbp)                # 4-byte Spill
	movl	1592(%rbp), %eax                # 4-byte Reload
	cmovgl	%ecx, %eax
	movl	%eax, 1592(%rbp)                # 4-byte Spill
.Ltmp330:
	movdqa	%xmm6, %xmm0
	callq	_ldsign
.Ltmp331:
# %bb.13:
	movl	%eax, %edi
	testl	%eax, %eax
	setne	1599(%rbp)
	movq	%xmm6, 1328(%rbp)
.Ltmp332:
	leaq	1328(%rbp), %rcx
	callq	_ldtest
.Ltmp333:
# %bb.14:
	movq	%r15, 1320(%rbp)                # 8-byte Spill
	cmpw	$2, %ax
	movq	%r12, 1480(%rbp)                # 8-byte Spill
	jne	.LBB131_16
# %bb.15:
	xorl	%eax, %eax
	testl	%edi, %edi
	setne	%al
	movb	$110, -78(%rbp,%rax)
	movw	$24942, -80(%rbp,%rax)          # imm = 0x616E
	leaq	(%rax,%rbp), %r15
	addq	$-77, %r15
	movq	%r15, 1448(%rbp)
	jmp	.LBB131_48
.LBB131_16:
	leaq	1305(%rbp), %r15
	movl	1568(%rbp), %eax                # 4-byte Reload
	cmpl	$-1, %eax
	je	.LBB131_17
# %bb.47:
	movl	%eax, 40(%rsp)
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1448(%rbp), %rcx
	leaq	-80(%rbp), %rdx
	movq	%r15, %r8
	movdqa	%xmm6, %xmm3
	callq	"??$_Floating_to_chars@$01N@std@@YA?AUto_chars_result@0@PEADQEADNW4chars_format@0@H@Z"
	movq	1448(%rbp), %r15
	jmp	.LBB131_48
.LBB131_17:
	movq	%xmm6, %rax
	testq	%rax, %rax
	js	.LBB131_19
# %bb.18:
	xorl	%edx, %edx
	movdqa	%xmm6, %xmm3
	movq	%rax, %rcx
	jmp	.LBB131_20
.LBB131_19:
	movb	$45, -80(%rbp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rax, %rcx
	movq	%rcx, %xmm3
	movl	$1, %edx
.LBB131_20:
	leaq	(%rdx,%rbp), %r12
	addq	$-80, %r12
	movq	%rcx, %r8
	notq	%r8
	movabsq	$9218868437227405312, %r9       # imm = 0x7FF0000000000000
	testq	%r9, %r8
	jne	.LBB131_28
# %bb.21:
	movabsq	$4503599627370495, %rdx         # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %rdx
	je	.LBB131_22
# %bb.23:
	testq	%rax, %rax
	jns	.LBB131_26
# %bb.24:
	movabsq	$2251799813685248, %rax         # imm = 0x8000000000000
	cmpq	%rax, %rdx
	jne	.LBB131_26
# %bb.25:
	movl	$8, %r15d
	leaq	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"(%rip), %rdx
	jmp	.LBB131_27
.LBB131_28:
	testb	%sil, %sil
	je	.LBB131_44
# %bb.29:
	movq	%xmm3, %rcx
	testq	%rcx, %rcx
	je	.LBB131_30
# %bb.32:
	movq	%rcx, %r8
	shrq	$52, %r8
	leal	-1023(%r8), %eax
	testq	%r8, %r8
	sete	%r10b
	movl	$-1022, %r8d                    # imm = 0xFC02
	cmovnel	%eax, %r8d
	xorb	$49, %r10b
	movabsq	$4503599627370495, %r9          # imm = 0xFFFFFFFFFFFFF
	movb	%r10b, -80(%rbp,%rdx)
	andq	%rcx, %r9
	je	.LBB131_33
# %bb.34:
	movb	$46, -79(%rbp,%rdx)
	leaq	(%rdx,%rbp), %r12
	addq	$-78, %r12
	shlq	$2, %rdx
	movl	$5532, %r10d                    # imm = 0x159C
	leaq	"?_Charconv_digits@std@@3QBDB"(%rip), %r11
	.p2align	4, 0x90
.LBB131_35:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r10, %rdx
	je	.LBB131_36
# %bb.37:                               #   in Loop: Header=BB131_35 Depth=1
	leal	-108(%r10), %ecx
	movq	%r9, %rsi
	shrq	%cl, %rsi
	movl	%esi, %esi
	movzbl	(%rsi,%r11), %esi
	movb	%sil, (%r12)
	movq	$-1, %rsi
                                        # kill: def $cl killed $cl killed $ecx
	shlq	%cl, %rsi
	notq	%rsi
	addq	$-4, %r10
	incq	%r12
	andq	%rsi, %r9
	jne	.LBB131_35
	jmp	.LBB131_38
.LBB131_1:
	xorl	%edx, %edx
	jmp	.LBB131_12
.LBB131_44:
.Ltmp334:
	movq	1576(%rbp), %rax                # 8-byte Reload
	movl	%eax, 32(%rsp)
	leaq	1328(%rbp), %rcx
	movq	%r12, %rdx
	movq	%r15, %r8
	callq	"??$__d2s_buffered_n@D@std@@YA?AU?$pair@PEADW4errc@std@@@0@QEAD0NW4chars_format@0@@Z"
.Ltmp335:
# %bb.45:
	movq	1328(%rbp), %r15
	movl	1336(%rbp), %ecx
	jmp	.LBB131_46
.LBB131_22:
	movl	$3, %r15d
	leaq	"??_C@_03OJHLLCGB@inf?$AA@"(%rip), %rdx
	jmp	.LBB131_27
.LBB131_26:
	btq	$51, %rcx
	leaq	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"(%rip), %rax
	leaq	"??_C@_03LHCJEHON@nan?$AA@"(%rip), %rdx
	cmovaeq	%rax, %rdx
	movl	$9, %eax
	movl	$3, %r15d
	cmovaeq	%rax, %r15
.LBB131_27:
	movq	%r12, %rcx
	movq	%r15, %r8
	callq	memcpy
	addq	%r15, %r12
.LBB131_31:
	xorl	%ecx, %ecx
	movq	%r12, %r15
.LBB131_46:
	movq	%r15, 1448(%rbp)
	movl	%ecx, 1456(%rbp)
.LBB131_48:
	leaq	-80(%rbp), %rsi
	movl	%r15d, %r12d
	subl	%esi, %r12d
	movq	%rsi, 1464(%rbp)
	movl	%r12d, 1584(%rbp)
	testl	%edi, %edi
	je	.LBB131_50
# %bb.49:
	leaq	-79(%rbp), %rsi
	movq	%rsi, 1464(%rbp)
	movl	1600(%rbp), %eax                # 4-byte Reload
	jmp	.LBB131_52
.LBB131_50:
	cmpb	$2, %r13b
	movl	1600(%rbp), %eax                # 4-byte Reload
	je	.LBB131_52
# %bb.51:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
.LBB131_52:
	testb	%al, %al
	je	.LBB131_57
# %bb.53:
	cmpq	%r15, %rsi
	je	.LBB131_56
# %bb.54:
	movq	%rsi, %rdi
	.p2align	4, 0x90
.LBB131_55:                             # =>This Inner Loop Header: Depth=1
	movsbl	(%rdi), %ecx
	callq	toupper
	movb	%al, (%rdi)
	incq	%rdi
	cmpq	%r15, %rdi
	jne	.LBB131_55
.LBB131_56:
	movzbl	%r14b, %ecx
	callq	toupper
	movl	%eax, %r14d
.LBB131_57:
	movq	%xmm6, 1328(%rbp)
.Ltmp336:
	leaq	1328(%rbp), %rdi
	movq	%rdi, %rcx
	callq	_ldtest
.Ltmp337:
# %bb.58:
	movb	$0, 1607(%rbp)
	movq	%r15, 1552(%rbp)
	movq	%r15, 1544(%rbp)
	movq	%r15, 1472(%rbp)
	movl	$0, 1588(%rbp)
	movl	$0, 1564(%rbp)
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, 1488(%rbp)
	movq	$0, 1504(%rbp)
	movq	$15, 1512(%rbp)
	testw	%ax, %ax
	jle	.LBB131_60
# %bb.59:
	xorl	%r8d, %r8d
	jmp	.LBB131_124
.LBB131_60:
	movw	%ax, 1600(%rbp)                 # 2-byte Spill
	movzbl	11(%rbx), %ecx
	movzbl	12(%rbx), %eax
	movl	%ecx, %edx
	orb	%al, %dl
	jne	.LBB131_63
# %bb.61:
	xorl	%edx, %edx
	movq	%r15, %r13
	jmp	.LBB131_62
.LBB131_63:
	movq	%r15, %r9
	movq	%r15, %r13
	cmpq	%r15, %rsi
	jae	.LBB131_75
# %bb.64:
	movl	%r15d, %r9d
	subl	%esi, %r9d
	movq	1552(%rbp), %rdx
	movq	1544(%rbp), %r8
	movq	%rsi, %r11
	notq	%r11
	testb	$1, %r9b
	jne	.LBB131_66
# %bb.65:
	movq	%r15, %r9
	movq	%r15, %r13
	movq	%rsi, %r10
	addq	%r15, %r11
	je	.LBB131_74
	jmp	.LBB131_71
.LBB131_66:
	movzbl	(%rsi), %r9d
	cmpb	$46, %r9b
	jne	.LBB131_68
# %bb.67:
	movq	%rsi, %r8
	movq	%rsi, %r9
	movq	%r15, %r13
	jmp	.LBB131_69
.LBB131_68:
	cmpb	%r14b, %r9b
	cmoveq	%rsi, %rdx
	movq	%r15, %r13
	cmoveq	%rsi, %r13
	movq	%r15, %r9
.LBB131_69:
	leaq	1(%rsi), %r10
	addq	%r15, %r11
	jne	.LBB131_71
.LBB131_74:
	movq	%rdx, 1552(%rbp)
	movq	%r8, 1544(%rbp)
.LBB131_75:
	cmpq	%r9, %r13
	movq	%r9, %rdi
	cmovbq	%r13, %rdi
	movl	$0, 1572(%rbp)                  # 4-byte Folded Spill
	movq	%rdi, 1472(%rbp)
	testb	%cl, %cl
	je	.LBB131_78
# %bb.76:
	cmpq	%r15, %r9
	jne	.LBB131_78
# %bb.77:
	incl	%r12d
	movl	%r12d, 1584(%rbp)
	movb	$1, 1607(%rbp)
	movb	$1, %cl
	movl	%ecx, 1572(%rbp)                # 4-byte Spill
.LBB131_78:
	testb	%al, %al
	je	.LBB131_79
# %bb.85:
	movq	1744(%rbp), %rax
	testq	%rax, %rax
	je	.LBB131_88
# %bb.86:
	movq	8(%rax), %rcx
	movq	%rcx, 1536(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB131_90
.LBB131_79:
	movl	1572(%rbp), %edx                # 4-byte Reload
.LBB131_62:
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI131_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	jmpq	*%rcx
.LBB131_71:
	incq	%r10
	jmp	.LBB131_72
	.p2align	4, 0x90
.LBB131_83:                             #   in Loop: Header=BB131_72 Depth=1
	cmpb	%r14b, %r11b
	cmoveq	%r10, %rdx
	cmoveq	%r10, %r13
.LBB131_84:                             #   in Loop: Header=BB131_72 Depth=1
	leaq	2(%r10), %r11
	incq	%r10
	cmpq	%r15, %r10
	movq	%r11, %r10
	je	.LBB131_74
.LBB131_72:                             # =>This Inner Loop Header: Depth=1
	leaq	-1(%r10), %r11
	movzbl	-1(%r10), %edi
	cmpb	$46, %dil
	jne	.LBB131_80
# %bb.73:                               #   in Loop: Header=BB131_72 Depth=1
	movq	%r11, %r8
	movq	%r11, %r9
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB131_83
	jmp	.LBB131_82
	.p2align	4, 0x90
.LBB131_80:                             #   in Loop: Header=BB131_72 Depth=1
	cmpb	%r14b, %dil
	cmoveq	%r11, %rdx
	cmoveq	%r11, %r13
	movzbl	(%r10), %r11d
	cmpb	$46, %r11b
	jne	.LBB131_83
.LBB131_82:                             #   in Loop: Header=BB131_72 Depth=1
	movq	%r10, %r8
	movq	%r10, %r9
	jmp	.LBB131_84
.LBB131_88:
.Ltmp338:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp339:
# %bb.89:
	movq	%rax, 1536(%rbp)
.LBB131_90:
.Ltmp340:
	leaq	1528(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp341:
# %bb.91:
	movq	(%rax), %r8
.Ltmp342:
	leaq	1328(%rbp), %rdx
	movq	%rax, %rcx
	callq	*40(%r8)
.Ltmp343:
# %bb.92:
	movq	1536(%rbp), %rcx
	movdqu	1328(%rbp), %xmm0
	movups	1344(%rbp), %xmm1
	movdqa	%xmm0, 1488(%rbp)
	movaps	%xmm1, 1504(%rbp)
	movq	$0, 1344(%rbp)
	movq	$15, 1352(%rbp)
	movb	$0, 1328(%rbp)
	testq	%rcx, %rcx
	je	.LBB131_95
# %bb.93:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB131_95
# %bb.94:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB131_95:
	movq	1504(%rbp), %rax
	cmpq	$16, 1512(%rbp)
	jb	.LBB131_96
# %bb.97:
	movq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	jne	.LBB131_99
	jmp	.LBB131_102
.LBB131_96:
	leaq	1488(%rbp), %rcx
	xorl	%edx, %edx
	testq	%rax, %rax
	je	.LBB131_102
.LBB131_99:
	subq	%rsi, %rdi
	movsbq	(%rcx), %r8
	cmpq	%r8, %rdi
	jbe	.LBB131_102
# %bb.100:
	addq	%rcx, %rax
	xorl	%edx, %edx
	movq	%rcx, %r9
	.p2align	4, 0x90
.LBB131_101:                            # =>This Inner Loop Header: Depth=1
	subq	%r8, %rdi
	incq	%r9
	incl	%edx
	cmpq	%rax, %r9
	cmovneq	%r9, %rcx
	movsbq	(%rcx), %r8
	movq	%rcx, %r9
	cmpq	%r8, %rdi
	ja	.LBB131_101
.LBB131_102:
	movl	%edx, 1564(%rbp)
	movq	1576(%rbp), %rcx                # 8-byte Reload
	decl	%ecx
	leaq	.LJTI131_1(%rip), %rax
	movslq	(%rax,%rcx,4), %rcx
	addq	%rax, %rcx
	movl	1572(%rbp), %edx                # 4-byte Reload
	jmpq	*%rcx
.LBB131_107:
	cmpl	$0, 1592(%rbp)                  # 4-byte Folded Reload
	je	.LBB131_110
# %bb.108:
	decq	%r13
	.p2align	4, 0x90
.LBB131_109:                            # =>This Inner Loop Header: Depth=1
	movq	%r13, 1552(%rbp)
	leaq	-1(%r13), %rax
	cmpb	%r14b, (%r13)
	movq	%rax, %r13
	jne	.LBB131_109
.LBB131_110:
	movl	1592(%rbp), %r8d                # 4-byte Reload
	movl	%r8d, 1588(%rbp)
.LBB131_114:
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
.LBB131_124:
	testw	%ax, %ax
	setle	%al
	addl	%r8d, %r12d
	movl	%r12d, 1584(%rbp)
	cmpb	$0, 13(%rbx)
	setne	%dl
	cmpb	$0, 9(%rbx)
	sete	%cl
	andb	%dl, %cl
	leaq	1598(%rbp), %rdx
	movq	%rdx, 1328(%rbp)
	leaq	1599(%rbp), %rdx
	movq	%rdx, 1336(%rbp)
	leaq	1528(%rbp), %rdx
	movq	%rdx, 1344(%rbp)
	leaq	1584(%rbp), %rdx
	movq	%rdx, 1352(%rbp)
	movq	%rbx, 1360(%rbp)
	leaq	1312(%rbp), %rdx
	movq	%rdx, 1368(%rbp)
	leaq	1464(%rbp), %rdx
	movq	%rdx, 1376(%rbp)
	leaq	1472(%rbp), %rdx
	movq	%rdx, 1384(%rbp)
	leaq	1488(%rbp), %rdx
	movq	%rdx, 1392(%rbp)
	leaq	1564(%rbp), %rdx
	movq	%rdx, 1400(%rbp)
	leaq	1544(%rbp), %rdx
	movq	%rdx, 1408(%rbp)
	leaq	1448(%rbp), %rdx
	movq	%rdx, 1416(%rbp)
	leaq	1607(%rbp), %rdx
	movq	%rdx, 1424(%rbp)
	leaq	1552(%rbp), %rdx
	movq	%rdx, 1432(%rbp)
	leaq	1588(%rbp), %rdx
	movq	%rdx, 1440(%rbp)
	andb	%al, %cl
	movb	%cl, 1528(%rbp)
	movq	1320(%rbp), %rsi                # 8-byte Reload
	je	.LBB131_126
# %bb.125:
.Ltmp346:
	leaq	1328(%rbp), %rcx
	movq	%rsi, %rdx
	movq	1480(%rbp), %r8                 # 8-byte Reload
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Ltmp347:
	jmp	.LBB131_127
.LBB131_126:
.Ltmp344:
	movq	%rdi, 40(%rsp)
	movb	$2, 32(%rsp)
	movq	%rsi, %rcx
	movq	1480(%rbp), %rdx                # 8-byte Reload
	movl	%r12d, %r8d
	movq	%rbx, %r9
	callq	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z"
.Ltmp345:
.LBB131_127:
	movq	1512(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB131_135
# %bb.128:
	movq	1488(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB131_134
# %bb.129:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB131_130
# %bb.133:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB131_134:
	callq	"??3@YAXPEAX_K@Z"
.LBB131_135:
	movq	%rsi, %rax
	movaps	1616(%rbp), %xmm6               # 16-byte Reload
	addq	$1768, %rsp                     # imm = 0x6E8
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB131_111:
	cmpb	$0, 11(%rbx)
	je	.LBB131_112
# %bb.113:
	movl	%esi, %eax
	subl	%r13d, %eax
	xorb	$1, %dl
	movzbl	%dl, %ecx
	movl	1592(%rbp), %r8d                # 4-byte Reload
	addl	1568(%rbp), %r8d                # 4-byte Folded Reload
	addl	%eax, %r8d
	addl	%ecx, %r8d
	movl	%r8d, 1588(%rbp)
	cmpq	%r15, %r13
	jne	.LBB131_114
# %bb.115:
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm6
	leaq	1328(%rbp), %rdi
	movzwl	1600(%rbp), %eax                # 2-byte Folded Reload
	jne	.LBB131_116
	jnp	.LBB131_124
.LBB131_116:
	andpd	__xmm@7fffffffffffffff7fffffffffffffff(%rip), %xmm6
	movsd	__real@3ff0000000000000(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	%xmm6, %xmm0
	jbe	.LBB131_124
# %bb.117:
	cmpq	%r15, %rsi
	jae	.LBB131_124
# %bb.118:
	subq	%rsi, %r15
	movl	1588(%rbp), %r9d
	xorl	%ecx, %ecx
	jmp	.LBB131_119
.LBB131_121:                            #   in Loop: Header=BB131_119 Depth=1
	incl	%r8d
	movl	%r8d, %r9d
.LBB131_122:                            #   in Loop: Header=BB131_119 Depth=1
	incq	%rcx
	cmpq	%rcx, %r15
	je	.LBB131_123
.LBB131_119:                            # =>This Inner Loop Header: Depth=1
	movzbl	(%rsi,%rcx), %edx
	cmpl	$46, %edx
	je	.LBB131_122
# %bb.120:                              #   in Loop: Header=BB131_119 Depth=1
	cmpl	$48, %edx
	je	.LBB131_121
.LBB131_123:
	movl	%r9d, 1588(%rbp)
	jmp	.LBB131_124
.LBB131_112:
	xorl	%r8d, %r8d
	jmp	.LBB131_114
.LBB131_30:
	movl	$808153136, (%r12)              # imm = 0x302B7030
	addq	$4, %r12
	jmp	.LBB131_31
.LBB131_33:
	leaq	(%rdx,%rbp), %r12
	addq	$-79, %r12
.LBB131_38:
	movq	%r15, %rdx
	subq	%r12, %rdx
	movl	$132, %ecx
	cmpq	$2, %rdx
	jl	.LBB131_46
# %bb.39:
	movl	%r8d, %ecx
	negl	%ecx
	movl	%r8d, %edx
	shrl	$31, %edx
	addb	%dl, %dl
	addb	$43, %dl
	testl	%r8d, %r8d
	cmovsl	%ecx, %eax
	movb	$112, (%r12)
	movb	%dl, 1(%r12)
	xorl	%esi, %esi
	movl	$3435973837, %ecx               # imm = 0xCCCCCCCD
	.p2align	4, 0x90
.LBB131_40:                             # =>This Inner Loop Header: Depth=1
	movl	%eax, %edx
	imulq	%rcx, %rdx
	shrq	$35, %rdx
	leal	(%rdx,%rdx), %r8d
	leal	(%r8,%r8,4), %r8d
	movl	%eax, %r9d
	subl	%r8d, %r9d
	orb	$48, %r9b
	movb	%r9b, 1359(%rbp,%rsi)
	decq	%rsi
	cmpl	$9, %eax
	movl	%edx, %eax
	ja	.LBB131_40
# %bb.41:
	addq	$2, %r12
	movq	%rsi, %r8
	negq	%r8
	movq	%r15, %rax
	subq	%r12, %rax
	movl	$132, %ecx
	cmpq	%r8, %rax
	jl	.LBB131_46
# %bb.42:
	leaq	(%rsi,%rbp), %rdx
	addq	$1360, %rdx                     # imm = 0x550
	movq	%r12, %rcx
	callq	memcpy
	subq	%rsi, %r12
	jmp	.LBB131_31
.LBB131_36:
	movl	$132, %ecx
	jmp	.LBB131_46
.LBB131_130:
.Ltmp348:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp349:
# %bb.131:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_43:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_87:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_103:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	movq	1536(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB131_106
# %bb.104:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB131_106
# %bb.105:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB131_106:
	movapd	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_132:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movapd	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_136:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movapd	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	leaq	1488(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	movaps	48(%rsp), %xmm6                 # 16-byte Reload
	addq	$72, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_137:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_138:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.def	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA":
.seh_proc "?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"
.LBB131_139:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$72, %rsp
	.seh_stackalloc 72
	leaq	128(%rdx), %rbp
	movdqa	%xmm6, 48(%rsp)                 # 16-byte Spill
	.seh_savexmm %xmm6, 48
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end55:
	.p2align	2, 0x90
.LJTI131_0:
	.long	.LBB131_3-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_5-.LJTI131_0
	.long	.LBB131_7-.LJTI131_0
	.long	.LBB131_9-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_4-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_12-.LJTI131_0
	.long	.LBB131_6-.LJTI131_0
	.long	.LBB131_8-.LJTI131_0
	.long	.LBB131_10-.LJTI131_0
.LJTI131_1:
	.long	.LBB131_107-.LJTI131_1
	.long	.LBB131_110-.LJTI131_1
	.long	.LBB131_111-.LJTI131_1
	.long	.LBB131_107-.LJTI131_1
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	429065506                       # MagicNumber
	.long	8                               # MaxState
	.long	("$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	14                              # IPMapEntries
	.long	("$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z")@IMGREL # IPToStateXData
	.long	1736                            # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$137@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$138@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$43@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$139@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$87@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$132@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$136@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
	.long	6                               # ToState
	.long	"?dtor$103@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z":
	.long	.Lfunc_begin55@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp330@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp332@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp334@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp335@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp336@IMGREL+1               # IP
	.long	3                               # ToState
	.long	.Ltmp337@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp338@IMGREL+1               # IP
	.long	4                               # ToState
	.long	.Ltmp340@IMGREL+1               # IP
	.long	7                               # ToState
	.long	.Ltmp343@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp346@IMGREL+1               # IP
	.long	6                               # ToState
	.long	.Ltmp345@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp348@IMGREL+1               # IP
	.long	5                               # ToState
	.long	.Ltmp349@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@OAEBU?$_Basic_format_specs@D@1@V_Lazy_locale@1@@Z"
                                        # -- End function
	.def	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.globl	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z" # -- Begin function ??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z
	.p2align	4, 0x90
"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z": # @"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
.Lfunc_begin56:
.seh_proc "??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%r8, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rbx
	movq	8(%rcx), %rax
	cmpb	$0, (%rax)
	je	.LBB132_4
# %bb.1:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_3
# %bb.2:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB132_3:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$45, (%rcx,%rax)
.LBB132_12:
	movq	16(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB132_19
# %bb.13:
	movq	24(%rbx), %rcx
	movq	32(%rbx), %rax
	movl	(%rax), %eax
	subl	(%rcx), %eax
	jle	.LBB132_19
# %bb.14:
	jle	.LBB132_19
# %bb.15:
	movl	%eax, %r14d
	incq	%r14
	jmp	.LBB132_16
	.p2align	4, 0x90
.LBB132_18:                             #   in Loop: Header=BB132_16 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	decq	%r14
	cmpq	$1, %r14
	jle	.LBB132_19
.LBB132_16:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_18
# %bb.17:                               #   in Loop: Header=BB132_16 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB132_18
.LBB132_19:
	movq	32(%rbx), %rax
	cmpb	$0, 12(%rax)
	je	.LBB132_38
# %bb.20:
	movq	40(%rbx), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB132_23
# %bb.21:
	movq	8(%rax), %rcx
	movq	%rcx, -16(%rbp)
	movq	(%rcx), %rax
	callq	*8(%rax)
	jmp	.LBB132_25
.LBB132_4:
	movq	(%rbx), %rax
	movzbl	(%rax), %eax
	cmpl	$3, %eax
	je	.LBB132_9
# %bb.5:
	cmpl	$1, %eax
	jne	.LBB132_12
# %bb.6:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_8
# %bb.7:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB132_8:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$43, (%rcx,%rax)
	jmp	.LBB132_12
.LBB132_23:
.Ltmp350:
	movb	$1, %cl
	callq	"?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z"
.Ltmp351:
# %bb.24:
	movq	%rax, -16(%rbp)
.LBB132_25:
.Ltmp352:
	leaq	-24(%rbp), %rcx
	callq	"??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z"
.Ltmp353:
# %bb.26:
	movq	%rax, %r14
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB132_29
# %bb.27:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB132_29
# %bb.28:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB132_29:
	movq	72(%rbx), %rax
	movl	(%rax), %r15d
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*32(%rax)
	movq	64(%rbx), %rdx
	movq	16(%rdx), %rcx
	cmpq	$16, 24(%rdx)
	jb	.LBB132_31
# %bb.30:
	movq	(%rdx), %rdx
.LBB132_31:
	movq	%rdx, -40(%rbp)
	movq	%rcx, -32(%rbp)
	movq	48(%rbx), %rcx
	movq	56(%rbx), %rdx
	movq	(%rdx), %r8
	movq	(%rcx), %rdx
	movq	%rdi, 48(%rsp)
	movl	%r15d, 40(%rsp)
	movb	%al, 32(%rsp)
	leaq	-24(%rbp), %rcx
	leaq	-40(%rbp), %r9
	callq	"??$_Write_separated_integer@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@PEBDQEBDV?$basic_string_view@DU?$char_traits@D@std@@@1@DHV21@@Z"
	movq	-24(%rbp), %rdi
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	jne	.LBB132_33
# %bb.32:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB132_36
.LBB132_33:
	movq	(%r14), %rax
	movq	%r14, %rcx
	callq	*24(%rax)
	movl	%eax, %r14d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_35
# %bb.34:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB132_35:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r14b, (%rcx,%rax)
	movq	96(%rbx), %rax
	movb	$0, (%rax)
.LBB132_36:
	movq	48(%rbx), %rax
	movq	56(%rbx), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	80(%rbx), %rax
	movq	88(%rbx), %rcx
	movq	(%rax), %rax
	cmpq	(%rcx), %rax
	je	.LBB132_38
# %bb.37:
	movq	48(%rbx), %rax
	incq	(%rax)
.LBB132_38:
	movq	48(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rcx), %r14
	movq	(%rax), %r15
	jmp	.LBB132_39
	.p2align	4, 0x90
.LBB132_42:                             #   in Loop: Header=BB132_39 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r12b, (%rcx,%rax)
	incq	%r15
.LBB132_39:                             # =>This Inner Loop Header: Depth=1
	cmpq	%r14, %r15
	je	.LBB132_43
# %bb.40:                               #   in Loop: Header=BB132_39 Depth=1
	movzbl	(%r15), %r12d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_42
# %bb.41:                               #   in Loop: Header=BB132_39 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB132_42
.LBB132_43:
	movq	32(%rbx), %rax
	cmpb	$0, 11(%rax)
	je	.LBB132_48
# %bb.44:
	movq	96(%rbx), %rax
	cmpb	$0, (%rax)
	je	.LBB132_48
# %bb.45:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_47
# %bb.46:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB132_47:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$46, (%rcx,%rax)
.LBB132_48:
	movq	112(%rbx), %rax
	cmpl	$0, (%rax)
	jg	.LBB132_49
.LBB132_52:
	movq	88(%rbx), %rax
	movq	104(%rbx), %rcx
	movq	(%rax), %rbx
	movq	(%rcx), %r14
	jmp	.LBB132_53
	.p2align	4, 0x90
.LBB132_56:                             #   in Loop: Header=BB132_53 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	%r15b, (%rcx,%rax)
	incq	%r14
.LBB132_53:                             # =>This Inner Loop Header: Depth=1
	cmpq	%rbx, %r14
	je	.LBB132_57
# %bb.54:                               #   in Loop: Header=BB132_53 Depth=1
	movzbl	(%r14), %r15d
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_56
# %bb.55:                               #   in Loop: Header=BB132_53 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB132_56
	.p2align	4, 0x90
.LBB132_51:                             #   in Loop: Header=BB132_49 Depth=1
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$48, (%rcx,%rax)
	movq	112(%rbx), %rax
	movl	(%rax), %ecx
	leal	-1(%rcx), %edx
	movl	%edx, (%rax)
	cmpl	$1, %ecx
	jle	.LBB132_52
.LBB132_49:                             # =>This Inner Loop Header: Depth=1
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_51
# %bb.50:                               #   in Loop: Header=BB132_49 Depth=1
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB132_51
.LBB132_57:
	movq	%rdi, (%rsi)
	movq	%rsi, %rax
	addq	$96, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB132_9:
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rdi)
	jae	.LBB132_11
# %bb.10:
	movq	(%rdi), %rax
	movq	%rdi, %rcx
	callq	*(%rax)
	movq	16(%rdi), %rax
	leaq	1(%rax), %rdx
.LBB132_11:
	movq	8(%rdi), %rcx
	movq	%rdx, 16(%rdi)
	movb	$32, (%rcx,%rax)
	jmp	.LBB132_12
	.seh_handlerdata
	.long	("$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB132_22:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.def	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA":
.seh_proc "?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"
.LBB132_58:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$64, %rsp
	.seh_stackalloc 64
	leaq	96(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rcx
	testq	%rcx, %rcx
	je	.LBB132_61
# %bb.59:
	movq	(%rcx), %rax
	callq	*16(%rax)
	testq	%rax, %rax
	je	.LBB132_61
# %bb.60:
	movq	(%rax), %r8
	movq	%rax, %rcx
	movl	$1, %edx
	callq	*(%r8)
.LBB132_61:
	nop
	addq	$64, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end56:
	.seh_handlerdata
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	.p2align	2, 0x0
"$cppxdata$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	-1                              # ToState
	.long	"?dtor$22@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$58@?0???R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z@4HA"@IMGREL # Action
"$ip2state$??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z":
	.long	.Lfunc_begin56@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp350@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp352@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp353@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@2@YA?AV12@V12@OAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@AEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@01@YA?AV21@0O1V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r15d, %r15d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB133_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB133_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB133_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB133_5
# %bb.4:
	movl	%eax, %r15d
.LBB133_5:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
.LBB133_16:
	leaq	48(%rsp), %rdx
	movq	%r10, %rcx
	movq	%rbx, %r8
	callq	"??R<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@O@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@2@V32@OAEBU?$_Basic_format_specs@D@2@V_Lazy_locale@2@@Z@QEBA?A?<auto>@@0@Z"
	movq	48(%rsp), %rbx
	testl	%r15d, %r15d
	jle	.LBB133_24
# %bb.17:
	testb	%r14b, %r14b
	je	.LBB133_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB133_19
	.p2align	4, 0x90
.LBB133_23:                             #   in Loop: Header=BB133_19 Depth=1
	leal	-1(%r15), %eax
	cmpl	$1, %r15d
	movl	%eax, %r15d
	jle	.LBB133_24
.LBB133_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB133_20 Depth 2
	movq	%r12, %r14
	jmp	.LBB133_20
	.p2align	4, 0x90
.LBB133_22:                             #   in Loop: Header=BB133_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%rdi, %r14
	je	.LBB133_23
.LBB133_20:                             #   Parent Loop BB133_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB133_22
# %bb.21:                               #   in Loop: Header=BB133_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB133_22
.LBB133_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB133_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r15d
	movl	%eax, %ebp
	jmp	.LBB133_7
.LBB133_6:
	subl	%r8d, %ebp
	xorl	%r15d, %r15d
.LBB133_7:
	leaq	15(%rdi), %r12
	movzbl	14(%rdi), %r14d
	movzbl	%r14b, %r13d
	testl	%ebp, %ebp
	jle	.LBB133_16
# %bb.8:
	testb	%r14b, %r14b
	jne	.LBB133_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB133_16
	.p2align	4, 0x90
.LBB133_14:                             #   in Loop: Header=BB133_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB133_15
.LBB133_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB133_11 Depth 2
	xorl	%r14d, %r14d
	jmp	.LBB133_11
	.p2align	4, 0x90
.LBB133_13:                             #   in Loop: Header=BB133_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r14
	cmpq	%r14, %r13
	je	.LBB133_14
.LBB133_11:                             #   Parent Loop BB133_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12,%r14), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB133_13
# %bb.12:                               #   in Loop: Header=BB133_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB133_13
.LBB133_15:
	movb	$1, %r14b
	movq	168(%rsp), %r10
	jmp	.LBB133_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z"
	.globl	"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z" # -- Begin function ??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z
	.p2align	4, 0x90
"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z": # @"??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z"
.seh_proc "??$_Write_aligned@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@U?$_Basic_format_specs@D@2@V<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@2@YA?AV12@V12@QEBXAEBU32@V_Lazy_locale@2@@Z@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@HAEBU?$_Basic_format_specs@D@1@W4_Fmt_align@1@$$QEAV<lambda_1>@?0???$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@01@YA?AV21@0QEBX1V_Lazy_locale@1@@Z@@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	.seh_endprologue
	movq	%r9, %rdi
	movq	%rdx, %rbx
	movq	168(%rsp), %r10
	movl	(%r9), %ebp
	xorl	%r14d, %r14d
	movl	%ebp, %eax
	subl	%r8d, %eax
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	jle	.LBB134_5
# %bb.1:
	movzbl	9(%rdi), %edx
	testb	%dl, %dl
	movzbl	160(%rsp), %r9d
	cmovnel	%edx, %r9d
	cmpb	$3, %r9b
	je	.LBB134_25
# %bb.2:
	movzbl	%r9b, %edx
	cmpl	$2, %edx
	je	.LBB134_6
# %bb.3:
	cmpl	$1, %edx
	jne	.LBB134_5
# %bb.4:
	movl	%eax, %r14d
.LBB134_5:
	leaq	15(%rdi), %r15
	movzbl	14(%rdi), %r12d
	movzbl	%r12b, %r13d
.LBB134_16:
	movq	(%r10), %r8
	leaq	48(%rsp), %rcx
	movq	%rbx, %rdx
	callq	"??$_Fmt_write@DV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@@__p2286@std@@YA?AV?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@1@V21@QEBX@Z"
	movq	48(%rsp), %rbx
	testl	%r14d, %r14d
	jle	.LBB134_24
# %bb.17:
	testb	%r12b, %r12b
	je	.LBB134_24
# %bb.18:
	addq	%r13, %rdi
	addq	$15, %rdi
	jmp	.LBB134_19
	.p2align	4, 0x90
.LBB134_23:                             #   in Loop: Header=BB134_19 Depth=1
	leal	-1(%r14), %eax
	cmpl	$1, %r14d
	movl	%eax, %r14d
	jle	.LBB134_24
.LBB134_19:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB134_20 Depth 2
	movq	%r15, %r12
	jmp	.LBB134_20
	.p2align	4, 0x90
.LBB134_22:                             #   in Loop: Header=BB134_20 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r12
	cmpq	%rdi, %r12
	je	.LBB134_23
.LBB134_20:                             #   Parent Loop BB134_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r12), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB134_22
# %bb.21:                               #   in Loop: Header=BB134_20 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB134_22
.LBB134_24:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, (%rax)
	addq	$56, %rsp
	popq	%rbx
	popq	%rbp
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	retq
.LBB134_25:
	subl	%r8d, %ebp
	movl	%ebp, %eax
	shrl	$31, %eax
	addl	%ebp, %eax
	sarl	%eax
	subl	%eax, %ebp
	movl	%ebp, %r14d
	movl	%eax, %ebp
	jmp	.LBB134_7
.LBB134_6:
	subl	%r8d, %ebp
	xorl	%r14d, %r14d
.LBB134_7:
	leaq	15(%rdi), %r15
	movzbl	14(%rdi), %r12d
	movzbl	%r12b, %r13d
	testl	%ebp, %ebp
	jle	.LBB134_16
# %bb.8:
	testb	%r12b, %r12b
	jne	.LBB134_10
# %bb.9:
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
	jmp	.LBB134_16
	.p2align	4, 0x90
.LBB134_14:                             #   in Loop: Header=BB134_10 Depth=1
	leal	-1(%rbp), %eax
	cmpl	$1, %ebp
	movl	%eax, %ebp
	jle	.LBB134_15
.LBB134_10:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB134_11 Depth 2
	xorl	%r12d, %r12d
	jmp	.LBB134_11
	.p2align	4, 0x90
.LBB134_13:                             #   in Loop: Header=BB134_11 Depth=2
	movq	8(%rbx), %rcx
	movq	%rdx, 16(%rbx)
	movb	%sil, (%rcx,%rax)
	incq	%r12
	cmpq	%r12, %r13
	je	.LBB134_14
.LBB134_11:                             #   Parent Loop BB134_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r15,%r12), %esi
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	cmpq	%rdx, 24(%rbx)
	jae	.LBB134_13
# %bb.12:                               #   in Loop: Header=BB134_11 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rcx
	callq	*(%rax)
	movq	16(%rbx), %rax
	leaq	1(%rax), %rdx
	jmp	.LBB134_13
.LBB134_15:
	movb	$1, %r12b
	movq	168(%rsp), %r10
	jmp	.LBB134_16
	.seh_endproc
                                        # -- End function
	.def	"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
	.globl	"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z" # -- Begin function ??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z
	.p2align	4, 0x90
"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z": # @"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
.Lfunc_begin57:
.seh_proc "??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rsp), %rbp
	.seh_setframe %rbp, 32
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	16(%rcx), %rdi
	movabsq	$9223372036854775807, %r13      # imm = 0x7FFFFFFFFFFFFFFF
	movq	%rdi, %rax
	xorq	%r13, %rax
	cmpq	%rdx, %rax
	jb	.LBB135_19
# %bb.1:
	movl	%r9d, %ebx
	movq	%rdx, %r14
	movq	%rcx, %rsi
	addq	%rdi, %r14
	movq	24(%rcx), %r12
	movq	%r14, %rax
	orq	$15, %rax
	movabsq	$-9223372036854775808, %rcx     # imm = 0x8000000000000000
	js	.LBB135_5
# %bb.2:
	movq	%r12, %rdx
	shrq	%rdx
	movq	%rdx, %r8
	xorq	%r13, %r8
	cmpq	%r12, %r8
	jb	.LBB135_5
# %bb.3:
	addq	%r12, %rdx
	cmpq	%rdx, %rax
	movq	%rdx, %r13
	cmovaq	%rax, %r13
	leaq	1(%r13), %rcx
	cmpq	$4096, %rcx                     # imm = 0x1000
	jb	.LBB135_6
# %bb.4:
	cmpq	$-39, %rcx
	jae	.LBB135_20
.LBB135_5:
	addq	$39, %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r15
	andq	$-32, %r15
	movq	%rax, -8(%r15)
.LBB135_9:
	movq	%r14, 16(%rsi)
	movq	%r13, 24(%rsi)
	cmpq	$16, %r12
	jb	.LBB135_17
# %bb.10:
	movq	(%rsi), %r14
	movq	%r15, %rcx
	movq	%r14, %rdx
	movq	%rdi, %r8
	callq	memcpy
	movb	%bl, (%r15,%rdi)
	movb	$0, 1(%r15,%rdi)
	leaq	1(%r12), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB135_16
# %bb.11:
	movq	-8(%r14), %rax
	addq	$-8, %r14
	subq	%rax, %r14
	cmpq	$32, %r14
	jae	.LBB135_12
# %bb.15:
	addq	$40, %r12
	movq	%r12, %rdx
	movq	%rax, %r14
.LBB135_16:
	movq	%r14, %rcx
	callq	"??3@YAXPEAX_K@Z"
	jmp	.LBB135_18
.LBB135_17:
	movq	%r15, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	memcpy
	movb	%bl, (%r15,%rdi)
	movb	$0, 1(%r15,%rdi)
.LBB135_18:
	movq	%r15, (%rsi)
	movq	%rsi, %rax
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB135_6:
	testq	%rcx, %rcx
	je	.LBB135_7
# %bb.8:
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r15
	jmp	.LBB135_9
.LBB135_7:
	movq	$-1, %r13
	xorl	%r15d, %r15d
	jmp	.LBB135_9
.LBB135_19:
	callq	"?_Xlen_string@std@@YAXXZ"
.LBB135_12:
.Ltmp354:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp355:
# %bb.13:
.LBB135_20:
	callq	"?_Throw_bad_array_new_length@std@@YAXXZ"
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
	.seh_endproc
	.def	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z@4HA":
.seh_proc "?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z@4HA"
.LBB135_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r13
	.seh_pushreg %r13
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	32(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end57:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z")@IMGREL # IPToStateXData
	.long	32                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z":
	.long	-1                              # ToState
	.long	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z@4HA"@IMGREL # Action
"$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z":
	.long	.Lfunc_begin57@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp354@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp355@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??push_back@01@QEAAXD@Z@D@Z"
                                        # -- End function
	.def	"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z"
	.globl	"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z" # -- Begin function ?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z
	.p2align	4, 0x90
"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z": # @"?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z"
.seh_proc "?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$96, %rsp
	.seh_stackalloc 96
	.seh_endprologue
	movl	%ecx, 40(%rsp)
	leaq	"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B"(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rsi
	leaq	40(%rsp), %rdx
	movq	%rsi, %rcx
	callq	"??0system_error@std@@QEAA@Verror_code@1@@Z"
	leaq	"_TI4?AVsystem_error@std@@"(%rip), %rdx
	movq	%rsi, %rcx
	callq	_CxxThrowException
	int3
	.seh_endproc
                                        # -- End function
	.def	"?_Throw_system_error@std@@YAXW4errc@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?_Throw_system_error@std@@YAXW4errc@1@@Z"
	.globl	"?_Throw_system_error@std@@YAXW4errc@1@@Z" # -- Begin function ?_Throw_system_error@std@@YAXW4errc@1@@Z
	.p2align	4, 0x90
"?_Throw_system_error@std@@YAXW4errc@1@@Z": # @"?_Throw_system_error@std@@YAXW4errc@1@@Z"
.seh_proc "?_Throw_system_error@std@@YAXW4errc@1@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$96, %rsp
	.seh_stackalloc 96
	.seh_endprologue
	movl	%ecx, 40(%rsp)
	leaq	"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B"(%rip), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rsi
	leaq	40(%rsp), %rdx
	movq	%rsi, %rcx
	callq	"??0system_error@std@@QEAA@Verror_code@1@@Z"
	leaq	"_TI4?AVsystem_error@std@@"(%rip), %rdx
	movq	%rsi, %rcx
	callq	_CxxThrowException
	int3
	.seh_endproc
                                        # -- End function
	.def	"??0system_error@std@@QEAA@Verror_code@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0system_error@std@@QEAA@Verror_code@1@@Z"
	.globl	"??0system_error@std@@QEAA@Verror_code@1@@Z" # -- Begin function ??0system_error@std@@QEAA@Verror_code@1@@Z
	.p2align	4, 0x90
"??0system_error@std@@QEAA@Verror_code@1@@Z": # @"??0system_error@std@@QEAA@Verror_code@1@@Z"
.seh_proc "??0system_error@std@@QEAA@Verror_code@1@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	movq	%rcx, %rsi
	movups	(%rdx), %xmm0
	movaps	%xmm0, 32(%rsp)
	leaq	32(%rsp), %rdx
	callq	"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	leaq	"??_7system_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??0system_error@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0system_error@std@@QEAA@AEBV01@@Z"
	.globl	"??0system_error@std@@QEAA@AEBV01@@Z" # -- Begin function ??0system_error@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0system_error@std@@QEAA@AEBV01@@Z":  # @"??0system_error@std@@QEAA@AEBV01@@Z"
.Lfunc_begin58:
.seh_proc "??0system_error@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rdx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdi), %rcx
.Ltmp356:
	callq	__std_exception_copy
.Ltmp357:
# %bb.1:
	leaq	"??_7_System_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movups	24(%rdi), %xmm0
	movups	%xmm0, 24(%rsi)
	leaq	"??_7system_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0system_error@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0system_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0system_error@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0system_error@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0system_error@std@@QEAA@AEBV01@@Z@4HA"
.LBB139_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end58:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0system_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0system_error@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0system_error@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0system_error@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0system_error@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0system_error@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0system_error@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0system_error@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin58@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp356@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp357@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0system_error@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??0_System_error@std@@QEAA@AEBV01@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0_System_error@std@@QEAA@AEBV01@@Z"
	.globl	"??0_System_error@std@@QEAA@AEBV01@@Z" # -- Begin function ??0_System_error@std@@QEAA@AEBV01@@Z
	.p2align	4, 0x90
"??0_System_error@std@@QEAA@AEBV01@@Z": # @"??0_System_error@std@@QEAA@AEBV01@@Z"
.Lfunc_begin59:
.seh_proc "??0_System_error@std@@QEAA@AEBV01@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	leaq	8(%rcx), %rdx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
	leaq	8(%rdi), %rcx
.Ltmp358:
	callq	__std_exception_copy
.Ltmp359:
# %bb.1:
	leaq	"??_7_System_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movups	24(%rdi), %xmm0
	movups	%xmm0, 24(%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??0_System_error@std@@QEAA@AEBV01@@Z")@IMGREL
	.section	.text,"xr",discard,"??0_System_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.def	"?dtor$2@?0???0_System_error@std@@QEAA@AEBV01@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$2@?0???0_System_error@std@@QEAA@AEBV01@@Z@4HA":
.seh_proc "?dtor$2@?0???0_System_error@std@@QEAA@AEBV01@@Z@4HA"
.LBB140_2:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end59:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0_System_error@std@@QEAA@AEBV01@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0_System_error@std@@QEAA@AEBV01@@Z"
	.p2align	2, 0x0
"$cppxdata$??0_System_error@std@@QEAA@AEBV01@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??0_System_error@std@@QEAA@AEBV01@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??0_System_error@std@@QEAA@AEBV01@@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0_System_error@std@@QEAA@AEBV01@@Z":
	.long	-1                              # ToState
	.long	"?dtor$2@?0???0_System_error@std@@QEAA@AEBV01@@Z@4HA"@IMGREL # Action
"$ip2state$??0_System_error@std@@QEAA@AEBV01@@Z":
	.long	.Lfunc_begin59@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp358@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp359@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0_System_error@std@@QEAA@AEBV01@@Z"
                                        # -- End function
	.def	"??_G_System_error_category@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_G_System_error_category@std@@UEAAPEAXI@Z"
	.globl	"??_G_System_error_category@std@@UEAAPEAXI@Z" # -- Begin function ??_G_System_error_category@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_G_System_error_category@std@@UEAAPEAXI@Z": # @"??_G_System_error_category@std@@UEAAPEAXI@Z"
.seh_proc "??_G_System_error_category@std@@UEAAPEAXI@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rcx, %rsi
	testl	%edx, %edx
	je	.LBB141_2
# %bb.1:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB141_2:
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"?name@_System_error_category@std@@UEBAPEBDXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?name@_System_error_category@std@@UEBAPEBDXZ"
	.globl	"?name@_System_error_category@std@@UEBAPEBDXZ" # -- Begin function ?name@_System_error_category@std@@UEBAPEBDXZ
	.p2align	4, 0x90
"?name@_System_error_category@std@@UEBAPEBDXZ": # @"?name@_System_error_category@std@@UEBAPEBDXZ"
# %bb.0:
	leaq	"??_C@_06FHFOAHML@system?$AA@"(%rip), %rax
	retq
                                        # -- End function
	.def	"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.globl	"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z" # -- Begin function ?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	.p2align	4, 0x90
"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z": # @"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
.Lfunc_begin60:
.seh_proc "?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$56, %rsp
	.seh_stackalloc 56
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, (%rbp)
	movl	%r8d, %ecx
	movq	%rdx, %rsi
	movq	$0, -16(%rbp)
	leaq	-16(%rbp), %rdx
	callq	__std_system_error_allocate_message
	movq	%rax, -8(%rbp)
	testq	%rax, %rax
	je	.LBB143_1
# %bb.2:
	movq	-16(%rbp), %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsi)
	movups	%xmm0, (%rsi)
	js	.LBB143_3
# %bb.5:
	movq	%rax, %rdi
	cmpq	$15, %rax
	ja	.LBB143_7
# %bb.6:
	movq	%rdi, 16(%rsi)
	movq	$15, 24(%rsi)
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%rsi, %rdi
	jmp	.LBB143_13
.LBB143_1:
	movq	$0, 8(%rsi)
	movq	$13, 16(%rsi)
	movq	$15, 24(%rsi)
	movabsq	$2336936577129475701, %rax      # imm = 0x206E776F6E6B6E75
	movq	%rax, (%rsi)
	movabsq	$8245935278387129975, %rax      # imm = 0x726F727265206E77
	movq	%rax, 5(%rsi)
	jmp	.LBB143_14
.LBB143_7:
	movq	$15, 24(%rsi)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB143_10
# %bb.8:
	leaq	40(%r15), %rcx
.Ltmp362:
	callq	"??2@YAPEAX_K@Z"
.Ltmp363:
# %bb.9:
	movq	%rax, %r14
	addq	$39, %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB143_12
.LBB143_10:
	leaq	1(%r15), %rcx
.Ltmp360:
	callq	"??2@YAPEAX_K@Z"
.Ltmp361:
# %bb.11:
	movq	%rax, %r14
.LBB143_12:
	movq	%r14, (%rsi)
	movq	%rdi, 16(%rsi)
	movq	%r15, 24(%rsi)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB143_13:
	movb	$0, (%rdi)
.LBB143_14:
	movq	-16(%rbp), %rcx
	callq	__std_system_error_deallocate_message
	movq	%rsi, %rax
	addq	$56, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB143_3:
.Ltmp364:
	callq	"?_Xlen_string@std@@YAXXZ"
.Ltmp365:
# %bb.4:
	int3
	.seh_handlerdata
	.long	("$cppxdata$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")@IMGREL
	.section	.text,"xr",discard,"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.seh_endproc
	.def	"?dtor$15@?0??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$15@?0??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z@4HA":
.seh_proc "?dtor$15@?0??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z@4HA"
.LBB143_15:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	48(%rdx), %rbp
	.seh_endprologue
	movq	-16(%rbp), %rcx
	callq	__std_system_error_deallocate_message
	nop
	addq	$40, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end60:
	.seh_handlerdata
	.section	.text,"xr",discard,"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.p2align	2, 0x0
"$cppxdata$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")@IMGREL # IPToStateXData
	.long	48                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z":
	.long	-1                              # ToState
	.long	"?dtor$15@?0??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z@4HA"@IMGREL # Action
"$ip2state$?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z":
	.long	.Lfunc_begin60@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp362@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp361@IMGREL+1               # IP
	.long	-1                              # ToState
	.long	.Ltmp364@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp365@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
                                        # -- End function
	.def	"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.globl	"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z" # -- Begin function ?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z
	.p2align	4, 0x90
"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z": # @"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
.Lfunc_begin61:
.seh_proc "?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, %rsi
	testl	%r8d, %r8d
	je	.LBB144_1
# %bb.2:
.Ltmp366:
	movl	%r8d, %edi
	movl	%r8d, %ecx
	callq	"?_Winerror_map@std@@YAHH@Z"
.Ltmp367:
# %bb.3:
	testl	%eax, %eax
	je	.LBB144_4
# %bb.5:
	movl	%eax, (%rsi)
	jmp	.LBB144_6
.LBB144_1:
	movl	$0, (%rsi)
.LBB144_6:
	leaq	"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B"(%rip), %rax
	jmp	.LBB144_7
.LBB144_4:
	movl	%edi, (%rsi)
	leaq	"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B"(%rip), %rax
.LBB144_7:
	movq	%rax, 8(%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z")@IMGREL
	.section	.text,"xr",discard,"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.seh_endproc
	.def	"?dtor$8@?0??default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$8@?0??default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z@4HA":
.seh_proc "?dtor$8@?0??default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z@4HA"
.LBB144_8:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end61:
	.seh_handlerdata
	.section	.text,"xr",discard,"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.p2align	2, 0x0
"$cppxdata$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z":
	.long	-1                              # ToState
	.long	"?dtor$8@?0??default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z@4HA"@IMGREL # Action
"$ip2state$?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z":
	.long	.Lfunc_begin61@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp366@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp367@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
                                        # -- End function
	.def	"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z"
	.globl	"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z" # -- Begin function ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	.p2align	4, 0x90
"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z": # @"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z"
# %bb.0:
	movq	8(%rdx), %rax
	movq	8(%rcx), %rcx
	cmpq	8(%rax), %rcx
	sete	%cl
	cmpl	%r8d, (%rdx)
	sete	%al
	andb	%cl, %al
	retq
                                        # -- End function
	.def	"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z"
	.globl	"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z" # -- Begin function ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
	.p2align	4, 0x90
"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z": # @"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z"
.seh_proc "?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$48, %rsp
	.seh_stackalloc 48
	.seh_endprologue
	movq	%r8, %rsi
	movl	%edx, %r8d
	movq	(%rcx), %rax
	leaq	32(%rsp), %rdx
	callq	*24(%rax)
	movq	40(%rsp), %rax
	movq	8(%rsi), %rcx
	movq	8(%rax), %rax
	cmpq	8(%rcx), %rax
	sete	%cl
	movl	32(%rsp), %eax
	cmpl	(%rsi), %eax
	sete	%al
	andb	%cl, %al
	addq	$48, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"??_G_Generic_error_category@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_G_Generic_error_category@std@@UEAAPEAXI@Z"
	.globl	"??_G_Generic_error_category@std@@UEAAPEAXI@Z" # -- Begin function ??_G_Generic_error_category@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_G_Generic_error_category@std@@UEAAPEAXI@Z": # @"??_G_Generic_error_category@std@@UEAAPEAXI@Z"
.seh_proc "??_G_Generic_error_category@std@@UEAAPEAXI@Z"
# %bb.0:
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movq	%rcx, %rsi
	testl	%edx, %edx
	je	.LBB147_2
# %bb.1:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB147_2:
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rsi
	retq
	.seh_endproc
                                        # -- End function
	.def	"?name@_Generic_error_category@std@@UEBAPEBDXZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?name@_Generic_error_category@std@@UEBAPEBDXZ"
	.globl	"?name@_Generic_error_category@std@@UEBAPEBDXZ" # -- Begin function ?name@_Generic_error_category@std@@UEBAPEBDXZ
	.p2align	4, 0x90
"?name@_Generic_error_category@std@@UEBAPEBDXZ": # @"?name@_Generic_error_category@std@@UEBAPEBDXZ"
# %bb.0:
	leaq	"??_C@_07DCLBNMLN@generic?$AA@"(%rip), %rax
	retq
                                        # -- End function
	.def	"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.globl	"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z" # -- Begin function ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	.p2align	4, 0x90
"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z": # @"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
.seh_proc "?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
# %bb.0:
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	.seh_endprologue
	movl	%r8d, %ecx
	movq	%rdx, %rsi
	callq	"?_Syserror_map@std@@YAPEBDH@Z"
	movq	%rax, %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsi)
	movups	%xmm0, 16(%rsi)
	movq	%rax, %rcx
	callq	strlen
	testq	%rax, %rax
	js	.LBB149_8
# %bb.1:
	movq	%rax, %rdi
	cmpq	$15, %rax
	ja	.LBB149_3
# %bb.2:
	movq	%rdi, 16(%rsi)
	movq	$15, 24(%rsi)
	movq	%rsi, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%rsi, %rdi
	jmp	.LBB149_7
.LBB149_3:
	movq	$15, 24(%rsi)
	movq	%rdi, %rax
	orq	$15, %rax
	cmpq	$23, %rax
	movl	$22, %r15d
	cmovaeq	%rax, %r15
	cmpq	$4095, %r15                     # imm = 0xFFF
	jb	.LBB149_5
# %bb.4:
	leaq	40(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
	jmp	.LBB149_6
.LBB149_5:
	leaq	1(%r15), %rcx
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
.LBB149_6:
	movq	%r14, (%rsi)
	movq	%rdi, 16(%rsi)
	movq	%r15, 24(%rsi)
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	addq	%r14, %rdi
.LBB149_7:
	movb	$0, (%rdi)
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r14
	popq	%r15
	retq
.LBB149_8:
	callq	"?_Xlen_string@std@@YAXXZ"
	int3
	.seh_endproc
                                        # -- End function
	.def	"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.globl	"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z" # -- Begin function ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	.p2align	4, 0x90
"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z": # @"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z"
# %bb.0:
	movq	%rdx, %rax
	movl	%r8d, (%rdx)
	movq	%rcx, 8(%rdx)
	retq
                                        # -- End function
	.def	"??0_System_error@std@@IEAA@Verror_code@1@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.globl	"??0_System_error@std@@IEAA@Verror_code@1@@Z" # -- Begin function ??0_System_error@std@@IEAA@Verror_code@1@@Z
	.p2align	4, 0x90
"??0_System_error@std@@IEAA@Verror_code@1@@Z": # @"??0_System_error@std@@IEAA@Verror_code@1@@Z"
.Lfunc_begin62:
.seh_proc "??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$88, %rsp
	.seh_stackalloc 88
	leaq	80(%rsp), %rbp
	.seh_setframe %rbp, 80
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	8(%rdx), %rcx
	movl	(%rdx), %r8d
	movq	(%rcx), %rax
	leaq	-48(%rbp), %rbx
	movq	%rbx, %rdx
	callq	*16(%rax)
	cmpq	$16, -24(%rbp)
	jb	.LBB151_2
# %bb.1:
	movq	-48(%rbp), %rbx
.LBB151_2:
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	leaq	8(%rsi), %rdx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rsi)
	movq	%rbx, -16(%rbp)
	movb	$1, -8(%rbp)
.Ltmp368:
	leaq	-16(%rbp), %rcx
	callq	__std_exception_copy
.Ltmp369:
# %bb.3:
	leaq	"??_7runtime_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movq	-24(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB151_11
# %bb.4:
	movq	-48(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB151_10
# %bb.5:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB151_6
# %bb.9:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB151_10:
	callq	"??3@YAXPEAX_K@Z"
.LBB151_11:
	leaq	"??_7_System_error@std@@6B@"(%rip), %rax
	movq	%rax, (%rsi)
	movups	(%rdi), %xmm0
	movups	%xmm0, 24(%rsi)
	movq	%rsi, %rax
	addq	$88, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
.LBB151_6:
.Ltmp370:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp371:
# %bb.7:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??0_System_error@std@@IEAA@Verror_code@1@@Z")@IMGREL
	.section	.text,"xr",discard,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.seh_endproc
	.def	"?dtor$8@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$8@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA":
.seh_proc "?dtor$8@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA"
.LBB151_8:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.seh_endproc
	.def	"?dtor$12@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$12@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA":
.seh_proc "?dtor$12@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA"
.LBB151_12:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end62:
	.seh_handlerdata
	.section	.text,"xr",discard,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
	.p2align	2, 0x0
"$cppxdata$??0_System_error@std@@IEAA@Verror_code@1@@Z":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??0_System_error@std@@IEAA@Verror_code@1@@Z")@IMGREL # IPToStateXData
	.long	80                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@@Z":
	.long	-1                              # ToState
	.long	"?dtor$12@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$8@?0???0_System_error@std@@IEAA@Verror_code@1@@Z@4HA"@IMGREL # Action
"$ip2state$??0_System_error@std@@IEAA@Verror_code@1@@Z":
	.long	.Lfunc_begin62@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp368@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp370@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp371@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??0_System_error@std@@IEAA@Verror_code@1@@Z"
                                        # -- End function
	.def	"??_Gsystem_error@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_Gsystem_error@std@@UEAAPEAXI@Z"
	.globl	"??_Gsystem_error@std@@UEAAPEAXI@Z" # -- Begin function ??_Gsystem_error@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_Gsystem_error@std@@UEAAPEAXI@Z":    # @"??_Gsystem_error@std@@UEAAPEAXI@Z"
.Lfunc_begin63:
.seh_proc "??_Gsystem_error@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp372:
	callq	__std_exception_destroy
.Ltmp373:
# %bb.1:
	testl	%edi, %edi
	je	.LBB152_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB152_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_Gsystem_error@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_Gsystem_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_Gsystem_error@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_Gsystem_error@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_Gsystem_error@std@@UEAAPEAXI@Z@4HA"
.LBB152_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end63:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_Gsystem_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_Gsystem_error@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_Gsystem_error@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_Gsystem_error@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_Gsystem_error@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_Gsystem_error@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_Gsystem_error@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_Gsystem_error@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin63@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp372@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp373@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_Gsystem_error@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"??_G_System_error@std@@UEAAPEAXI@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??_G_System_error@std@@UEAAPEAXI@Z"
	.globl	"??_G_System_error@std@@UEAAPEAXI@Z" # -- Begin function ??_G_System_error@std@@UEAAPEAXI@Z
	.p2align	4, 0x90
"??_G_System_error@std@@UEAAPEAXI@Z":   # @"??_G_System_error@std@@UEAAPEAXI@Z"
.Lfunc_begin64:
.seh_proc "??_G_System_error@std@@UEAAPEAXI@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movl	%edx, %edi
	movq	%rcx, %rsi
	leaq	"??_7exception@std@@6B@"(%rip), %rax
	movq	%rax, (%rcx)
	addq	$8, %rcx
.Ltmp374:
	callq	__std_exception_destroy
.Ltmp375:
# %bb.1:
	testl	%edi, %edi
	je	.LBB153_3
# %bb.2:
	movq	%rsi, %rcx
	callq	"??3@YAXPEAX@Z"
.LBB153_3:
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rdi
	popq	%rsi
	popq	%rbp
	retq
	.seh_handlerdata
	.long	("$cppxdata$??_G_System_error@std@@UEAAPEAXI@Z")@IMGREL
	.section	.text,"xr",discard,"??_G_System_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.def	"?dtor$4@?0???_G_System_error@std@@UEAAPEAXI@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$4@?0???_G_System_error@std@@UEAAPEAXI@Z@4HA":
.seh_proc "?dtor$4@?0???_G_System_error@std@@UEAAPEAXI@Z@4HA"
.LBB153_4:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end64:
	.seh_handlerdata
	.section	.text,"xr",discard,"??_G_System_error@std@@UEAAPEAXI@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??_G_System_error@std@@UEAAPEAXI@Z"
	.p2align	2, 0x0
"$cppxdata$??_G_System_error@std@@UEAAPEAXI@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??_G_System_error@std@@UEAAPEAXI@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??_G_System_error@std@@UEAAPEAXI@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??_G_System_error@std@@UEAAPEAXI@Z":
	.long	-1                              # ToState
	.long	"?dtor$4@?0???_G_System_error@std@@UEAAPEAXI@Z@4HA"@IMGREL # Action
"$ip2state$??_G_System_error@std@@UEAAPEAXI@Z":
	.long	.Lfunc_begin64@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp374@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp375@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??_G_System_error@std@@UEAAPEAXI@Z"
                                        # -- End function
	.def	"??1Data@@QEAA@XZ";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??1Data@@QEAA@XZ"
	.globl	"??1Data@@QEAA@XZ"              # -- Begin function ??1Data@@QEAA@XZ
	.p2align	4, 0x90
"??1Data@@QEAA@XZ":                     # @"??1Data@@QEAA@XZ"
.Lfunc_begin65:
.seh_proc "??1Data@@QEAA@XZ"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$88, %rsp
	.seh_stackalloc 88
	leaq	80(%rsp), %rbp
	.seh_setframe %rbp, 80
	.seh_endprologue
	movq	$-2, (%rbp)
	movq	%rcx, %rsi
	leaq	"??_C@_0BD@BEGHMEGI@?$FL?$HL?$HN?$FN?5Data?3?3?$HOData?$CI?$CJ?$AA@"(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	$18, -8(%rbp)
.Ltmp376:
	movl	$1, %ecx
	callq	__acrt_iob_func
.Ltmp377:
# %bb.1:
	movq	%rsi, -24(%rbp)
	movabsq	$-6917529027641081856, %rcx     # imm = 0xA000000000000000
	movq	%rcx, -32(%rbp)
	movq	$1, -48(%rbp)
	leaq	-32(%rbp), %rcx
	movq	%rcx, -40(%rbp)
.Ltmp378:
	leaq	-16(%rbp), %r8
	leaq	-48(%rbp), %r9
	movb	$1, %cl
	movq	%rax, %rdx
	callq	"?_Vprint_unicode_impl@std@@YAXW4_Add_newline@1@QEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@V?$basic_format_args@V?$basic_format_context@V?$back_insert_iterator@V?$_Fmt_buffer@D@std@@@std@@D@std@@@1@@Z"
.Ltmp379:
# %bb.2:
	movq	24(%rsi), %rax
	cmpq	$16, %rax
	jb	.LBB154_10
# %bb.3:
	movq	(%rsi), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB154_9
# %bb.4:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB154_5
# %bb.8:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB154_9:
	callq	"??3@YAXPEAX_K@Z"
.LBB154_10:
	movq	$0, 16(%rsi)
	movq	$15, 24(%rsi)
	movb	$0, (%rsi)
	addq	$88, %rsp
	popq	%rsi
	popq	%rbp
	retq
.LBB154_5:
.Ltmp380:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp381:
# %bb.6:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??1Data@@QEAA@XZ")@IMGREL
	.section	.text,"xr",discard,"??1Data@@QEAA@XZ"
	.seh_endproc
	.def	"?dtor$7@?0???1Data@@QEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$7@?0???1Data@@QEAA@XZ@4HA":
.seh_proc "?dtor$7@?0???1Data@@QEAA@XZ@4HA"
.LBB154_7:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??1Data@@QEAA@XZ"
	.seh_endproc
	.def	"?dtor$11@?0???1Data@@QEAA@XZ@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$11@?0???1Data@@QEAA@XZ@4HA":
.seh_proc "?dtor$11@?0???1Data@@QEAA@XZ@4HA"
.LBB154_11:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%rsi
	.seh_pushreg %rsi
	subq	$40, %rsp
	.seh_stackalloc 40
	leaq	80(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end65:
	.seh_handlerdata
	.section	.text,"xr",discard,"??1Data@@QEAA@XZ"
	.seh_endproc
	.section	.xdata,"dr",associative,"??1Data@@QEAA@XZ"
	.p2align	2, 0x0
"$cppxdata$??1Data@@QEAA@XZ":
	.long	429065506                       # MagicNumber
	.long	2                               # MaxState
	.long	("$stateUnwindMap$??1Data@@QEAA@XZ")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	4                               # IPMapEntries
	.long	("$ip2state$??1Data@@QEAA@XZ")@IMGREL # IPToStateXData
	.long	80                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??1Data@@QEAA@XZ":
	.long	-1                              # ToState
	.long	"?dtor$7@?0???1Data@@QEAA@XZ@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$11@?0???1Data@@QEAA@XZ@4HA"@IMGREL # Action
"$ip2state$??1Data@@QEAA@XZ":
	.long	.Lfunc_begin65@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp376@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp380@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp381@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??1Data@@QEAA@XZ"
                                        # -- End function
	.def	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.globl	"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z" # -- Begin function ??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z
	.p2align	4, 0x90
"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z": # @"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
.Lfunc_begin66:
.seh_proc "??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$96, %rsp
	.seh_stackalloc 96
	leaq	96(%rsp), %rbp
	.seh_setframe %rbp, 96
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	%rdx, %rsi
	movl	%ecx, %ebx
	leaq	-47(%rbp), %r14
	movq	(%r8), %r15
	movq	8(%r8), %r12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -48(%rbp)
	movq	$0, -32(%rbp)
	movq	$15, -24(%rbp)
	testq	%r12, %r12
	je	.LBB155_4
# %bb.1:
	movzbl	%bl, %edx
	addq	%r12, %rdx
	cmpq	$16, %rdx
	jb	.LBB155_7
# %bb.2:
.Ltmp382:
	leaq	-48(%rbp), %rdi
	movq	%rdi, %rcx
	callq	"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
.Ltmp383:
# %bb.3:
	movq	-48(%rbp), %rax
	leaq	1(%rax), %rcx
	cmpq	$16, -24(%rbp)
	cmovaeq	%rax, %rdi
	cmovaeq	%rcx, %r14
	jmp	.LBB155_8
.LBB155_4:
	testb	%bl, %bl
	je	.LBB155_31
# %bb.5:
	movq	$1, -32(%rbp)
	movb	$10, -48(%rbp)
	movb	$0, (%r14)
	cmpq	$16, -24(%rbp)
	jae	.LBB155_22
.LBB155_6:
	leaq	-48(%rbp), %rax
	jmp	.LBB155_23
.LBB155_7:
	leaq	-48(%rbp), %rdi
.LBB155_8:
	movzbl	(%r15), %edx
	movb	%dl, (%rdi)
	movl	$1, %eax
	cmpq	$1, %r12
	je	.LBB155_16
# %bb.9:
	incq	%r15
	leaq	-1(%r12), %rcx
	cmpq	$2, %r12
	jne	.LBB155_32
.LBB155_10:
	testb	$1, %cl
	je	.LBB155_16
# %bb.11:
	movzbl	(%r15), %ecx
	cmpb	$123, %cl
	jne	.LBB155_13
# %bb.12:
	cmpb	$123, %dl
	je	.LBB155_16
.LBB155_13:
	cmpb	$125, %cl
	jne	.LBB155_15
# %bb.14:
	cmpb	$125, %dl
	je	.LBB155_16
.LBB155_15:
	movb	%cl, (%r14)
	incq	%r14
	incq	%rax
.LBB155_16:
	testb	%bl, %bl
	je	.LBB155_18
# %bb.17:
	movb	$10, (%r14)
	incq	%rax
.LBB155_18:
	cmpq	$16, -24(%rbp)
	jb	.LBB155_20
# %bb.19:
	movq	-48(%rbp), %r14
	jmp	.LBB155_21
.LBB155_20:
	leaq	-48(%rbp), %r14
.LBB155_21:
	movq	%rax, -32(%rbp)
	addq	%rax, %r14
	movb	$0, (%r14)
	cmpq	$16, -24(%rbp)
	jb	.LBB155_6
.LBB155_22:
	movq	-48(%rbp), %rax
.LBB155_23:
	movq	-32(%rbp), %rcx
.LBB155_24:
	movq	%rax, -64(%rbp)
	movq	%rcx, -56(%rbp)
.Ltmp384:
	leaq	-64(%rbp), %rdx
	movq	%rsi, %rcx
	callq	"?_Print_noformat_unicode@std@@YAXQEAU_iobuf@@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z"
.Ltmp385:
# %bb.25:
	movq	-24(%rbp), %rax
	cmpq	$16, %rax
	jb	.LBB155_30
# %bb.26:
	movq	-48(%rbp), %rcx
	leaq	1(%rax), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB155_29
# %bb.27:
	movq	-8(%rcx), %r8
	addq	$-8, %rcx
	subq	%r8, %rcx
	cmpq	$32, %rcx
	jae	.LBB155_47
# %bb.28:
	addq	$40, %rax
	movq	%rax, %rdx
	movq	%r8, %rcx
.LBB155_29:
	callq	"??3@YAXPEAX_K@Z"
.LBB155_30:
	nop
	addq	$96, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB155_31:
	leaq	-48(%rbp), %rax
	xorl	%ecx, %ecx
	jmp	.LBB155_24
.LBB155_32:
	movq	%rcx, %r8
	andq	$-2, %r8
	jmp	.LBB155_35
	.p2align	4, 0x90
.LBB155_43:                             #   in Loop: Header=BB155_35 Depth=1
	xorl	%edx, %edx
	addq	$2, %r15
	addq	$-2, %r8
	jne	.LBB155_35
	jmp	.LBB155_10
	.p2align	4, 0x90
.LBB155_33:                             #   in Loop: Header=BB155_35 Depth=1
	movb	%dl, (%r14)
	incq	%r14
	incq	%rax
	addq	$2, %r15
	addq	$-2, %r8
	je	.LBB155_10
.LBB155_35:                             # =>This Inner Loop Header: Depth=1
	movzbl	(%r15), %r9d
	cmpb	$123, %r9b
	jne	.LBB155_38
# %bb.36:                               #   in Loop: Header=BB155_35 Depth=1
	cmpb	$123, %dl
	je	.LBB155_37
.LBB155_38:                             #   in Loop: Header=BB155_35 Depth=1
	cmpb	$125, %r9b
	jne	.LBB155_41
# %bb.39:                               #   in Loop: Header=BB155_35 Depth=1
	cmpb	$125, %dl
	jne	.LBB155_41
.LBB155_37:                             #   in Loop: Header=BB155_35 Depth=1
	xorl	%r9d, %r9d
	movzbl	1(%r15), %edx
	cmpb	$123, %dl
	je	.LBB155_42
	jmp	.LBB155_44
	.p2align	4, 0x90
.LBB155_41:                             #   in Loop: Header=BB155_35 Depth=1
	movb	%r9b, (%r14)
	incq	%r14
	incq	%rax
	movzbl	1(%r15), %edx
	cmpb	$123, %dl
	jne	.LBB155_44
.LBB155_42:                             #   in Loop: Header=BB155_35 Depth=1
	cmpb	$123, %r9b
	je	.LBB155_43
.LBB155_44:                             #   in Loop: Header=BB155_35 Depth=1
	cmpb	$125, %dl
	jne	.LBB155_33
# %bb.45:                               #   in Loop: Header=BB155_35 Depth=1
	cmpb	$125, %r9b
	je	.LBB155_43
	jmp	.LBB155_33
.LBB155_47:
.Ltmp386:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp387:
# %bb.48:
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.seh_endproc
	.def	"?dtor$49@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$49@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA":
.seh_proc "?dtor$49@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"
.LBB155_49:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	96(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.seh_endproc
	.def	"?dtor$50@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$50@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA":
.seh_proc "?dtor$50@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"
.LBB155_50:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	96(%rdx), %rbp
	.seh_endprologue
	leaq	-48(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.seh_endproc
	.def	"?dtor$51@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$51@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA":
.seh_proc "?dtor$51@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"
.LBB155_51:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	96(%rdx), %rbp
	.seh_endprologue
	leaq	-48(%rbp), %rcx
	callq	"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"
	nop
	addq	$32, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq                                    # CLEANUPRET
.Lfunc_end66:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z":
	.long	429065506                       # MagicNumber
	.long	3                               # MaxState
	.long	("$stateUnwindMap$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	5                               # IPMapEntries
	.long	("$ip2state$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z")@IMGREL # IPToStateXData
	.long	88                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z":
	.long	-1                              # ToState
	.long	"?dtor$50@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$49@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"@IMGREL # Action
	.long	-1                              # ToState
	.long	"?dtor$51@?0???$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z":
	.long	.Lfunc_begin66@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp382@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp384@IMGREL+1               # IP
	.long	2                               # ToState
	.long	.Ltmp386@IMGREL+1               # IP
	.long	1                               # ToState
	.long	.Ltmp387@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Print_impl@$$V@std@@YAXW4_Add_newline@0@QEAU_iobuf@@U?$basic_format_string@D$$V@0@@Z"
                                        # -- End function
	.def	"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z";
	.scl	2;
	.type	32;
	.endef
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
	.globl	"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z" # -- Begin function ??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z
	.p2align	4, 0x90
"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z": # @"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
.Lfunc_begin67:
.seh_proc "??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
	.seh_handler __CxxFrameHandler3, @unwind, @except
# %bb.0:
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$48, %rsp
	.seh_stackalloc 48
	leaq	48(%rsp), %rbp
	.seh_setframe %rbp, 48
	.seh_endprologue
	movq	$-2, -8(%rbp)
	movq	16(%rcx), %rdi
	movabsq	$9223372036854775807, %r12      # imm = 0x7FFFFFFFFFFFFFFF
	movq	%rdi, %rax
	xorq	%r12, %rax
	cmpq	%rdx, %rax
	jb	.LBB156_19
# %bb.1:
	movq	%rdx, %rbx
	movq	%rcx, %rsi
	addq	%rdi, %rbx
	movq	24(%rcx), %r15
	movq	%rbx, %rax
	orq	$15, %rax
	movabsq	$-9223372036854775808, %rcx     # imm = 0x8000000000000000
	js	.LBB156_5
# %bb.2:
	movq	%r15, %rdx
	shrq	%rdx
	movq	%rdx, %r8
	xorq	%r12, %r8
	cmpq	%r15, %r8
	jb	.LBB156_5
# %bb.3:
	addq	%r15, %rdx
	cmpq	%rdx, %rax
	movq	%rdx, %r12
	cmovaq	%rax, %r12
	leaq	1(%r12), %rcx
	cmpq	$4096, %rcx                     # imm = 0x1000
	jb	.LBB156_6
# %bb.4:
	cmpq	$-39, %rcx
	jae	.LBB156_20
.LBB156_5:
	addq	$39, %rcx
	callq	"??2@YAPEAX_K@Z"
	leaq	39(%rax), %r14
	andq	$-32, %r14
	movq	%rax, -8(%r14)
.LBB156_9:
	movq	%rbx, 16(%rsi)
	movq	%r12, 24(%rsi)
	cmpq	$16, %r15
	jb	.LBB156_17
# %bb.10:
	movq	(%rsi), %rbx
	incq	%rdi
	movq	%r14, %rcx
	movq	%rbx, %rdx
	movq	%rdi, %r8
	callq	memcpy
	leaq	1(%r15), %rdx
	cmpq	$4096, %rdx                     # imm = 0x1000
	jb	.LBB156_16
# %bb.11:
	movq	-8(%rbx), %rax
	addq	$-8, %rbx
	subq	%rax, %rbx
	cmpq	$32, %rbx
	jae	.LBB156_12
# %bb.15:
	addq	$40, %r15
	movq	%r15, %rdx
	movq	%rax, %rbx
.LBB156_16:
	movq	%rbx, %rcx
	callq	"??3@YAXPEAX_K@Z"
	jmp	.LBB156_18
.LBB156_17:
	incq	%rdi
	movq	%r14, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %r8
	callq	memcpy
.LBB156_18:
	movq	%r14, (%rsi)
	movq	%rsi, %rax
	addq	$48, %rsp
	popq	%rbx
	popq	%rdi
	popq	%rsi
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB156_6:
	testq	%rcx, %rcx
	je	.LBB156_7
# %bb.8:
	callq	"??2@YAPEAX_K@Z"
	movq	%rax, %r14
	jmp	.LBB156_9
.LBB156_7:
	movq	$-1, %r12
	xorl	%r14d, %r14d
	jmp	.LBB156_9
.LBB156_19:
	callq	"?_Xlen_string@std@@YAXXZ"
.LBB156_12:
.Ltmp388:
	callq	_invalid_parameter_noinfo_noreturn
.Ltmp389:
# %bb.13:
.LBB156_20:
	callq	"?_Throw_bad_array_new_length@std@@YAXXZ"
	int3
	.seh_handlerdata
	.long	("$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z")@IMGREL
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
	.seh_endproc
	.def	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z@4HA";
	.scl	3;
	.type	32;
	.endef
	.p2align	4, 0x90
"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z@4HA":
.seh_proc "?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z@4HA"
.LBB156_14:
	movq	%rdx, 16(%rsp)
	pushq	%rbp
	.seh_pushreg %rbp
	pushq	%r15
	.seh_pushreg %r15
	pushq	%r14
	.seh_pushreg %r14
	pushq	%r12
	.seh_pushreg %r12
	pushq	%rsi
	.seh_pushreg %rsi
	pushq	%rdi
	.seh_pushreg %rdi
	pushq	%rbx
	.seh_pushreg %rbx
	subq	$32, %rsp
	.seh_stackalloc 32
	leaq	48(%rdx), %rbp
	.seh_endprologue
	callq	__std_terminate
	int3
.Lfunc_end67:
	.seh_handlerdata
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
	.seh_endproc
	.section	.xdata,"dr",associative,"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
	.p2align	2, 0x0
"$cppxdata$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z":
	.long	429065506                       # MagicNumber
	.long	1                               # MaxState
	.long	("$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z")@IMGREL # UnwindMap
	.long	0                               # NumTryBlocks
	.long	0                               # TryBlockMap
	.long	3                               # IPMapEntries
	.long	("$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z")@IMGREL # IPToStateXData
	.long	40                              # UnwindHelp
	.long	0                               # ESTypeList
	.long	1                               # EHFlags
"$stateUnwindMap$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z":
	.long	-1                              # ToState
	.long	"?dtor$14@?0???$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z@4HA"@IMGREL # Action
"$ip2state$??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z":
	.long	.Lfunc_begin67@IMGREL           # IP
	.long	-1                              # ToState
	.long	.Ltmp388@IMGREL+1               # IP
	.long	0                               # ToState
	.long	.Ltmp389@IMGREL+1               # IP
	.long	-1                              # ToState
	.section	.text,"xr",discard,"??$_Reallocate_grow_by@V<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KV1?0??_Unescape_braces@3@YA?AV23@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0???$resize_and_overwrite@V<lambda_1>@?0??_Unescape_braces@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4_Add_newline@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@@Z@@01@QEAAX0V2?0??_Unescape_braces@1@YA?AV01@W4_Add_newline@1@V?$basic_string_view@DU?$char_traits@D@std@@@1@@Z@@Z@@Z"
                                        # -- End function
	.section	.rdata,"dr",discard,"??_C@_0BD@IGIIOBPB@?6?$DN?$DN?$DN?5First?5run?5?$DN?$DN?$DN?$AA@"
	.globl	"??_C@_0BD@IGIIOBPB@?6?$DN?$DN?$DN?5First?5run?5?$DN?$DN?$DN?$AA@" # @"??_C@_0BD@IGIIOBPB@?6?$DN?$DN?$DN?5First?5run?5?$DN?$DN?$DN?$AA@"
"??_C@_0BD@IGIIOBPB@?6?$DN?$DN?$DN?5First?5run?5?$DN?$DN?$DN?$AA@":
	.asciz	"\n=== First run ==="

	.section	.rdata,"dr",discard,"??_C@_0BE@NINFMGHJ@?6?$DN?$DN?$DN?5Second?5run?5?$DN?$DN?$DN?$AA@"
	.globl	"??_C@_0BE@NINFMGHJ@?6?$DN?$DN?$DN?5Second?5run?5?$DN?$DN?$DN?$AA@" # @"??_C@_0BE@NINFMGHJ@?6?$DN?$DN?$DN?5Second?5run?5?$DN?$DN?$DN?$AA@"
"??_C@_0BE@NINFMGHJ@?6?$DN?$DN?$DN?5Second?5run?5?$DN?$DN?$DN?$AA@":
	.asciz	"\n=== Second run ==="

	.section	.bss,"bw",discard,"?id@?$numpunct@D@std@@2V0locale@2@A"
	.globl	"?id@?$numpunct@D@std@@2V0locale@2@A" # @"?id@?$numpunct@D@std@@2V0locale@2@A"
	.p2align	3, 0x0
"?id@?$numpunct@D@std@@2V0locale@2@A":
	.zero	8

	.section	.rdata,"dr",discard,"??_C@_0CC@PCOEPBEH@?$FLPRODUCER?$FN?5producing?5some?5data?4?4@"
	.globl	"??_C@_0CC@PCOEPBEH@?$FLPRODUCER?$FN?5producing?5some?5data?4?4@" # @"??_C@_0CC@PCOEPBEH@?$FLPRODUCER?$FN?5producing?5some?5data?4?4@"
"??_C@_0CC@PCOEPBEH@?$FLPRODUCER?$FN?5producing?5some?5data?4?4@":
	.asciz	"[PRODUCER] producing some data..."

	.section	.rdata,"dr",discard,"??_C@_0O@KLMCIIGF@Hello?0?5World?$CB?$AA@"
	.globl	"??_C@_0O@KLMCIIGF@Hello?0?5World?$CB?$AA@" # @"??_C@_0O@KLMCIIGF@Hello?0?5World?$CB?$AA@"
"??_C@_0O@KLMCIIGF@Hello?0?5World?$CB?$AA@":
	.asciz	"Hello, World!"

	.section	.rdata,"dr",discard,"??_C@_0BP@OMLGDNEJ@?$FLPRODUCER?$FN?5lending?5the?5data?4?4?4?$AA@"
	.globl	"??_C@_0BP@OMLGDNEJ@?$FLPRODUCER?$FN?5lending?5the?5data?4?4?4?$AA@" # @"??_C@_0BP@OMLGDNEJ@?$FLPRODUCER?$FN?5lending?5the?5data?4?4?4?$AA@"
"??_C@_0BP@OMLGDNEJ@?$FLPRODUCER?$FN?5lending?5the?5data?4?4?4?$AA@":
	.asciz	"[PRODUCER] lending the data..."

	.section	.rdata,"dr",discard,"??_C@_0DF@IJBPFIBC@?$FLPRODUCER?$FN?5data?5should?5be?5mine?5a@"
	.globl	"??_C@_0DF@IJBPFIBC@?$FLPRODUCER?$FN?5data?5should?5be?5mine?5a@" # @"??_C@_0DF@IJBPFIBC@?$FLPRODUCER?$FN?5data?5should?5be?5mine?5a@"
"??_C@_0DF@IJBPFIBC@?$FLPRODUCER?$FN?5data?5should?5be?5mine?5a@":
	.asciz	"[PRODUCER] data should be mine again, checking... {}"

	.section	.rdata,"dr",discard,"??_C@_0FM@MGOMPOIP@?$FLPRODUCER?$FN?5what?5a?5dishonest?5borr@"
	.globl	"??_C@_0FM@MGOMPOIP@?$FLPRODUCER?$FN?5what?5a?5dishonest?5borr@" # @"??_C@_0FM@MGOMPOIP@?$FLPRODUCER?$FN?5what?5a?5dishonest?5borr@"
"??_C@_0FM@MGOMPOIP@?$FLPRODUCER?$FN?5what?5a?5dishonest?5borr@":
	.asciz	"[PRODUCER] what a dishonest borrower! \n\tIf I'll give m_data to the consumer, it will crash!"

	.section	.rdata,"dr",discard,"??_C@_0DI@IDNLCFLH@?$FLPRODUCER?$FN?5m_data?5should?5be?5null@"
	.globl	"??_C@_0DI@IDNLCFLH@?$FLPRODUCER?$FN?5m_data?5should?5be?5null@" # @"??_C@_0DI@IDNLCFLH@?$FLPRODUCER?$FN?5m_data?5should?5be?5null@"
"??_C@_0DI@IDNLCFLH@?$FLPRODUCER?$FN?5m_data?5should?5be?5null@":
	.asciz	"[PRODUCER] m_data should be nullptr now, checking... {}"

	.section	.rdata,"dr",discard,"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@"
	.globl	"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@" # @"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@"
"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@":
	.asciz	"string too long"

	.section	.data,"dw",discard,"??_R0?AVbad_array_new_length@std@@@8"
	.globl	"??_R0?AVbad_array_new_length@std@@@8" # @"??_R0?AVbad_array_new_length@std@@@8"
	.p2align	4, 0x0
"??_R0?AVbad_array_new_length@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVbad_array_new_length@std@@"
	.zero	1

	.section	.xdata,"dr",discard,"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24":
	.long	0                               # 0x0
	.long	"??_R0?AVbad_array_new_length@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVbad_alloc@std@@@8"
	.globl	"??_R0?AVbad_alloc@std@@@8"     # @"??_R0?AVbad_alloc@std@@@8"
	.p2align	4, 0x0
"??_R0?AVbad_alloc@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVbad_alloc@std@@"
	.zero	4

	.section	.xdata,"dr",discard,"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24":
	.long	16                              # 0x10
	.long	"??_R0?AVbad_alloc@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0bad_alloc@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVexception@std@@@8"
	.globl	"??_R0?AVexception@std@@@8"     # @"??_R0?AVexception@std@@@8"
	.p2align	4, 0x0
"??_R0?AVexception@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVexception@std@@"
	.zero	4

	.section	.xdata,"dr",discard,"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24":
	.long	0                               # 0x0
	.long	"??_R0?AVexception@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0exception@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.xdata,"dr",discard,"_CTA3?AVbad_array_new_length@std@@"
	.globl	"_CTA3?AVbad_array_new_length@std@@" # @"_CTA3?AVbad_array_new_length@std@@"
	.p2align	3, 0x0
"_CTA3?AVbad_array_new_length@std@@":
	.long	3                               # 0x3
	.long	"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"@IMGREL

	.section	.xdata,"dr",discard,"_TI3?AVbad_array_new_length@std@@"
	.globl	"_TI3?AVbad_array_new_length@std@@" # @"_TI3?AVbad_array_new_length@std@@"
	.p2align	3, 0x0
"_TI3?AVbad_array_new_length@std@@":
	.long	0                               # 0x0
	.long	"??1exception@std@@UEAA@XZ"@IMGREL
	.long	0                               # 0x0
	.long	"_CTA3?AVbad_array_new_length@std@@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@"
	.globl	"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@" # @"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@"
"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@":
	.asciz	"bad array new length"

	.section	.rdata,"dr",largest,"??_7bad_array_new_length@std@@6B@"
	.p2align	4, 0x0                          # @0
.L__unnamed_1:
	.quad	"??_R4bad_array_new_length@std@@6B@"
	.quad	"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4bad_array_new_length@std@@6B@"
	.globl	"??_R4bad_array_new_length@std@@6B@" # @"??_R4bad_array_new_length@std@@6B@"
	.p2align	4, 0x0
"??_R4bad_array_new_length@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVbad_array_new_length@std@@@8"@IMGREL
	.long	"??_R3bad_array_new_length@std@@8"@IMGREL
	.long	"??_R4bad_array_new_length@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_R3bad_array_new_length@std@@8"
	.globl	"??_R3bad_array_new_length@std@@8" # @"??_R3bad_array_new_length@std@@8"
	.p2align	3, 0x0
"??_R3bad_array_new_length@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	3                               # 0x3
	.long	"??_R2bad_array_new_length@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2bad_array_new_length@std@@8"
	.globl	"??_R2bad_array_new_length@std@@8" # @"??_R2bad_array_new_length@std@@8"
	.p2align	2, 0x0
"??_R2bad_array_new_length@std@@8":
	.long	"??_R1A@?0A@EA@bad_array_new_length@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@bad_alloc@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@bad_array_new_length@std@@8"
	.globl	"??_R1A@?0A@EA@bad_array_new_length@std@@8" # @"??_R1A@?0A@EA@bad_array_new_length@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@bad_array_new_length@std@@8":
	.long	"??_R0?AVbad_array_new_length@std@@@8"@IMGREL
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3bad_array_new_length@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@bad_alloc@std@@8"
	.globl	"??_R1A@?0A@EA@bad_alloc@std@@8" # @"??_R1A@?0A@EA@bad_alloc@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@bad_alloc@std@@8":
	.long	"??_R0?AVbad_alloc@std@@@8"@IMGREL
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3bad_alloc@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R3bad_alloc@std@@8"
	.globl	"??_R3bad_alloc@std@@8"         # @"??_R3bad_alloc@std@@8"
	.p2align	3, 0x0
"??_R3bad_alloc@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	"??_R2bad_alloc@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2bad_alloc@std@@8"
	.globl	"??_R2bad_alloc@std@@8"         # @"??_R2bad_alloc@std@@8"
	.p2align	2, 0x0
"??_R2bad_alloc@std@@8":
	.long	"??_R1A@?0A@EA@bad_alloc@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@exception@std@@8"
	.globl	"??_R1A@?0A@EA@exception@std@@8" # @"??_R1A@?0A@EA@exception@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@exception@std@@8":
	.long	"??_R0?AVexception@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3exception@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R3exception@std@@8"
	.globl	"??_R3exception@std@@8"         # @"??_R3exception@std@@8"
	.p2align	3, 0x0
"??_R3exception@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2exception@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2exception@std@@8"
	.globl	"??_R2exception@std@@8"         # @"??_R2exception@std@@8"
	.p2align	2, 0x0
"??_R2exception@std@@8":
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",largest,"??_7bad_alloc@std@@6B@"
	.p2align	4, 0x0                          # @1
.L__unnamed_2:
	.quad	"??_R4bad_alloc@std@@6B@"
	.quad	"??_Gbad_alloc@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4bad_alloc@std@@6B@"
	.globl	"??_R4bad_alloc@std@@6B@"       # @"??_R4bad_alloc@std@@6B@"
	.p2align	4, 0x0
"??_R4bad_alloc@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVbad_alloc@std@@@8"@IMGREL
	.long	"??_R3bad_alloc@std@@8"@IMGREL
	.long	"??_R4bad_alloc@std@@6B@"@IMGREL

	.section	.rdata,"dr",largest,"??_7exception@std@@6B@"
	.p2align	4, 0x0                          # @2
.L__unnamed_3:
	.quad	"??_R4exception@std@@6B@"
	.quad	"??_Gexception@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4exception@std@@6B@"
	.globl	"??_R4exception@std@@6B@"       # @"??_R4exception@std@@6B@"
	.p2align	4, 0x0
"??_R4exception@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVexception@std@@@8"@IMGREL
	.long	"??_R3exception@std@@8"@IMGREL
	.long	"??_R4exception@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@"
	.globl	"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@" # @"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@"
"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@":
	.asciz	"Unknown exception"

	.section	.rdata,"dr",discard,"??_C@_0BC@NGMPOJLI@?$FL?$HL?$HN?$FN?5Data?3?3Data?$CI?$CJ?$AA@"
	.globl	"??_C@_0BC@NGMPOJLI@?$FL?$HL?$HN?$FN?5Data?3?3Data?$CI?$CJ?$AA@" # @"??_C@_0BC@NGMPOJLI@?$FL?$HL?$HN?$FN?5Data?3?3Data?$CI?$CJ?$AA@"
"??_C@_0BC@NGMPOJLI@?$FL?$HL?$HN?$FN?5Data?3?3Data?$CI?$CJ?$AA@":
	.asciz	"[{}] Data::Data()"

	.section	.rdata,"dr",largest,"??_7?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
	.p2align	3, 0x0                          # @3
.L__unnamed_4:
	.quad	"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
	.quad	"?_Grow@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@EEAAX_K@Z"

	.section	.rdata,"dr",discard,"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
	.globl	"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@" # @"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
	.p2align	4, 0x0
"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8"@IMGREL
	.long	"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"@IMGREL
	.long	"??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8"
	.globl	"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8" # @"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8"
	.p2align	4, 0x0
"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@"
	.zero	3

	.section	.rdata,"dr",discard,"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.globl	"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8" # @"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.p2align	3, 0x0
"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8":
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	3                               # 0x3
	.long	"??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.globl	"??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8" # @"??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.p2align	2, 0x0
"??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8":
	.long	"??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"@IMGREL
	.long	"??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.globl	"??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8" # @"??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8":
	.long	"??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8"@IMGREL
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8"
	.globl	"??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8" # @"??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8"
	.p2align	4, 0x0
"??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8":
	.long	"??_R0?AU_Fmt_buffer_traits@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	32                              # 0x20
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Fmt_buffer_traits@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AU_Fmt_buffer_traits@std@@@8"
	.globl	"??_R0?AU_Fmt_buffer_traits@std@@@8" # @"??_R0?AU_Fmt_buffer_traits@std@@@8"
	.p2align	4, 0x0
"??_R0?AU_Fmt_buffer_traits@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AU_Fmt_buffer_traits@std@@"
	.zero	3

	.section	.rdata,"dr",discard,"??_R3_Fmt_buffer_traits@std@@8"
	.globl	"??_R3_Fmt_buffer_traits@std@@8" # @"??_R3_Fmt_buffer_traits@std@@8"
	.p2align	3, 0x0
"??_R3_Fmt_buffer_traits@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2_Fmt_buffer_traits@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_Fmt_buffer_traits@std@@8"
	.globl	"??_R2_Fmt_buffer_traits@std@@8" # @"??_R2_Fmt_buffer_traits@std@@8"
	.p2align	2, 0x0
"??_R2_Fmt_buffer_traits@std@@8":
	.long	"??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8"
	.globl	"??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8" # @"??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8":
	.long	"??_R0?AU_Fmt_buffer_traits@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Fmt_buffer_traits@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8"
	.globl	"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8" # @"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8":
	.long	"??_R0?AV?$_Fmt_buffer@D@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3?$_Fmt_buffer@D@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV?$_Fmt_buffer@D@std@@@8"
	.globl	"??_R0?AV?$_Fmt_buffer@D@std@@@8" # @"??_R0?AV?$_Fmt_buffer@D@std@@@8"
	.p2align	4, 0x0
"??_R0?AV?$_Fmt_buffer@D@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV?$_Fmt_buffer@D@std@@"
	.zero	6

	.section	.rdata,"dr",discard,"??_R3?$_Fmt_buffer@D@std@@8"
	.globl	"??_R3?$_Fmt_buffer@D@std@@8"   # @"??_R3?$_Fmt_buffer@D@std@@8"
	.p2align	3, 0x0
"??_R3?$_Fmt_buffer@D@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2?$_Fmt_buffer@D@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2?$_Fmt_buffer@D@std@@8"
	.globl	"??_R2?$_Fmt_buffer@D@std@@8"   # @"??_R2?$_Fmt_buffer@D@std@@8"
	.p2align	2, 0x0
"??_R2?$_Fmt_buffer@D@std@@8":
	.long	"??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",largest,"??_7?$_Fmt_buffer@D@std@@6B@"
	.p2align	3, 0x0                          # @4
.L__unnamed_5:
	.quad	"??_R4?$_Fmt_buffer@D@std@@6B@"
	.quad	_purecall

	.section	.rdata,"dr",discard,"??_R4?$_Fmt_buffer@D@std@@6B@"
	.globl	"??_R4?$_Fmt_buffer@D@std@@6B@" # @"??_R4?$_Fmt_buffer@D@std@@6B@"
	.p2align	4, 0x0
"??_R4?$_Fmt_buffer@D@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV?$_Fmt_buffer@D@std@@@8"@IMGREL
	.long	"??_R3?$_Fmt_buffer@D@std@@8"@IMGREL
	.long	"??_R4?$_Fmt_buffer@D@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_0CA@EOADLFNL@Unmatched?5?8?$HN?8?5in?5format?5string?4?$AA@"
	.globl	"??_C@_0CA@EOADLFNL@Unmatched?5?8?$HN?8?5in?5format?5string?4?$AA@" # @"??_C@_0CA@EOADLFNL@Unmatched?5?8?$HN?8?5in?5format?5string?4?$AA@"
"??_C@_0CA@EOADLFNL@Unmatched?5?8?$HN?8?5in?5format?5string?4?$AA@":
	.asciz	"Unmatched '}' in format string."

	.section	.data,"dw",discard,"??_R0?AVformat_error@std@@@8"
	.globl	"??_R0?AVformat_error@std@@@8"  # @"??_R0?AVformat_error@std@@@8"
	.p2align	4, 0x0
"??_R0?AVformat_error@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVformat_error@std@@"
	.zero	1

	.section	.xdata,"dr",discard,"_CT??_R0?AVformat_error@std@@@8??0format_error@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVformat_error@std@@@8??0format_error@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVformat_error@std@@@8??0format_error@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVformat_error@std@@@8??0format_error@std@@QEAA@AEBV01@@Z24":
	.long	0                               # 0x0
	.long	"??_R0?AVformat_error@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0format_error@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVruntime_error@std@@@8"
	.globl	"??_R0?AVruntime_error@std@@@8" # @"??_R0?AVruntime_error@std@@@8"
	.p2align	4, 0x0
"??_R0?AVruntime_error@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVruntime_error@std@@"

	.section	.xdata,"dr",discard,"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24":
	.long	0                               # 0x0
	.long	"??_R0?AVruntime_error@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0runtime_error@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.xdata,"dr",discard,"_CTA3?AVformat_error@std@@"
	.globl	"_CTA3?AVformat_error@std@@"    # @"_CTA3?AVformat_error@std@@"
	.p2align	3, 0x0
"_CTA3?AVformat_error@std@@":
	.long	3                               # 0x3
	.long	"_CT??_R0?AVformat_error@std@@@8??0format_error@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"@IMGREL

	.section	.xdata,"dr",discard,"_TI3?AVformat_error@std@@"
	.globl	"_TI3?AVformat_error@std@@"     # @"_TI3?AVformat_error@std@@"
	.p2align	3, 0x0
"_TI3?AVformat_error@std@@":
	.long	0                               # 0x0
	.long	"??1exception@std@@UEAA@XZ"@IMGREL
	.long	0                               # 0x0
	.long	"_CTA3?AVformat_error@std@@"@IMGREL

	.section	.rdata,"dr",largest,"??_7format_error@std@@6B@"
	.p2align	4, 0x0                          # @5
.L__unnamed_6:
	.quad	"??_R4format_error@std@@6B@"
	.quad	"??_Gformat_error@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4format_error@std@@6B@"
	.globl	"??_R4format_error@std@@6B@"    # @"??_R4format_error@std@@6B@"
	.p2align	4, 0x0
"??_R4format_error@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVformat_error@std@@@8"@IMGREL
	.long	"??_R3format_error@std@@8"@IMGREL
	.long	"??_R4format_error@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_R3format_error@std@@8"
	.globl	"??_R3format_error@std@@8"      # @"??_R3format_error@std@@8"
	.p2align	3, 0x0
"??_R3format_error@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	3                               # 0x3
	.long	"??_R2format_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2format_error@std@@8"
	.globl	"??_R2format_error@std@@8"      # @"??_R2format_error@std@@8"
	.p2align	2, 0x0
"??_R2format_error@std@@8":
	.long	"??_R1A@?0A@EA@format_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@runtime_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@format_error@std@@8"
	.globl	"??_R1A@?0A@EA@format_error@std@@8" # @"??_R1A@?0A@EA@format_error@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@format_error@std@@8":
	.long	"??_R0?AVformat_error@std@@@8"@IMGREL
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3format_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@runtime_error@std@@8"
	.globl	"??_R1A@?0A@EA@runtime_error@std@@8" # @"??_R1A@?0A@EA@runtime_error@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@runtime_error@std@@8":
	.long	"??_R0?AVruntime_error@std@@@8"@IMGREL
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3runtime_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R3runtime_error@std@@8"
	.globl	"??_R3runtime_error@std@@8"     # @"??_R3runtime_error@std@@8"
	.p2align	3, 0x0
"??_R3runtime_error@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	"??_R2runtime_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2runtime_error@std@@8"
	.globl	"??_R2runtime_error@std@@8"     # @"??_R2runtime_error@std@@8"
	.p2align	2, 0x0
"??_R2runtime_error@std@@8":
	.long	"??_R1A@?0A@EA@runtime_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",largest,"??_7runtime_error@std@@6B@"
	.p2align	4, 0x0                          # @6
.L__unnamed_7:
	.quad	"??_R4runtime_error@std@@6B@"
	.quad	"??_Gruntime_error@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4runtime_error@std@@6B@"
	.globl	"??_R4runtime_error@std@@6B@"   # @"??_R4runtime_error@std@@6B@"
	.p2align	4, 0x0
"??_R4runtime_error@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVruntime_error@std@@@8"@IMGREL
	.long	"??_R3runtime_error@std@@8"@IMGREL
	.long	"??_R4runtime_error@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"
	.globl	"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@" # @"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@"
"??_C@_0BH@MCHHCMKF@Invalid?5format?5string?4?$AA@":
	.asciz	"Invalid format string."

	.section	.rdata,"dr",discard,"??_C@_0BK@NMCHMIGI@Unknown?5format?5specifier?4?$AA@"
	.globl	"??_C@_0BK@NMCHMIGI@Unknown?5format?5specifier?4?$AA@" # @"??_C@_0BK@NMCHMIGI@Unknown?5format?5specifier?4?$AA@"
"??_C@_0BK@NMCHMIGI@Unknown?5format?5specifier?4?$AA@":
	.asciz	"Unknown format specifier."

	.section	.rdata,"dr",discard,"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@"
	.globl	"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@" # @"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@"
"??_C@_0BO@FFAGMLDI@Missing?5?8?$HN?8?5in?5format?5string?4?$AA@":
	.asciz	"Missing '}' in format string."

	.section	.rdata,"dr",discard,"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"
	.globl	"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@" # @"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@"
"??_C@_0BE@JHBJMIJI@Argument?5not?5found?4?$AA@":
	.asciz	"Argument not found."

	.section	.rdata,"dr",discard,"?_Charconv_digits@std@@3QBDB"
	.globl	"?_Charconv_digits@std@@3QBDB"  # @"?_Charconv_digits@std@@3QBDB"
	.p2align	4, 0x0
"?_Charconv_digits@std@@3QBDB":
	.ascii	"0123456789abcdefghijklmnopqrstuvwxyz"

	.section	.rdata,"dr",discard,"??_C@_04LOAJBDKD@true?$AA@"
	.globl	"??_C@_04LOAJBDKD@true?$AA@"    # @"??_C@_04LOAJBDKD@true?$AA@"
"??_C@_04LOAJBDKD@true?$AA@":
	.asciz	"true"

	.section	.rdata,"dr",discard,"??_C@_05LAPONLG@false?$AA@"
	.globl	"??_C@_05LAPONLG@false?$AA@"    # @"??_C@_05LAPONLG@false?$AA@"
"??_C@_05LAPONLG@false?$AA@":
	.asciz	"false"

	.section	.rdata,"dr",discard,"??_C@_0BI@KLAHEKGE@String?5pointer?5is?5null?4?$AA@"
	.globl	"??_C@_0BI@KLAHEKGE@String?5pointer?5is?5null?4?$AA@" # @"??_C@_0BI@KLAHEKGE@String?5pointer?5is?5null?4?$AA@"
"??_C@_0BI@KLAHEKGE@String?5pointer?5is?5null?4?$AA@":
	.asciz	"String pointer is null."

	.section	.rdata,"dr",discard,"??_C@_03LHCJEHON@nan?$AA@"
	.globl	"??_C@_03LHCJEHON@nan?$AA@"     # @"??_C@_03LHCJEHON@nan?$AA@"
"??_C@_03LHCJEHON@nan?$AA@":
	.asciz	"nan"

	.section	.rdata,"dr",discard,"??_C@_03OJHLLCGB@inf?$AA@"
	.globl	"??_C@_03OJHLLCGB@inf?$AA@"     # @"??_C@_03OJHLLCGB@inf?$AA@"
"??_C@_03OJHLLCGB@inf?$AA@":
	.asciz	"inf"

	.section	.rdata,"dr",discard,"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"
	.globl	"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@" # @"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@"
"??_C@_08OFCDMILK@nan?$CIind?$CJ?$AA@":
	.asciz	"nan(ind)"

	.section	.rdata,"dr",discard,"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"
	.globl	"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@" # @"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@"
"??_C@_09IPFBKMDL@nan?$CIsnan?$CJ?$AA@":
	.asciz	"nan(snan)"

	.section	.rdata,"dr",discard,"??_C@_05JHILFKJA@0e?$CL00?$AA@"
	.globl	"??_C@_05JHILFKJA@0e?$CL00?$AA@" # @"??_C@_05JHILFKJA@0e?$CL00?$AA@"
"??_C@_05JHILFKJA@0e?$CL00?$AA@":
	.asciz	"0e+00"

	.section	.rdata,"dr",discard,"??$__DIGIT_TABLE@D@std@@3QBDB"
	.globl	"??$__DIGIT_TABLE@D@std@@3QBDB" # @"??$__DIGIT_TABLE@D@std@@3QBDB"
	.p2align	4, 0x0
"??$__DIGIT_TABLE@D@std@@3QBDB":
	.ascii	"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"

	.section	.rdata,"dr",discard,"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB"
	.globl	"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB" # @"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB"
	.p2align	4, 0x0
"?__FLOAT_POW5_INV_SPLIT@std@@3QB_KB":
	.quad	576460752303423489              # 0x800000000000001
	.quad	461168601842738791              # 0x666666666666667
	.quad	368934881474191033              # 0x51eb851eb851eb9
	.quad	295147905179352826              # 0x4189374bc6a7efa
	.quad	472236648286964522              # 0x68db8bac710cb2a
	.quad	377789318629571618              # 0x53e2d6238da3c22
	.quad	302231454903657294              # 0x431bde82d7b634e
	.quad	483570327845851670              # 0x6b5fca6af2bd216
	.quad	386856262276681336              # 0x55e63b88c230e78
	.quad	309485009821345069              # 0x44b82fa09b5a52d
	.quad	495176015714152110              # 0x6df37f675ef6eae
	.quad	396140812571321688              # 0x57f5ff85e592558
	.quad	316912650057057351              # 0x465e6604b7a8447
	.quad	507060240091291761              # 0x709709a125da071
	.quad	405648192073033409              # 0x5a126e1a84ae6c1
	.quad	324518553658426727              # 0x480ebe7b9d58567
	.quad	519229685853482763              # 0x734aca5f6226f0b
	.quad	415383748682786211              # 0x5c3bd5191b525a3
	.quad	332306998946228969              # 0x49c97747490eae9
	.quad	531691198313966350              # 0x760f253edb4ab0e
	.quad	425352958651173080              # 0x5e72843249088d8
	.quad	340282366920938464              # 0x4b8ed0283a6d3e0
	.quad	544451787073501542              # 0x78e480405d7b966
	.quad	435561429658801234              # 0x60b6cd004ac9452
	.quad	348449143727040987              # 0x4d5f0a66a23a9db
	.quad	557518629963265579              # 0x7bcb43d769f762b
	.quad	446014903970612463              # 0x63090312bb2c4ef
	.quad	356811923176489971              # 0x4f3a68dbc8f03f3
	.quad	570899077082383953              # 0x7ec3daf94180651
	.quad	456719261665907162              # 0x65697bfa9acd1da
	.quad	365375409332725730              # 0x51212ffbaf0a7e2

	.section	.rdata,"dr",discard,"?__FLOAT_POW5_SPLIT@std@@3QB_KB"
	.globl	"?__FLOAT_POW5_SPLIT@std@@3QB_KB" # @"?__FLOAT_POW5_SPLIT@std@@3QB_KB"
	.p2align	4, 0x0
"?__FLOAT_POW5_SPLIT@std@@3QB_KB":
	.quad	1152921504606846976             # 0x1000000000000000
	.quad	1441151880758558720             # 0x1400000000000000
	.quad	1801439850948198400             # 0x1900000000000000
	.quad	2251799813685248000             # 0x1f40000000000000
	.quad	1407374883553280000             # 0x1388000000000000
	.quad	1759218604441600000             # 0x186a000000000000
	.quad	2199023255552000000             # 0x1e84800000000000
	.quad	1374389534720000000             # 0x1312d00000000000
	.quad	1717986918400000000             # 0x17d7840000000000
	.quad	2147483648000000000             # 0x1dcd650000000000
	.quad	1342177280000000000             # 0x12a05f2000000000
	.quad	1677721600000000000             # 0x174876e800000000
	.quad	2097152000000000000             # 0x1d1a94a200000000
	.quad	1310720000000000000             # 0x12309ce540000000
	.quad	1638400000000000000             # 0x16bcc41e90000000
	.quad	2048000000000000000             # 0x1c6bf52634000000
	.quad	1280000000000000000             # 0x11c37937e0800000
	.quad	1600000000000000000             # 0x16345785d8a00000
	.quad	2000000000000000000             # 0x1bc16d674ec80000
	.quad	1250000000000000000             # 0x1158e460913d0000
	.quad	1562500000000000000             # 0x15af1d78b58c4000
	.quad	1953125000000000000             # 0x1b1ae4d6e2ef5000
	.quad	1220703125000000000             # 0x10f0cf064dd59200
	.quad	1525878906250000000             # 0x152d02c7e14af680
	.quad	1907348632812500000             # 0x1a784379d99db420
	.quad	1192092895507812500             # 0x108b2a2c28029094
	.quad	1490116119384765625             # 0x14adf4b7320334b9
	.quad	1862645149230957031             # 0x19d971e4fe8401e7
	.quad	1164153218269348144             # 0x1027e72f1f128130
	.quad	1455191522836685180             # 0x1431e0fae6d7217c
	.quad	1818989403545856475             # 0x193e5939a08ce9db
	.quad	2273736754432320594             # 0x1f8def8808b02452
	.quad	1421085471520200371             # 0x13b8b5b5056e16b3
	.quad	1776356839400250464             # 0x18a6e32246c99c60
	.quad	2220446049250313080             # 0x1ed09bead87c0378
	.quad	1387778780781445675             # 0x13426172c74d822b
	.quad	1734723475976807094             # 0x1812f9cf7920e2b6
	.quad	2168404344971008868             # 0x1e17b84357691b64
	.quad	1355252715606880542             # 0x12ced32a16a1b11e
	.quad	1694065894508600678             # 0x178287f49c4a1d66
	.quad	2117582368135750847             # 0x1d6329f1c35ca4bf
	.quad	1323488980084844279             # 0x125dfa371a19e6f7
	.quad	1654361225106055349             # 0x16f578c4e0a060b5
	.quad	2067951531382569187             # 0x1cb2d6f618c878e3
	.quad	1292469707114105741             # 0x11efc659cf7d4b8d
	.quad	1615587133892632177             # 0x166bb7f0435c9e71
	.quad	2019483917365790221             # 0x1c06a5ec5433c60d

	.section	.rdata,"dr",discard,"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBEB"
	.globl	"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBEB" # @"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBEB"
	.p2align	4, 0x0
"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBEB":
	.ascii	"\000\000\000\000\000\000\000\000\000\000\000\001\001\001\000\001\000\001\001\001\000\000\001\001\000\001\000\001\001\000\000\001\000\001\001\000\001\001\001"

	.section	.rdata,"dr",discard,"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBIB"
	.globl	"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBIB" # @"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBIB"
	.p2align	4, 0x0
"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_32@1@W4chars_format@1@II@Z@4QBIB":
	.long	16777215                        # 0xffffff
	.long	3355443                         # 0x333333
	.long	671088                          # 0xa3d70
	.long	134217                          # 0x20c49
	.long	26843                           # 0x68db
	.long	5368                            # 0x14f8
	.long	1073                            # 0x431
	.long	214                             # 0xd6
	.long	42                              # 0x2a
	.long	8                               # 0x8
	.long	1                               # 0x1

	.section	.rdata,"dr",discard,"?__POW10_OFFSET@std@@3QBGB"
	.globl	"?__POW10_OFFSET@std@@3QBGB"    # @"?__POW10_OFFSET@std@@3QBGB"
	.p2align	4, 0x0
"?__POW10_OFFSET@std@@3QBGB":
	.short	0                               # 0x0
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	8                               # 0x8
	.short	12                              # 0xc
	.short	16                              # 0x10
	.short	21                              # 0x15
	.short	26                              # 0x1a
	.short	32                              # 0x20
	.short	39                              # 0x27
	.short	46                              # 0x2e
	.short	54                              # 0x36
	.short	62                              # 0x3e
	.short	71                              # 0x47
	.short	80                              # 0x50
	.short	90                              # 0x5a
	.short	100                             # 0x64
	.short	111                             # 0x6f
	.short	122                             # 0x7a
	.short	134                             # 0x86
	.short	146                             # 0x92
	.short	159                             # 0x9f
	.short	173                             # 0xad
	.short	187                             # 0xbb
	.short	202                             # 0xca
	.short	217                             # 0xd9
	.short	233                             # 0xe9
	.short	249                             # 0xf9
	.short	266                             # 0x10a
	.short	283                             # 0x11b
	.short	301                             # 0x12d
	.short	319                             # 0x13f
	.short	338                             # 0x152
	.short	357                             # 0x165
	.short	377                             # 0x179
	.short	397                             # 0x18d
	.short	418                             # 0x1a2
	.short	440                             # 0x1b8
	.short	462                             # 0x1ce
	.short	485                             # 0x1e5
	.short	508                             # 0x1fc
	.short	532                             # 0x214
	.short	556                             # 0x22c
	.short	581                             # 0x245
	.short	606                             # 0x25e
	.short	632                             # 0x278
	.short	658                             # 0x292
	.short	685                             # 0x2ad
	.short	712                             # 0x2c8
	.short	740                             # 0x2e4
	.short	769                             # 0x301
	.short	798                             # 0x31e
	.short	828                             # 0x33c
	.short	858                             # 0x35a
	.short	889                             # 0x379
	.short	920                             # 0x398
	.short	952                             # 0x3b8
	.short	984                             # 0x3d8
	.short	1017                            # 0x3f9
	.short	1050                            # 0x41a
	.short	1084                            # 0x43c
	.short	1118                            # 0x45e
	.short	1153                            # 0x481
	.short	1188                            # 0x4a4

	.section	.rdata,"dr",discard,"?__MIN_BLOCK_2@std@@3QBEB"
	.globl	"?__MIN_BLOCK_2@std@@3QBEB"     # @"?__MIN_BLOCK_2@std@@3QBEB"
	.p2align	4, 0x0
"?__MIN_BLOCK_2@std@@3QBEB":
	.asciz	"\000\000\000\000\000\000\001\001\002\003\003\004\004\005\005\006\006\007\007\b\b\t\t\n\013\013\f\f\r\r\016\016\017\017\020\020\021\021\022\023\023\024\024\025\025\026\026\027\027\030\030\031\032\032\033\033\034\034\035\035\036\036\037\037  !\""

	.section	.rdata,"dr",discard,"?__POW10_OFFSET_2@std@@3QBGB"
	.globl	"?__POW10_OFFSET_2@std@@3QBGB"  # @"?__POW10_OFFSET_2@std@@3QBGB"
	.p2align	4, 0x0
"?__POW10_OFFSET_2@std@@3QBGB":
	.short	0                               # 0x0
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	12                              # 0xc
	.short	20                              # 0x14
	.short	29                              # 0x1d
	.short	40                              # 0x28
	.short	52                              # 0x34
	.short	66                              # 0x42
	.short	80                              # 0x50
	.short	95                              # 0x5f
	.short	112                             # 0x70
	.short	130                             # 0x82
	.short	150                             # 0x96
	.short	170                             # 0xaa
	.short	192                             # 0xc0
	.short	215                             # 0xd7
	.short	240                             # 0xf0
	.short	265                             # 0x109
	.short	292                             # 0x124
	.short	320                             # 0x140
	.short	350                             # 0x15e
	.short	381                             # 0x17d
	.short	413                             # 0x19d
	.short	446                             # 0x1be
	.short	480                             # 0x1e0
	.short	516                             # 0x204
	.short	552                             # 0x228
	.short	590                             # 0x24e
	.short	629                             # 0x275
	.short	670                             # 0x29e
	.short	712                             # 0x2c8
	.short	755                             # 0x2f3
	.short	799                             # 0x31f
	.short	845                             # 0x34d
	.short	892                             # 0x37c
	.short	940                             # 0x3ac
	.short	989                             # 0x3dd
	.short	1040                            # 0x410
	.short	1092                            # 0x444
	.short	1145                            # 0x479
	.short	1199                            # 0x4af
	.short	1254                            # 0x4e6
	.short	1311                            # 0x51f
	.short	1369                            # 0x559
	.short	1428                            # 0x594
	.short	1488                            # 0x5d0
	.short	1550                            # 0x60e
	.short	1613                            # 0x64d
	.short	1678                            # 0x68e
	.short	1743                            # 0x6cf
	.short	1810                            # 0x712
	.short	1878                            # 0x756
	.short	1947                            # 0x79b
	.short	2017                            # 0x7e1
	.short	2088                            # 0x828
	.short	2161                            # 0x871
	.short	2235                            # 0x8bb
	.short	2311                            # 0x907
	.short	2387                            # 0x953
	.short	2465                            # 0x9a1
	.short	2544                            # 0x9f0
	.short	2625                            # 0xa41
	.short	2706                            # 0xa92
	.short	2789                            # 0xae5
	.short	2873                            # 0xb39
	.short	2959                            # 0xb8f
	.short	3046                            # 0xbe6
	.short	3133                            # 0xc3d

	.section	.rdata,"dr",discard,"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QBEB"
	.globl	"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QBEB" # @"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QBEB"
	.p2align	4, 0x0
"?_Adjustment@?CB@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QBEB":
	.asciz	

	.section	.rdata,"dr",discard,"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QB_KB"
	.globl	"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QB_KB" # @"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QB_KB"
	.p2align	4, 0x0
"?_Max_shifted_mantissa@?DC@???$__to_chars@D@std@@YA?AU?$pair@PEADW4errc@std@@@1@QEAD0U__floating_decimal_64@1@W4chars_format@1@N@Z@4QB_KB":
	.quad	9007199254740991                # 0x1fffffffffffff
	.quad	1801439850948198                # 0x6666666666666
	.quad	360287970189639                 # 0x147ae147ae147
	.quad	72057594037927                  # 0x4189374bc6a7
	.quad	14411518807585                  # 0xd1b71758e21
	.quad	2882303761517                   # 0x29f16b11c6d
	.quad	576460752303                    # 0x8637bd05af
	.quad	115292150460                    # 0x1ad7f29abc
	.quad	23058430092                     # 0x55e63b88c
	.quad	4611686018                      # 0x112e0be82
	.quad	922337203                       # 0x36f9bfb3
	.quad	184467440                       # 0xafebff0
	.quad	36893488                        # 0x232f330
	.quad	7378697                         # 0x709709
	.quad	1475739                         # 0x16849b
	.quad	295147                          # 0x480eb
	.quad	59029                           # 0xe695
	.quad	11805                           # 0x2e1d
	.quad	2361                            # 0x939
	.quad	472                             # 0x1d8
	.quad	94                              # 0x5e
	.quad	18                              # 0x12
	.quad	3                               # 0x3

	.section	.rdata,"dr",discard,"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"
	.globl	"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@" # @"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@"
"??_C@_0DB@GIGELLBG@Can?5not?5switch?5from?5manual?5to?5au@":
	.asciz	"Can not switch from manual to automatic indexing"

	.section	.rdata,"dr",discard,"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"
	.globl	"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@" # @"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@"
"??_C@_0BC@JOAOKPFE@Number?5is?5too?5big?$AA@":
	.asciz	"Number is too big"

	.section	.rdata,"dr",discard,"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@"
	.globl	"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@" # @"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@"
"??_C@_0DB@FGJJGOLD@Can?5not?5switch?5from?5automatic?5to@":
	.asciz	"Can not switch from automatic to manual indexing"

	.section	.rdata,"dr",discard,"??_C@_0BL@KNEDAEPA@invalid?5fill?5character?5?8?$HL?8?$AA@"
	.globl	"??_C@_0BL@KNEDAEPA@invalid?5fill?5character?5?8?$HL?8?$AA@" # @"??_C@_0BL@KNEDAEPA@invalid?5fill?5character?5?8?$HL?8?$AA@"
"??_C@_0BL@KNEDAEPA@invalid?5fill?5character?5?8?$HL?8?$AA@":
	.asciz	"invalid fill character '{'"

	.section	.rdata,"dr",discard,"??_C@_0BJ@FNNNKMGD@Invalid?5fill?5?$CItoo?5long?$CJ?4?$AA@"
	.globl	"??_C@_0BJ@FNNNKMGD@Invalid?5fill?5?$CItoo?5long?$CJ?4?$AA@" # @"??_C@_0BJ@FNNNKMGD@Invalid?5fill?5?$CItoo?5long?$CJ?4?$AA@"
"??_C@_0BJ@FNNNKMGD@Invalid?5fill?5?$CItoo?5long?$CJ?4?$AA@":
	.asciz	"Invalid fill (too long)."

	.section	.rdata,"dr",discard,"??_C@_0CM@EFKJINMJ@Format?5specifier?5requires?5numeri@"
	.globl	"??_C@_0CM@EFKJINMJ@Format?5specifier?5requires?5numeri@" # @"??_C@_0CM@EFKJINMJ@Format?5specifier?5requires?5numeri@"
"??_C@_0CM@EFKJINMJ@Format?5specifier?5requires?5numeri@":
	.asciz	"Format specifier requires numeric argument."

	.section	.rdata,"dr",discard,"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"
	.globl	"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@" # @"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@"
"??_C@_0BD@GHJPJCGO@Number?5is?5too?5big?4?$AA@":
	.asciz	"Number is too big."

	.section	.rdata,"dr",discard,"??_C@_0BJ@FLMOJPKL@Width?5is?5not?5an?5integer?4?$AA@"
	.globl	"??_C@_0BJ@FLMOJPKL@Width?5is?5not?5an?5integer?4?$AA@" # @"??_C@_0BJ@FLMOJPKL@Width?5is?5not?5an?5integer?4?$AA@"
"??_C@_0BJ@FLMOJPKL@Width?5is?5not?5an?5integer?4?$AA@":
	.asciz	"Width is not an integer."

	.section	.rdata,"dr",discard,"??_C@_0BA@INGMONDA@Negative?5width?4?$AA@"
	.globl	"??_C@_0BA@INGMONDA@Negative?5width?4?$AA@" # @"??_C@_0BA@INGMONDA@Negative?5width?4?$AA@"
"??_C@_0BA@INGMONDA@Negative?5width?4?$AA@":
	.asciz	"Negative width."

	.section	.rdata,"dr",discard,"??_C@_0BN@CAABEHAA@Missing?5precision?5specifier?4?$AA@"
	.globl	"??_C@_0BN@CAABEHAA@Missing?5precision?5specifier?4?$AA@" # @"??_C@_0BN@CAABEHAA@Missing?5precision?5specifier?4?$AA@"
"??_C@_0BN@CAABEHAA@Missing?5precision?5specifier?4?$AA@":
	.asciz	"Missing precision specifier."

	.section	.rdata,"dr",discard,"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@"
	.globl	"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@" # @"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@"
"??_C@_0CO@ILLNLEBH@Precision?5not?5allowed?5for?5this?5a@":
	.asciz	"Precision not allowed for this argument type."

	.section	.rdata,"dr",discard,"??_C@_0BN@DNNEEKIC@Precision?5is?5not?5an?5integer?4?$AA@"
	.globl	"??_C@_0BN@DNNEEKIC@Precision?5is?5not?5an?5integer?4?$AA@" # @"??_C@_0BN@DNNEEKIC@Precision?5is?5not?5an?5integer?4?$AA@"
"??_C@_0BN@DNNEEKIC@Precision?5is?5not?5an?5integer?4?$AA@":
	.asciz	"Precision is not an integer."

	.section	.rdata,"dr",discard,"??_C@_0BE@DEGOCOHL@Negative?5precision?4?$AA@"
	.globl	"??_C@_0BE@DEGOCOHL@Negative?5precision?4?$AA@" # @"??_C@_0BE@DEGOCOHL@Negative?5precision?4?$AA@"
"??_C@_0BE@DEGOCOHL@Negative?5precision?4?$AA@":
	.asciz	"Negative precision."

	.section	.rdata,"dr",discard,"??_C@_0BM@ONFDPAFF@Invalid?5type?5specification?4?$AA@"
	.globl	"??_C@_0BM@ONFDPAFF@Invalid?5type?5specification?4?$AA@" # @"??_C@_0BM@ONFDPAFF@Invalid?5type?5specification?4?$AA@"
"??_C@_0BM@ONFDPAFF@Invalid?5type?5specification?4?$AA@":
	.asciz	"Invalid type specification."

	.section	.rdata,"dr",discard,"??_C@_0CE@OLPMMFCN@Invalid?5presentation?5type?5specif@"
	.globl	"??_C@_0CE@OLPMMFCN@Invalid?5presentation?5type?5specif@" # @"??_C@_0CE@OLPMMFCN@Invalid?5presentation?5type?5specif@"
"??_C@_0CE@OLPMMFCN@Invalid?5presentation?5type?5specif@":
	.asciz	"Invalid presentation type specifier"

	.section	.rdata,"dr",discard,"??_C@_0CD@PLBGEFIO@Invalid?5presentation?5type?5for?5bo@"
	.globl	"??_C@_0CD@PLBGEFIO@Invalid?5presentation?5type?5for?5bo@" # @"??_C@_0CD@PLBGEFIO@Invalid?5presentation?5type?5for?5bo@"
"??_C@_0CD@PLBGEFIO@Invalid?5presentation?5type?5for?5bo@":
	.asciz	"Invalid presentation type for bool"

	.section	.rdata,"dr",discard,"??_C@_0CD@IFHOEGFC@Invalid?5presentation?5type?5for?5ch@"
	.globl	"??_C@_0CD@IFHOEGFC@Invalid?5presentation?5type?5for?5ch@" # @"??_C@_0CD@IFHOEGFC@Invalid?5presentation?5type?5for?5ch@"
"??_C@_0CD@IFHOEGFC@Invalid?5presentation?5type?5for?5ch@":
	.asciz	"Invalid presentation type for char"

	.section	.rdata,"dr",discard,"??_C@_0CG@PIIJGCKO@Invalid?5presentation?5type?5for?5in@"
	.globl	"??_C@_0CG@PIIJGCKO@Invalid?5presentation?5type?5for?5in@" # @"??_C@_0CG@PIIJGCKO@Invalid?5presentation?5type?5for?5in@"
"??_C@_0CG@PIIJGCKO@Invalid?5presentation?5type?5for?5in@":
	.asciz	"Invalid presentation type for integer"

	.section	.rdata,"dr",discard,"??_C@_0CN@EEOMCCM@Invalid?5presentation?5type?5for?5fl@"
	.globl	"??_C@_0CN@EEOMCCM@Invalid?5presentation?5type?5for?5fl@" # @"??_C@_0CN@EEOMCCM@Invalid?5presentation?5type?5for?5fl@"
"??_C@_0CN@EEOMCCM@Invalid?5presentation?5type?5for?5fl@":
	.asciz	"Invalid presentation type for floating-point"

	.section	.rdata,"dr",discard,"??_C@_0CF@MMFFCGKF@Invalid?5presentation?5type?5for?5st@"
	.globl	"??_C@_0CF@MMFFCGKF@Invalid?5presentation?5type?5for?5st@" # @"??_C@_0CF@MMFFCGKF@Invalid?5presentation?5type?5for?5st@"
"??_C@_0CF@MMFFCGKF@Invalid?5presentation?5type?5for?5st@":
	.asciz	"Invalid presentation type for string"

	.section	.rdata,"dr",discard,"??_C@_0CG@LHDOJLDP@Invalid?5presentation?5type?5for?5po@"
	.globl	"??_C@_0CG@LHDOJLDP@Invalid?5presentation?5type?5for?5po@" # @"??_C@_0CG@LHDOJLDP@Invalid?5presentation?5type?5for?5po@"
"??_C@_0CG@LHDOJLDP@Invalid?5presentation?5type?5for?5po@":
	.asciz	"Invalid presentation type for pointer"

	.section	.rdata,"dr",discard,"??_C@_0DI@JFEOALGI@Modifier?5requires?5an?5integer?5pre@"
	.globl	"??_C@_0DI@JFEOALGI@Modifier?5requires?5an?5integer?5pre@" # @"??_C@_0DI@JFEOALGI@Modifier?5requires?5an?5integer?5pre@"
"??_C@_0DI@JFEOALGI@Modifier?5requires?5an?5integer?5pre@":
	.asciz	"Modifier requires an integer presentation type for bool"

	.section	.rdata,"dr",discard,"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"
	.globl	"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@" # @"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@"
"??_C@_0CC@OGKFJOLL@integral?5cannot?5be?5stored?5in?5cha@":
	.asciz	"integral cannot be stored in char"

	.section	.rdata,"dr",discard,"??_C@_02HDBOMKFI@0b?$AA@"
	.globl	"??_C@_02HDBOMKFI@0b?$AA@"      # @"??_C@_02HDBOMKFI@0b?$AA@"
"??_C@_02HDBOMKFI@0b?$AA@":
	.asciz	"0b"

	.section	.rdata,"dr",discard,"??_C@_02OGJKOOPK@0B?$AA@"
	.globl	"??_C@_02OGJKOOPK@0B?$AA@"      # @"??_C@_02OGJKOOPK@0B?$AA@"
"??_C@_02OGJKOOPK@0B?$AA@":
	.asciz	"0B"

	.section	.rdata,"dr",discard,"??_C@_02MDDDDAID@0x?$AA@"
	.globl	"??_C@_02MDDDDAID@0x?$AA@"      # @"??_C@_02MDDDDAID@0x?$AA@"
"??_C@_02MDDDDAID@0x?$AA@":
	.asciz	"0x"

	.section	.rdata,"dr",discard,"??_C@_02FGLHBECB@0X?$AA@"
	.globl	"??_C@_02FGLHBECB@0X?$AA@"      # @"??_C@_02FGLHBECB@0X?$AA@"
"??_C@_02FGLHBECB@0X?$AA@":
	.asciz	"0X"

	.section	.rdata,"dr",discard,"??_C@_01GBGANLPD@0?$AA@"
	.globl	"??_C@_01GBGANLPD@0?$AA@"       # @"??_C@_01GBGANLPD@0?$AA@"
"??_C@_01GBGANLPD@0?$AA@":
	.asciz	"0"

	.section	.rdata,"dr",discard,"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"
	.globl	"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B" # @"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"
	.p2align	2, 0x0
"?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B":
	.long	32                              # 0x20
	.long	161                             # 0xa1
	.long	174                             # 0xae
	.long	890                             # 0x37a
	.long	900                             # 0x384
	.long	908                             # 0x38c
	.long	910                             # 0x38e
	.long	931                             # 0x3a3
	.long	1329                            # 0x531
	.long	1369                            # 0x559
	.long	1421                            # 0x58d
	.long	1425                            # 0x591
	.long	1488                            # 0x5d0
	.long	1519                            # 0x5ef
	.long	1542                            # 0x606
	.long	1565                            # 0x61d
	.long	1758                            # 0x6de
	.long	1808                            # 0x710
	.long	1869                            # 0x74d
	.long	1984                            # 0x7c0
	.long	2045                            # 0x7fd
	.long	2096                            # 0x830
	.long	2112                            # 0x840
	.long	2142                            # 0x85e
	.long	2144                            # 0x860
	.long	2160                            # 0x870
	.long	2200                            # 0x898
	.long	2275                            # 0x8e3
	.long	2437                            # 0x985
	.long	2447                            # 0x98f
	.long	2451                            # 0x993
	.long	2474                            # 0x9aa
	.long	2482                            # 0x9b2
	.long	2486                            # 0x9b6
	.long	2492                            # 0x9bc
	.long	2503                            # 0x9c7
	.long	2507                            # 0x9cb
	.long	2519                            # 0x9d7
	.long	2524                            # 0x9dc
	.long	2527                            # 0x9df
	.long	2534                            # 0x9e6
	.long	2561                            # 0xa01
	.long	2565                            # 0xa05
	.long	2575                            # 0xa0f
	.long	2579                            # 0xa13
	.long	2602                            # 0xa2a
	.long	2610                            # 0xa32
	.long	2613                            # 0xa35
	.long	2616                            # 0xa38
	.long	2620                            # 0xa3c
	.long	2622                            # 0xa3e
	.long	2631                            # 0xa47
	.long	2635                            # 0xa4b
	.long	2641                            # 0xa51
	.long	2649                            # 0xa59
	.long	2654                            # 0xa5e
	.long	2662                            # 0xa66
	.long	2689                            # 0xa81
	.long	2693                            # 0xa85
	.long	2703                            # 0xa8f
	.long	2707                            # 0xa93
	.long	2730                            # 0xaaa
	.long	2738                            # 0xab2
	.long	2741                            # 0xab5
	.long	2748                            # 0xabc
	.long	2759                            # 0xac7
	.long	2763                            # 0xacb
	.long	2768                            # 0xad0
	.long	2784                            # 0xae0
	.long	2790                            # 0xae6
	.long	2809                            # 0xaf9
	.long	2817                            # 0xb01
	.long	2821                            # 0xb05
	.long	2831                            # 0xb0f
	.long	2835                            # 0xb13
	.long	2858                            # 0xb2a
	.long	2866                            # 0xb32
	.long	2869                            # 0xb35
	.long	2876                            # 0xb3c
	.long	2887                            # 0xb47
	.long	2891                            # 0xb4b
	.long	2901                            # 0xb55
	.long	2908                            # 0xb5c
	.long	2911                            # 0xb5f
	.long	2918                            # 0xb66
	.long	2946                            # 0xb82
	.long	2949                            # 0xb85
	.long	2958                            # 0xb8e
	.long	2962                            # 0xb92
	.long	2969                            # 0xb99
	.long	2972                            # 0xb9c
	.long	2974                            # 0xb9e
	.long	2979                            # 0xba3
	.long	2984                            # 0xba8
	.long	2990                            # 0xbae
	.long	3006                            # 0xbbe
	.long	3014                            # 0xbc6
	.long	3018                            # 0xbca
	.long	3024                            # 0xbd0
	.long	3031                            # 0xbd7
	.long	3046                            # 0xbe6
	.long	3072                            # 0xc00
	.long	3086                            # 0xc0e
	.long	3090                            # 0xc12
	.long	3114                            # 0xc2a
	.long	3132                            # 0xc3c
	.long	3142                            # 0xc46
	.long	3146                            # 0xc4a
	.long	3157                            # 0xc55
	.long	3160                            # 0xc58
	.long	3165                            # 0xc5d
	.long	3168                            # 0xc60
	.long	3174                            # 0xc66
	.long	3191                            # 0xc77
	.long	3214                            # 0xc8e
	.long	3218                            # 0xc92
	.long	3242                            # 0xcaa
	.long	3253                            # 0xcb5
	.long	3260                            # 0xcbc
	.long	3270                            # 0xcc6
	.long	3274                            # 0xcca
	.long	3285                            # 0xcd5
	.long	3293                            # 0xcdd
	.long	3296                            # 0xce0
	.long	3302                            # 0xce6
	.long	3313                            # 0xcf1
	.long	3328                            # 0xd00
	.long	3342                            # 0xd0e
	.long	3346                            # 0xd12
	.long	3398                            # 0xd46
	.long	3402                            # 0xd4a
	.long	3412                            # 0xd54
	.long	3430                            # 0xd66
	.long	3457                            # 0xd81
	.long	3461                            # 0xd85
	.long	3482                            # 0xd9a
	.long	3507                            # 0xdb3
	.long	3517                            # 0xdbd
	.long	3520                            # 0xdc0
	.long	3530                            # 0xdca
	.long	3535                            # 0xdcf
	.long	3542                            # 0xdd6
	.long	3544                            # 0xdd8
	.long	3558                            # 0xde6
	.long	3570                            # 0xdf2
	.long	3585                            # 0xe01
	.long	3647                            # 0xe3f
	.long	3713                            # 0xe81
	.long	3716                            # 0xe84
	.long	3718                            # 0xe86
	.long	3724                            # 0xe8c
	.long	3749                            # 0xea5
	.long	3751                            # 0xea7
	.long	3776                            # 0xec0
	.long	3782                            # 0xec6
	.long	3784                            # 0xec8
	.long	3792                            # 0xed0
	.long	3804                            # 0xedc
	.long	3840                            # 0xf00
	.long	3913                            # 0xf49
	.long	3953                            # 0xf71
	.long	3993                            # 0xf99
	.long	4030                            # 0xfbe
	.long	4046                            # 0xfce
	.long	4096                            # 0x1000
	.long	4295                            # 0x10c7
	.long	4301                            # 0x10cd
	.long	4304                            # 0x10d0
	.long	4682                            # 0x124a
	.long	4688                            # 0x1250
	.long	4696                            # 0x1258
	.long	4698                            # 0x125a
	.long	4704                            # 0x1260
	.long	4746                            # 0x128a
	.long	4752                            # 0x1290
	.long	4786                            # 0x12b2
	.long	4792                            # 0x12b8
	.long	4800                            # 0x12c0
	.long	4802                            # 0x12c2
	.long	4808                            # 0x12c8
	.long	4824                            # 0x12d8
	.long	4882                            # 0x1312
	.long	4888                            # 0x1318
	.long	4957                            # 0x135d
	.long	4992                            # 0x1380
	.long	5024                            # 0x13a0
	.long	5112                            # 0x13f8
	.long	5120                            # 0x1400
	.long	5761                            # 0x1681
	.long	5792                            # 0x16a0
	.long	5888                            # 0x1700
	.long	5919                            # 0x171f
	.long	5952                            # 0x1740
	.long	5984                            # 0x1760
	.long	5998                            # 0x176e
	.long	6002                            # 0x1772
	.long	6016                            # 0x1780
	.long	6112                            # 0x17e0
	.long	6128                            # 0x17f0
	.long	6144                            # 0x1800
	.long	6159                            # 0x180f
	.long	6176                            # 0x1820
	.long	6272                            # 0x1880
	.long	6320                            # 0x18b0
	.long	6400                            # 0x1900
	.long	6432                            # 0x1920
	.long	6448                            # 0x1930
	.long	6464                            # 0x1940
	.long	6468                            # 0x1944
	.long	6512                            # 0x1970
	.long	6528                            # 0x1980
	.long	6576                            # 0x19b0
	.long	6608                            # 0x19d0
	.long	6622                            # 0x19de
	.long	6686                            # 0x1a1e
	.long	6752                            # 0x1a60
	.long	6783                            # 0x1a7f
	.long	6800                            # 0x1a90
	.long	6816                            # 0x1aa0
	.long	6832                            # 0x1ab0
	.long	6912                            # 0x1b00
	.long	6992                            # 0x1b50
	.long	7040                            # 0x1b80
	.long	7164                            # 0x1bfc
	.long	7227                            # 0x1c3b
	.long	7245                            # 0x1c4d
	.long	7312                            # 0x1c90
	.long	7357                            # 0x1cbd
	.long	7376                            # 0x1cd0
	.long	7424                            # 0x1d00
	.long	7960                            # 0x1f18
	.long	7968                            # 0x1f20
	.long	8008                            # 0x1f48
	.long	8016                            # 0x1f50
	.long	8025                            # 0x1f59
	.long	8027                            # 0x1f5b
	.long	8029                            # 0x1f5d
	.long	8031                            # 0x1f5f
	.long	8064                            # 0x1f80
	.long	8118                            # 0x1fb6
	.long	8134                            # 0x1fc6
	.long	8150                            # 0x1fd6
	.long	8157                            # 0x1fdd
	.long	8178                            # 0x1ff2
	.long	8182                            # 0x1ff6
	.long	8208                            # 0x2010
	.long	8240                            # 0x2030
	.long	8304                            # 0x2070
	.long	8308                            # 0x2074
	.long	8336                            # 0x2090
	.long	8352                            # 0x20a0
	.long	8400                            # 0x20d0
	.long	8448                            # 0x2100
	.long	8592                            # 0x2190
	.long	9280                            # 0x2440
	.long	9312                            # 0x2460
	.long	11126                           # 0x2b76
	.long	11159                           # 0x2b97
	.long	11513                           # 0x2cf9
	.long	11559                           # 0x2d27
	.long	11565                           # 0x2d2d
	.long	11568                           # 0x2d30
	.long	11631                           # 0x2d6f
	.long	11647                           # 0x2d7f
	.long	11680                           # 0x2da0
	.long	11688                           # 0x2da8
	.long	11696                           # 0x2db0
	.long	11704                           # 0x2db8
	.long	11712                           # 0x2dc0
	.long	11720                           # 0x2dc8
	.long	11728                           # 0x2dd0
	.long	11736                           # 0x2dd8
	.long	11744                           # 0x2de0
	.long	11904                           # 0x2e80
	.long	11931                           # 0x2e9b
	.long	12032                           # 0x2f00
	.long	12272                           # 0x2ff0
	.long	12289                           # 0x3001
	.long	12353                           # 0x3041
	.long	12441                           # 0x3099
	.long	12549                           # 0x3105
	.long	12593                           # 0x3131
	.long	12688                           # 0x3190
	.long	12784                           # 0x31f0
	.long	12832                           # 0x3220
	.long	42128                           # 0xa490
	.long	42192                           # 0xa4d0
	.long	42560                           # 0xa640
	.long	42752                           # 0xa700
	.long	42960                           # 0xa7d0
	.long	42963                           # 0xa7d3
	.long	42965                           # 0xa7d5
	.long	42994                           # 0xa7f2
	.long	43056                           # 0xa830
	.long	43072                           # 0xa840
	.long	43136                           # 0xa880
	.long	43214                           # 0xa8ce
	.long	43232                           # 0xa8e0
	.long	43359                           # 0xa95f
	.long	43392                           # 0xa980
	.long	43471                           # 0xa9cf
	.long	43486                           # 0xa9de
	.long	43520                           # 0xaa00
	.long	43584                           # 0xaa40
	.long	43600                           # 0xaa50
	.long	43612                           # 0xaa5c
	.long	43739                           # 0xaadb
	.long	43777                           # 0xab01
	.long	43785                           # 0xab09
	.long	43793                           # 0xab11
	.long	43808                           # 0xab20
	.long	43816                           # 0xab28
	.long	43824                           # 0xab30
	.long	43888                           # 0xab70
	.long	44016                           # 0xabf0
	.long	44032                           # 0xac00
	.long	55216                           # 0xd7b0
	.long	55243                           # 0xd7cb
	.long	63744                           # 0xf900
	.long	64112                           # 0xfa70
	.long	64256                           # 0xfb00
	.long	64275                           # 0xfb13
	.long	64285                           # 0xfb1d
	.long	64312                           # 0xfb38
	.long	64318                           # 0xfb3e
	.long	64320                           # 0xfb40
	.long	64323                           # 0xfb43
	.long	64326                           # 0xfb46
	.long	64467                           # 0xfbd3
	.long	64914                           # 0xfd92
	.long	64975                           # 0xfdcf
	.long	65008                           # 0xfdf0
	.long	65056                           # 0xfe20
	.long	65108                           # 0xfe54
	.long	65128                           # 0xfe68
	.long	65136                           # 0xfe70
	.long	65142                           # 0xfe76
	.long	65281                           # 0xff01
	.long	65474                           # 0xffc2
	.long	65482                           # 0xffca
	.long	65490                           # 0xffd2
	.long	65498                           # 0xffda
	.long	65504                           # 0xffe0
	.long	65512                           # 0xffe8
	.long	65532                           # 0xfffc
	.long	65536                           # 0x10000
	.long	65549                           # 0x1000d
	.long	65576                           # 0x10028
	.long	65596                           # 0x1003c
	.long	65599                           # 0x1003f
	.long	65616                           # 0x10050
	.long	65664                           # 0x10080
	.long	65792                           # 0x10100
	.long	65799                           # 0x10107
	.long	65847                           # 0x10137
	.long	65936                           # 0x10190
	.long	65952                           # 0x101a0
	.long	66000                           # 0x101d0
	.long	66176                           # 0x10280
	.long	66208                           # 0x102a0
	.long	66272                           # 0x102e0
	.long	66304                           # 0x10300
	.long	66349                           # 0x1032d
	.long	66384                           # 0x10350
	.long	66432                           # 0x10380
	.long	66463                           # 0x1039f
	.long	66504                           # 0x103c8
	.long	66560                           # 0x10400
	.long	66720                           # 0x104a0
	.long	66736                           # 0x104b0
	.long	66776                           # 0x104d8
	.long	66816                           # 0x10500
	.long	66864                           # 0x10530
	.long	66927                           # 0x1056f
	.long	66940                           # 0x1057c
	.long	66956                           # 0x1058c
	.long	66964                           # 0x10594
	.long	66967                           # 0x10597
	.long	66979                           # 0x105a3
	.long	66995                           # 0x105b3
	.long	67003                           # 0x105bb
	.long	67072                           # 0x10600
	.long	67392                           # 0x10740
	.long	67424                           # 0x10760
	.long	67456                           # 0x10780
	.long	67463                           # 0x10787
	.long	67506                           # 0x107b2
	.long	67584                           # 0x10800
	.long	67592                           # 0x10808
	.long	67594                           # 0x1080a
	.long	67639                           # 0x10837
	.long	67644                           # 0x1083c
	.long	67647                           # 0x1083f
	.long	67671                           # 0x10857
	.long	67751                           # 0x108a7
	.long	67808                           # 0x108e0
	.long	67828                           # 0x108f4
	.long	67835                           # 0x108fb
	.long	67871                           # 0x1091f
	.long	67903                           # 0x1093f
	.long	67968                           # 0x10980
	.long	68028                           # 0x109bc
	.long	68050                           # 0x109d2
	.long	68101                           # 0x10a05
	.long	68108                           # 0x10a0c
	.long	68117                           # 0x10a15
	.long	68121                           # 0x10a19
	.long	68152                           # 0x10a38
	.long	68159                           # 0x10a3f
	.long	68176                           # 0x10a50
	.long	68192                           # 0x10a60
	.long	68288                           # 0x10ac0
	.long	68331                           # 0x10aeb
	.long	68352                           # 0x10b00
	.long	68409                           # 0x10b39
	.long	68440                           # 0x10b58
	.long	68472                           # 0x10b78
	.long	68505                           # 0x10b99
	.long	68521                           # 0x10ba9
	.long	68608                           # 0x10c00
	.long	68736                           # 0x10c80
	.long	68800                           # 0x10cc0
	.long	68858                           # 0x10cfa
	.long	68912                           # 0x10d30
	.long	69216                           # 0x10e60
	.long	69248                           # 0x10e80
	.long	69291                           # 0x10eab
	.long	69296                           # 0x10eb0
	.long	69373                           # 0x10efd
	.long	69424                           # 0x10f30
	.long	69488                           # 0x10f70
	.long	69552                           # 0x10fb0
	.long	69600                           # 0x10fe0
	.long	69632                           # 0x11000
	.long	69714                           # 0x11052
	.long	69759                           # 0x1107f
	.long	69822                           # 0x110be
	.long	69840                           # 0x110d0
	.long	69872                           # 0x110f0
	.long	69888                           # 0x11100
	.long	69942                           # 0x11136
	.long	69968                           # 0x11150
	.long	70016                           # 0x11180
	.long	70113                           # 0x111e1
	.long	70144                           # 0x11200
	.long	70163                           # 0x11213
	.long	70272                           # 0x11280
	.long	70280                           # 0x11288
	.long	70282                           # 0x1128a
	.long	70287                           # 0x1128f
	.long	70303                           # 0x1129f
	.long	70320                           # 0x112b0
	.long	70384                           # 0x112f0
	.long	70400                           # 0x11300
	.long	70405                           # 0x11305
	.long	70415                           # 0x1130f
	.long	70419                           # 0x11313
	.long	70442                           # 0x1132a
	.long	70450                           # 0x11332
	.long	70453                           # 0x11335
	.long	70459                           # 0x1133b
	.long	70471                           # 0x11347
	.long	70475                           # 0x1134b
	.long	70480                           # 0x11350
	.long	70487                           # 0x11357
	.long	70493                           # 0x1135d
	.long	70502                           # 0x11366
	.long	70512                           # 0x11370
	.long	70656                           # 0x11400
	.long	70749                           # 0x1145d
	.long	70784                           # 0x11480
	.long	70864                           # 0x114d0
	.long	71040                           # 0x11580
	.long	71096                           # 0x115b8
	.long	71168                           # 0x11600
	.long	71248                           # 0x11650
	.long	71264                           # 0x11660
	.long	71296                           # 0x11680
	.long	71360                           # 0x116c0
	.long	71424                           # 0x11700
	.long	71453                           # 0x1171d
	.long	71472                           # 0x11730
	.long	71680                           # 0x11800
	.long	71840                           # 0x118a0
	.long	71935                           # 0x118ff
	.long	71945                           # 0x11909
	.long	71948                           # 0x1190c
	.long	71957                           # 0x11915
	.long	71960                           # 0x11918
	.long	71991                           # 0x11937
	.long	71995                           # 0x1193b
	.long	72016                           # 0x11950
	.long	72096                           # 0x119a0
	.long	72106                           # 0x119aa
	.long	72154                           # 0x119da
	.long	72192                           # 0x11a00
	.long	72272                           # 0x11a50
	.long	72368                           # 0x11ab0
	.long	72448                           # 0x11b00
	.long	72704                           # 0x11c00
	.long	72714                           # 0x11c0a
	.long	72760                           # 0x11c38
	.long	72784                           # 0x11c50
	.long	72816                           # 0x11c70
	.long	72850                           # 0x11c92
	.long	72873                           # 0x11ca9
	.long	72960                           # 0x11d00
	.long	72968                           # 0x11d08
	.long	72971                           # 0x11d0b
	.long	73018                           # 0x11d3a
	.long	73020                           # 0x11d3c
	.long	73023                           # 0x11d3f
	.long	73040                           # 0x11d50
	.long	73056                           # 0x11d60
	.long	73063                           # 0x11d67
	.long	73066                           # 0x11d6a
	.long	73104                           # 0x11d90
	.long	73107                           # 0x11d93
	.long	73120                           # 0x11da0
	.long	73440                           # 0x11ee0
	.long	73472                           # 0x11f00
	.long	73490                           # 0x11f12
	.long	73534                           # 0x11f3e
	.long	73648                           # 0x11fb0
	.long	73664                           # 0x11fc0
	.long	73727                           # 0x11fff
	.long	74752                           # 0x12400
	.long	74864                           # 0x12470
	.long	74880                           # 0x12480
	.long	77712                           # 0x12f90
	.long	77824                           # 0x13000
	.long	78912                           # 0x13440
	.long	82944                           # 0x14400
	.long	92160                           # 0x16800
	.long	92736                           # 0x16a40
	.long	92768                           # 0x16a60
	.long	92782                           # 0x16a6e
	.long	92864                           # 0x16ac0
	.long	92880                           # 0x16ad0
	.long	92912                           # 0x16af0
	.long	92928                           # 0x16b00
	.long	93008                           # 0x16b50
	.long	93019                           # 0x16b5b
	.long	93027                           # 0x16b63
	.long	93053                           # 0x16b7d
	.long	93760                           # 0x16e40
	.long	93952                           # 0x16f00
	.long	94031                           # 0x16f4f
	.long	94095                           # 0x16f8f
	.long	94176                           # 0x16fe0
	.long	94192                           # 0x16ff0
	.long	94208                           # 0x17000
	.long	100352                          # 0x18800
	.long	101632                          # 0x18d00
	.long	110576                          # 0x1aff0
	.long	110581                          # 0x1aff5
	.long	110589                          # 0x1affd
	.long	110592                          # 0x1b000
	.long	110898                          # 0x1b132
	.long	110928                          # 0x1b150
	.long	110933                          # 0x1b155
	.long	110948                          # 0x1b164
	.long	110960                          # 0x1b170
	.long	113664                          # 0x1bc00
	.long	113776                          # 0x1bc70
	.long	113792                          # 0x1bc80
	.long	113808                          # 0x1bc90
	.long	113820                          # 0x1bc9c
	.long	118528                          # 0x1cf00
	.long	118576                          # 0x1cf30
	.long	118608                          # 0x1cf50
	.long	118784                          # 0x1d000
	.long	119040                          # 0x1d100
	.long	119081                          # 0x1d129
	.long	119163                          # 0x1d17b
	.long	119296                          # 0x1d200
	.long	119488                          # 0x1d2c0
	.long	119520                          # 0x1d2e0
	.long	119552                          # 0x1d300
	.long	119648                          # 0x1d360
	.long	119808                          # 0x1d400
	.long	119894                          # 0x1d456
	.long	119966                          # 0x1d49e
	.long	119970                          # 0x1d4a2
	.long	119973                          # 0x1d4a5
	.long	119977                          # 0x1d4a9
	.long	119982                          # 0x1d4ae
	.long	119995                          # 0x1d4bb
	.long	119997                          # 0x1d4bd
	.long	120005                          # 0x1d4c5
	.long	120071                          # 0x1d507
	.long	120077                          # 0x1d50d
	.long	120086                          # 0x1d516
	.long	120094                          # 0x1d51e
	.long	120123                          # 0x1d53b
	.long	120128                          # 0x1d540
	.long	120134                          # 0x1d546
	.long	120138                          # 0x1d54a
	.long	120146                          # 0x1d552
	.long	120488                          # 0x1d6a8
	.long	120782                          # 0x1d7ce
	.long	121499                          # 0x1da9b
	.long	121505                          # 0x1daa1
	.long	122624                          # 0x1df00
	.long	122661                          # 0x1df25
	.long	122880                          # 0x1e000
	.long	122888                          # 0x1e008
	.long	122907                          # 0x1e01b
	.long	122915                          # 0x1e023
	.long	122918                          # 0x1e026
	.long	122928                          # 0x1e030
	.long	123023                          # 0x1e08f
	.long	123136                          # 0x1e100
	.long	123184                          # 0x1e130
	.long	123200                          # 0x1e140
	.long	123214                          # 0x1e14e
	.long	123536                          # 0x1e290
	.long	123584                          # 0x1e2c0
	.long	123647                          # 0x1e2ff
	.long	124112                          # 0x1e4d0
	.long	124896                          # 0x1e7e0
	.long	124904                          # 0x1e7e8
	.long	124909                          # 0x1e7ed
	.long	124912                          # 0x1e7f0
	.long	124928                          # 0x1e800
	.long	125127                          # 0x1e8c7
	.long	125184                          # 0x1e900
	.long	125264                          # 0x1e950
	.long	125278                          # 0x1e95e
	.long	126065                          # 0x1ec71
	.long	126209                          # 0x1ed01
	.long	126464                          # 0x1ee00
	.long	126469                          # 0x1ee05
	.long	126497                          # 0x1ee21
	.long	126500                          # 0x1ee24
	.long	126503                          # 0x1ee27
	.long	126505                          # 0x1ee29
	.long	126516                          # 0x1ee34
	.long	126521                          # 0x1ee39
	.long	126523                          # 0x1ee3b
	.long	126530                          # 0x1ee42
	.long	126535                          # 0x1ee47
	.long	126537                          # 0x1ee49
	.long	126539                          # 0x1ee4b
	.long	126541                          # 0x1ee4d
	.long	126545                          # 0x1ee51
	.long	126548                          # 0x1ee54
	.long	126551                          # 0x1ee57
	.long	126553                          # 0x1ee59
	.long	126555                          # 0x1ee5b
	.long	126557                          # 0x1ee5d
	.long	126559                          # 0x1ee5f
	.long	126561                          # 0x1ee61
	.long	126564                          # 0x1ee64
	.long	126567                          # 0x1ee67
	.long	126572                          # 0x1ee6c
	.long	126580                          # 0x1ee74
	.long	126585                          # 0x1ee79
	.long	126590                          # 0x1ee7e
	.long	126592                          # 0x1ee80
	.long	126603                          # 0x1ee8b
	.long	126625                          # 0x1eea1
	.long	126629                          # 0x1eea5
	.long	126635                          # 0x1eeab
	.long	126704                          # 0x1eef0
	.long	126976                          # 0x1f000
	.long	127024                          # 0x1f030
	.long	127136                          # 0x1f0a0
	.long	127153                          # 0x1f0b1
	.long	127169                          # 0x1f0c1
	.long	127185                          # 0x1f0d1
	.long	127232                          # 0x1f100
	.long	127462                          # 0x1f1e6
	.long	127504                          # 0x1f210
	.long	127552                          # 0x1f240
	.long	127568                          # 0x1f250
	.long	127584                          # 0x1f260
	.long	127744                          # 0x1f300
	.long	128732                          # 0x1f6dc
	.long	128752                          # 0x1f6f0
	.long	128768                          # 0x1f700
	.long	128891                          # 0x1f77b
	.long	128992                          # 0x1f7e0
	.long	129008                          # 0x1f7f0
	.long	129024                          # 0x1f800
	.long	129040                          # 0x1f810
	.long	129104                          # 0x1f850
	.long	129120                          # 0x1f860
	.long	129168                          # 0x1f890
	.long	129200                          # 0x1f8b0
	.long	129280                          # 0x1f900
	.long	129632                          # 0x1fa60
	.long	129648                          # 0x1fa70
	.long	129664                          # 0x1fa80
	.long	129680                          # 0x1fa90
	.long	129727                          # 0x1fabf
	.long	129742                          # 0x1face
	.long	129760                          # 0x1fae0
	.long	129776                          # 0x1faf0
	.long	129792                          # 0x1fb00
	.long	129940                          # 0x1fb94
	.long	130032                          # 0x1fbf0
	.long	131072                          # 0x20000
	.long	173824                          # 0x2a700
	.long	177984                          # 0x2b740
	.long	178208                          # 0x2b820
	.long	183984                          # 0x2ceb0
	.long	194560                          # 0x2f800
	.long	196608                          # 0x30000
	.long	201552                          # 0x31350
	.long	917760                          # 0xe0100
	.short	95                              # 0x5f
	.short	12                              # 0xc
	.short	714                             # 0x2ca
	.short	6                               # 0x6
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	20                              # 0x14
	.short	397                             # 0x18d
	.short	38                              # 0x26
	.short	50                              # 0x32
	.short	3                               # 0x3
	.short	55                              # 0x37
	.short	27                              # 0x1b
	.short	6                               # 0x6
	.short	22                              # 0x16
	.short	192                             # 0xc0
	.short	48                              # 0x30
	.short	59                              # 0x3b
	.short	101                             # 0x65
	.short	59                              # 0x3b
	.short	49                              # 0x31
	.short	15                              # 0xf
	.short	28                              # 0x1c
	.short	1                               # 0x1
	.short	11                              # 0xb
	.short	31                              # 0x1f
	.short	74                              # 0x4a
	.short	161                             # 0xa1
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	9                               # 0x9
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	25                              # 0x19
	.short	3                               # 0x3
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	17                              # 0x11
	.short	3                               # 0x3
	.short	9                               # 0x9
	.short	3                               # 0x3
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	10                              # 0xa
	.short	3                               # 0x3
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	12                              # 0xc
	.short	7                               # 0x7
	.short	3                               # 0x3
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	9                               # 0x9
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	18                              # 0x12
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	12                              # 0xc
	.short	5                               # 0x5
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	21                              # 0x15
	.short	13                              # 0xd
	.short	3                               # 0x3
	.short	23                              # 0x17
	.short	16                              # 0x10
	.short	9                               # 0x9
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	10                              # 0xa
	.short	22                              # 0x16
	.short	3                               # 0x3
	.short	23                              # 0x17
	.short	10                              # 0xa
	.short	5                               # 0x5
	.short	9                               # 0x9
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	10                              # 0xa
	.short	3                               # 0x3
	.short	13                              # 0xd
	.short	3                               # 0x3
	.short	51                              # 0x33
	.short	3                               # 0x3
	.short	6                               # 0x6
	.short	16                              # 0x10
	.short	26                              # 0x1a
	.short	3                               # 0x3
	.short	18                              # 0x12
	.short	24                              # 0x18
	.short	9                               # 0x9
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	10                              # 0xa
	.short	3                               # 0x3
	.short	58                              # 0x3a
	.short	29                              # 0x1d
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	24                              # 0x18
	.short	1                               # 0x1
	.short	23                              # 0x17
	.short	5                               # 0x5
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	10                              # 0xa
	.short	4                               # 0x4
	.short	72                              # 0x48
	.short	36                              # 0x24
	.short	39                              # 0x27
	.short	36                              # 0x24
	.short	15                              # 0xf
	.short	13                              # 0xd
	.short	198                             # 0xc6
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	377                             # 0x179
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	41                              # 0x29
	.short	4                               # 0x4
	.short	33                              # 0x21
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	15                              # 0xf
	.short	57                              # 0x39
	.short	4                               # 0x4
	.short	67                              # 0x43
	.short	32                              # 0x20
	.short	26                              # 0x1a
	.short	86                              # 0x56
	.short	6                               # 0x6
	.short	640                             # 0x280
	.short	28                              # 0x1c
	.short	89                              # 0x59
	.short	22                              # 0x16
	.short	24                              # 0x18
	.short	20                              # 0x14
	.short	13                              # 0xd
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	94                              # 0x5e
	.short	10                              # 0xa
	.short	10                              # 0xa
	.short	14                              # 0xe
	.short	11                              # 0xb
	.short	89                              # 0x59
	.short	43                              # 0x2b
	.short	70                              # 0x46
	.short	31                              # 0x1f
	.short	12                              # 0xc
	.short	12                              # 0xc
	.short	1                               # 0x1
	.short	42                              # 0x2a
	.short	5                               # 0x5
	.short	44                              # 0x2c
	.short	26                              # 0x1a
	.short	11                              # 0xb
	.short	62                              # 0x3e
	.short	65                              # 0x41
	.short	29                              # 0x1d
	.short	11                              # 0xb
	.short	10                              # 0xa
	.short	14                              # 0xe
	.short	31                              # 0x1f
	.short	77                              # 0x4d
	.short	47                              # 0x2f
	.short	116                             # 0x74
	.short	60                              # 0x3c
	.short	15                              # 0xf
	.short	60                              # 0x3c
	.short	43                              # 0x2b
	.short	11                              # 0xb
	.short	43                              # 0x2b
	.short	534                             # 0x216
	.short	6                               # 0x6
	.short	38                              # 0x26
	.short	6                               # 0x6
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	31                              # 0x1f
	.short	53                              # 0x35
	.short	15                              # 0xf
	.short	14                              # 0xe
	.short	6                               # 0x6
	.short	19                              # 0x13
	.short	3                               # 0x3
	.short	9                               # 0x9
	.short	24                              # 0x18
	.short	47                              # 0x2f
	.short	2                               # 0x2
	.short	27                              # 0x1b
	.short	13                              # 0xd
	.short	33                              # 0x21
	.short	33                              # 0x21
	.short	140                             # 0x8c
	.short	663                             # 0x297
	.short	11                              # 0xb
	.short	1812                            # 0x714
	.short	32                              # 0x20
	.short	349                             # 0x15d
	.short	45                              # 0x2d
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	56                              # 0x38
	.short	2                               # 0x2
	.short	24                              # 0x18
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	126                             # 0x7e
	.short	26                              # 0x1a
	.short	89                              # 0x59
	.short	214                             # 0xd6
	.short	12                              # 0xc
	.short	63                              # 0x3f
	.short	86                              # 0x56
	.short	103                             # 0x67
	.short	43                              # 0x2b
	.short	94                              # 0x5e
	.short	84                              # 0x54
	.short	47                              # 0x2f
	.short	29293                           # 0x726d
	.short	55                              # 0x37
	.short	348                             # 0x15c
	.short	184                             # 0xb8
	.short	203                             # 0xcb
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	59                              # 0x3b
	.short	10                              # 0xa
	.short	56                              # 0x38
	.short	70                              # 0x46
	.short	12                              # 0xc
	.short	116                             # 0x74
	.short	30                              # 0x1e
	.short	78                              # 0x4e
	.short	11                              # 0xb
	.short	33                              # 0x21
	.short	55                              # 0x37
	.short	14                              # 0xe
	.short	10                              # 0xa
	.short	103                             # 0x67
	.short	28                              # 0x1c
	.short	6                               # 0x6
	.short	6                               # 0x6
	.short	6                               # 0x6
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	60                              # 0x3c
	.short	126                             # 0x7e
	.short	10                              # 0xa
	.short	11172                           # 0x2ba4
	.short	23                              # 0x17
	.short	49                              # 0x31
	.short	366                             # 0x16e
	.short	106                             # 0x6a
	.short	7                               # 0x7
	.short	5                               # 0x5
	.short	26                              # 0x1a
	.short	5                               # 0x5
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	125                             # 0x7d
	.short	445                             # 0x1bd
	.short	54                              # 0x36
	.short	1                               # 0x1
	.short	42                              # 0x2a
	.short	51                              # 0x33
	.short	19                              # 0x13
	.short	4                               # 0x4
	.short	5                               # 0x5
	.short	135                             # 0x87
	.short	190                             # 0xbe
	.short	6                               # 0x6
	.short	6                               # 0x6
	.short	6                               # 0x6
	.short	3                               # 0x3
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	12                              # 0xc
	.short	26                              # 0x1a
	.short	19                              # 0x13
	.short	2                               # 0x2
	.short	15                              # 0xf
	.short	14                              # 0xe
	.short	123                             # 0x7b
	.short	3                               # 0x3
	.short	45                              # 0x2d
	.short	88                              # 0x58
	.short	13                              # 0xd
	.short	1                               # 0x1
	.short	46                              # 0x2e
	.short	29                              # 0x1d
	.short	49                              # 0x31
	.short	28                              # 0x1c
	.short	36                              # 0x24
	.short	30                              # 0x1e
	.short	43                              # 0x2b
	.short	30                              # 0x1e
	.short	37                              # 0x25
	.short	14                              # 0xe
	.short	158                             # 0x9e
	.short	10                              # 0xa
	.short	36                              # 0x24
	.short	36                              # 0x24
	.short	40                              # 0x28
	.short	52                              # 0x34
	.short	12                              # 0xc
	.short	15                              # 0xf
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	11                              # 0xb
	.short	15                              # 0xf
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	311                             # 0x137
	.short	22                              # 0x16
	.short	8                               # 0x8
	.short	6                               # 0x6
	.short	42                              # 0x2a
	.short	9                               # 0x9
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	44                              # 0x2c
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	23                              # 0x17
	.short	72                              # 0x48
	.short	9                               # 0x9
	.short	19                              # 0x13
	.short	2                               # 0x2
	.short	33                              # 0x21
	.short	27                              # 0x1b
	.short	1                               # 0x1
	.short	56                              # 0x38
	.short	20                              # 0x14
	.short	50                              # 0x32
	.short	2                               # 0x2
	.short	8                               # 0x8
	.short	3                               # 0x3
	.short	29                              # 0x1d
	.short	3                               # 0x3
	.short	10                              # 0xa
	.short	9                               # 0x9
	.short	64                              # 0x40
	.short	39                              # 0x27
	.short	12                              # 0xc
	.short	54                              # 0x36
	.short	29                              # 0x1d
	.short	27                              # 0x1b
	.short	26                              # 0x1a
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	73                              # 0x49
	.short	51                              # 0x33
	.short	51                              # 0x33
	.short	46                              # 0x2e
	.short	10                              # 0xa
	.short	31                              # 0x1f
	.short	42                              # 0x2a
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	43                              # 0x2b
	.short	42                              # 0x2a
	.short	26                              # 0x1a
	.short	28                              # 0x1c
	.short	23                              # 0x17
	.short	78                              # 0x4e
	.short	36                              # 0x24
	.short	62                              # 0x3e
	.short	5                               # 0x5
	.short	25                              # 0x19
	.short	10                              # 0xa
	.short	53                              # 0x35
	.short	18                              # 0x12
	.short	39                              # 0x27
	.short	96                              # 0x60
	.short	20                              # 0x14
	.short	18                              # 0x12
	.short	47                              # 0x2f
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	15                              # 0xf
	.short	11                              # 0xb
	.short	59                              # 0x3b
	.short	10                              # 0xa
	.short	4                               # 0x4
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	10                              # 0xa
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	5                               # 0x5
	.short	92                              # 0x5c
	.short	5                               # 0x5
	.short	72                              # 0x48
	.short	10                              # 0xa
	.short	54                              # 0x36
	.short	38                              # 0x26
	.short	69                              # 0x45
	.short	10                              # 0xa
	.short	13                              # 0xd
	.short	58                              # 0x3a
	.short	10                              # 0xa
	.short	27                              # 0x1b
	.short	15                              # 0xf
	.short	23                              # 0x17
	.short	60                              # 0x3c
	.short	83                              # 0x53
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	30                              # 0x1e
	.short	2                               # 0x2
	.short	12                              # 0xc
	.short	10                              # 0xa
	.short	8                               # 0x8
	.short	46                              # 0x2e
	.short	11                              # 0xb
	.short	72                              # 0x48
	.short	83                              # 0x53
	.short	73                              # 0x49
	.short	10                              # 0xa
	.short	9                               # 0x9
	.short	45                              # 0x2d
	.short	14                              # 0xe
	.short	29                              # 0x1d
	.short	32                              # 0x20
	.short	22                              # 0x16
	.short	14                              # 0xe
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	44                              # 0x2c
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	9                               # 0x9
	.short	10                              # 0xa
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	37                              # 0x25
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	10                              # 0xa
	.short	25                              # 0x19
	.short	17                              # 0x11
	.short	41                              # 0x29
	.short	28                              # 0x1c
	.short	1                               # 0x1
	.short	50                              # 0x32
	.short	923                             # 0x39b
	.short	111                             # 0x6f
	.short	5                               # 0x5
	.short	196                             # 0xc4
	.short	99                              # 0x63
	.short	1072                            # 0x430
	.short	22                              # 0x16
	.short	583                             # 0x247
	.short	569                             # 0x239
	.short	31                              # 0x1f
	.short	10                              # 0xa
	.short	81                              # 0x51
	.short	10                              # 0xa
	.short	30                              # 0x1e
	.short	6                               # 0x6
	.short	70                              # 0x46
	.short	10                              # 0xa
	.short	7                               # 0x7
	.short	21                              # 0x15
	.short	19                              # 0x13
	.short	91                              # 0x5b
	.short	75                              # 0x4b
	.short	57                              # 0x39
	.short	17                              # 0x11
	.short	5                               # 0x5
	.short	2                               # 0x2
	.short	6136                            # 0x17f8
	.short	1238                            # 0x4d6
	.short	9                               # 0x9
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	291                             # 0x123
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	396                             # 0x18c
	.short	107                             # 0x6b
	.short	13                              # 0xd
	.short	9                               # 0x9
	.short	10                              # 0xa
	.short	4                               # 0x4
	.short	46                              # 0x2e
	.short	23                              # 0x17
	.short	116                             # 0x74
	.short	246                             # 0xf6
	.short	39                              # 0x27
	.short	74                              # 0x4a
	.short	112                             # 0x70
	.short	70                              # 0x46
	.short	20                              # 0x14
	.short	20                              # 0x14
	.short	87                              # 0x57
	.short	25                              # 0x19
	.short	85                              # 0x55
	.short	71                              # 0x47
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	12                              # 0xc
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	65                              # 0x41
	.short	4                               # 0x4
	.short	8                               # 0x8
	.short	7                               # 0x7
	.short	28                              # 0x1c
	.short	4                               # 0x4
	.short	5                               # 0x5
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	340                             # 0x154
	.short	292                             # 0x124
	.short	702                             # 0x2be
	.short	5                               # 0x5
	.short	15                              # 0xf
	.short	31                              # 0x1f
	.short	6                               # 0x6
	.short	7                               # 0x7
	.short	17                              # 0x11
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	62                              # 0x3e
	.short	1                               # 0x1
	.short	45                              # 0x2d
	.short	14                              # 0xe
	.short	10                              # 0xa
	.short	2                               # 0x2
	.short	31                              # 0x1f
	.short	58                              # 0x3a
	.short	1                               # 0x1
	.short	42                              # 0x2a
	.short	7                               # 0x7
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	15                              # 0xf
	.short	197                             # 0xc5
	.short	16                              # 0x10
	.short	76                              # 0x4c
	.short	10                              # 0xa
	.short	2                               # 0x2
	.short	68                              # 0x44
	.short	61                              # 0x3d
	.short	4                               # 0x4
	.short	27                              # 0x1b
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	10                              # 0xa
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	4                               # 0x4
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	10                              # 0xa
	.short	17                              # 0x11
	.short	3                               # 0x3
	.short	5                               # 0x5
	.short	17                              # 0x11
	.short	2                               # 0x2
	.short	44                              # 0x2c
	.short	100                             # 0x64
	.short	15                              # 0xf
	.short	15                              # 0xf
	.short	15                              # 0xf
	.short	37                              # 0x25
	.short	174                             # 0xae
	.short	29                              # 0x1d
	.short	44                              # 0x2c
	.short	9                               # 0x9
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	984                             # 0x3d8
	.short	17                              # 0x11
	.short	13                              # 0xd
	.short	119                             # 0x77
	.short	95                              # 0x5f
	.short	12                              # 0xc
	.short	1                               # 0x1
	.short	12                              # 0xc
	.short	56                              # 0x38
	.short	10                              # 0xa
	.short	40                              # 0x28
	.short	30                              # 0x1e
	.short	2                               # 0x2
	.short	340                             # 0x154
	.short	14                              # 0xe
	.short	13                              # 0xd
	.short	9                               # 0x9
	.short	46                              # 0x2e
	.short	7                               # 0x7
	.short	14                              # 0xe
	.short	9                               # 0x9
	.short	9                               # 0x9
	.short	147                             # 0x93
	.short	55                              # 0x37
	.short	10                              # 0xa
	.short	42720                           # 0xa6e0
	.short	4154                            # 0x103a
	.short	222                             # 0xde
	.short	5762                            # 0x1682
	.short	7473                            # 0x1d31
	.short	542                             # 0x21e
	.short	4939                            # 0x134b
	.short	4192                            # 0x1060
	.short	240                             # 0xf0
	.zero	2

	.section	.rdata,"dr",discard,"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"
	.globl	"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B" # @"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"
	.p2align	2, 0x0
"?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B":
	.long	768                             # 0x300
	.long	1155                            # 0x483
	.long	1425                            # 0x591
	.long	1471                            # 0x5bf
	.long	1473                            # 0x5c1
	.long	1476                            # 0x5c4
	.long	1479                            # 0x5c7
	.long	1552                            # 0x610
	.long	1611                            # 0x64b
	.long	1648                            # 0x670
	.long	1750                            # 0x6d6
	.long	1759                            # 0x6df
	.long	1767                            # 0x6e7
	.long	1770                            # 0x6ea
	.long	1809                            # 0x711
	.long	1840                            # 0x730
	.long	1958                            # 0x7a6
	.long	2027                            # 0x7eb
	.long	2045                            # 0x7fd
	.long	2070                            # 0x816
	.long	2075                            # 0x81b
	.long	2085                            # 0x825
	.long	2089                            # 0x829
	.long	2137                            # 0x859
	.long	2200                            # 0x898
	.long	2250                            # 0x8ca
	.long	2275                            # 0x8e3
	.long	2362                            # 0x93a
	.long	2364                            # 0x93c
	.long	2369                            # 0x941
	.long	2381                            # 0x94d
	.long	2385                            # 0x951
	.long	2402                            # 0x962
	.long	2433                            # 0x981
	.long	2492                            # 0x9bc
	.long	2494                            # 0x9be
	.long	2497                            # 0x9c1
	.long	2509                            # 0x9cd
	.long	2519                            # 0x9d7
	.long	2530                            # 0x9e2
	.long	2558                            # 0x9fe
	.long	2561                            # 0xa01
	.long	2620                            # 0xa3c
	.long	2625                            # 0xa41
	.long	2631                            # 0xa47
	.long	2635                            # 0xa4b
	.long	2641                            # 0xa51
	.long	2672                            # 0xa70
	.long	2677                            # 0xa75
	.long	2689                            # 0xa81
	.long	2748                            # 0xabc
	.long	2753                            # 0xac1
	.long	2759                            # 0xac7
	.long	2765                            # 0xacd
	.long	2786                            # 0xae2
	.long	2810                            # 0xafa
	.long	2817                            # 0xb01
	.long	2876                            # 0xb3c
	.long	2878                            # 0xb3e
	.long	2881                            # 0xb41
	.long	2893                            # 0xb4d
	.long	2901                            # 0xb55
	.long	2914                            # 0xb62
	.long	2946                            # 0xb82
	.long	3006                            # 0xbbe
	.long	3008                            # 0xbc0
	.long	3021                            # 0xbcd
	.long	3031                            # 0xbd7
	.long	3072                            # 0xc00
	.long	3076                            # 0xc04
	.long	3132                            # 0xc3c
	.long	3134                            # 0xc3e
	.long	3142                            # 0xc46
	.long	3146                            # 0xc4a
	.long	3157                            # 0xc55
	.long	3170                            # 0xc62
	.long	3201                            # 0xc81
	.long	3260                            # 0xcbc
	.long	3263                            # 0xcbf
	.long	3266                            # 0xcc2
	.long	3270                            # 0xcc6
	.long	3276                            # 0xccc
	.long	3285                            # 0xcd5
	.long	3298                            # 0xce2
	.long	3328                            # 0xd00
	.long	3387                            # 0xd3b
	.long	3390                            # 0xd3e
	.long	3393                            # 0xd41
	.long	3405                            # 0xd4d
	.long	3415                            # 0xd57
	.long	3426                            # 0xd62
	.long	3457                            # 0xd81
	.long	3530                            # 0xdca
	.long	3535                            # 0xdcf
	.long	3538                            # 0xdd2
	.long	3542                            # 0xdd6
	.long	3551                            # 0xddf
	.long	3633                            # 0xe31
	.long	3636                            # 0xe34
	.long	3655                            # 0xe47
	.long	3761                            # 0xeb1
	.long	3764                            # 0xeb4
	.long	3784                            # 0xec8
	.long	3864                            # 0xf18
	.long	3893                            # 0xf35
	.long	3895                            # 0xf37
	.long	3897                            # 0xf39
	.long	3953                            # 0xf71
	.long	3968                            # 0xf80
	.long	3974                            # 0xf86
	.long	3981                            # 0xf8d
	.long	3993                            # 0xf99
	.long	4038                            # 0xfc6
	.long	4141                            # 0x102d
	.long	4146                            # 0x1032
	.long	4153                            # 0x1039
	.long	4157                            # 0x103d
	.long	4184                            # 0x1058
	.long	4190                            # 0x105e
	.long	4209                            # 0x1071
	.long	4226                            # 0x1082
	.long	4229                            # 0x1085
	.long	4237                            # 0x108d
	.long	4253                            # 0x109d
	.long	4957                            # 0x135d
	.long	5906                            # 0x1712
	.long	5938                            # 0x1732
	.long	5970                            # 0x1752
	.long	6002                            # 0x1772
	.long	6068                            # 0x17b4
	.long	6071                            # 0x17b7
	.long	6086                            # 0x17c6
	.long	6089                            # 0x17c9
	.long	6109                            # 0x17dd
	.long	6155                            # 0x180b
	.long	6159                            # 0x180f
	.long	6277                            # 0x1885
	.long	6313                            # 0x18a9
	.long	6432                            # 0x1920
	.long	6439                            # 0x1927
	.long	6450                            # 0x1932
	.long	6457                            # 0x1939
	.long	6679                            # 0x1a17
	.long	6683                            # 0x1a1b
	.long	6742                            # 0x1a56
	.long	6744                            # 0x1a58
	.long	6752                            # 0x1a60
	.long	6754                            # 0x1a62
	.long	6757                            # 0x1a65
	.long	6771                            # 0x1a73
	.long	6783                            # 0x1a7f
	.long	6832                            # 0x1ab0
	.long	6912                            # 0x1b00
	.long	6964                            # 0x1b34
	.long	6972                            # 0x1b3c
	.long	6978                            # 0x1b42
	.long	7019                            # 0x1b6b
	.long	7040                            # 0x1b80
	.long	7074                            # 0x1ba2
	.long	7080                            # 0x1ba8
	.long	7083                            # 0x1bab
	.long	7142                            # 0x1be6
	.long	7144                            # 0x1be8
	.long	7149                            # 0x1bed
	.long	7151                            # 0x1bef
	.long	7212                            # 0x1c2c
	.long	7222                            # 0x1c36
	.long	7376                            # 0x1cd0
	.long	7380                            # 0x1cd4
	.long	7394                            # 0x1ce2
	.long	7405                            # 0x1ced
	.long	7412                            # 0x1cf4
	.long	7416                            # 0x1cf8
	.long	7616                            # 0x1dc0
	.long	8204                            # 0x200c
	.long	8400                            # 0x20d0
	.long	11503                           # 0x2cef
	.long	11647                           # 0x2d7f
	.long	11744                           # 0x2de0
	.long	12330                           # 0x302a
	.long	12441                           # 0x3099
	.long	42607                           # 0xa66f
	.long	42612                           # 0xa674
	.long	42654                           # 0xa69e
	.long	42736                           # 0xa6f0
	.long	43010                           # 0xa802
	.long	43014                           # 0xa806
	.long	43019                           # 0xa80b
	.long	43045                           # 0xa825
	.long	43052                           # 0xa82c
	.long	43204                           # 0xa8c4
	.long	43232                           # 0xa8e0
	.long	43263                           # 0xa8ff
	.long	43302                           # 0xa926
	.long	43335                           # 0xa947
	.long	43392                           # 0xa980
	.long	43443                           # 0xa9b3
	.long	43446                           # 0xa9b6
	.long	43452                           # 0xa9bc
	.long	43493                           # 0xa9e5
	.long	43561                           # 0xaa29
	.long	43569                           # 0xaa31
	.long	43573                           # 0xaa35
	.long	43587                           # 0xaa43
	.long	43596                           # 0xaa4c
	.long	43644                           # 0xaa7c
	.long	43696                           # 0xaab0
	.long	43698                           # 0xaab2
	.long	43703                           # 0xaab7
	.long	43710                           # 0xaabe
	.long	43713                           # 0xaac1
	.long	43756                           # 0xaaec
	.long	43766                           # 0xaaf6
	.long	44005                           # 0xabe5
	.long	44008                           # 0xabe8
	.long	44013                           # 0xabed
	.long	64286                           # 0xfb1e
	.long	65024                           # 0xfe00
	.long	65056                           # 0xfe20
	.long	65438                           # 0xff9e
	.long	66045                           # 0x101fd
	.long	66272                           # 0x102e0
	.long	66422                           # 0x10376
	.long	68097                           # 0x10a01
	.long	68101                           # 0x10a05
	.long	68108                           # 0x10a0c
	.long	68152                           # 0x10a38
	.long	68159                           # 0x10a3f
	.long	68325                           # 0x10ae5
	.long	68900                           # 0x10d24
	.long	69291                           # 0x10eab
	.long	69373                           # 0x10efd
	.long	69446                           # 0x10f46
	.long	69506                           # 0x10f82
	.long	69633                           # 0x11001
	.long	69688                           # 0x11038
	.long	69744                           # 0x11070
	.long	69747                           # 0x11073
	.long	69759                           # 0x1107f
	.long	69811                           # 0x110b3
	.long	69817                           # 0x110b9
	.long	69826                           # 0x110c2
	.long	69888                           # 0x11100
	.long	69927                           # 0x11127
	.long	69933                           # 0x1112d
	.long	70003                           # 0x11173
	.long	70016                           # 0x11180
	.long	70070                           # 0x111b6
	.long	70089                           # 0x111c9
	.long	70095                           # 0x111cf
	.long	70191                           # 0x1122f
	.long	70196                           # 0x11234
	.long	70198                           # 0x11236
	.long	70206                           # 0x1123e
	.long	70209                           # 0x11241
	.long	70367                           # 0x112df
	.long	70371                           # 0x112e3
	.long	70400                           # 0x11300
	.long	70459                           # 0x1133b
	.long	70462                           # 0x1133e
	.long	70464                           # 0x11340
	.long	70487                           # 0x11357
	.long	70502                           # 0x11366
	.long	70512                           # 0x11370
	.long	70712                           # 0x11438
	.long	70722                           # 0x11442
	.long	70726                           # 0x11446
	.long	70750                           # 0x1145e
	.long	70832                           # 0x114b0
	.long	70835                           # 0x114b3
	.long	70842                           # 0x114ba
	.long	70845                           # 0x114bd
	.long	70847                           # 0x114bf
	.long	70850                           # 0x114c2
	.long	71087                           # 0x115af
	.long	71090                           # 0x115b2
	.long	71100                           # 0x115bc
	.long	71103                           # 0x115bf
	.long	71132                           # 0x115dc
	.long	71219                           # 0x11633
	.long	71229                           # 0x1163d
	.long	71231                           # 0x1163f
	.long	71339                           # 0x116ab
	.long	71341                           # 0x116ad
	.long	71344                           # 0x116b0
	.long	71351                           # 0x116b7
	.long	71453                           # 0x1171d
	.long	71458                           # 0x11722
	.long	71463                           # 0x11727
	.long	71727                           # 0x1182f
	.long	71737                           # 0x11839
	.long	71984                           # 0x11930
	.long	71995                           # 0x1193b
	.long	71998                           # 0x1193e
	.long	72003                           # 0x11943
	.long	72148                           # 0x119d4
	.long	72154                           # 0x119da
	.long	72160                           # 0x119e0
	.long	72193                           # 0x11a01
	.long	72243                           # 0x11a33
	.long	72251                           # 0x11a3b
	.long	72263                           # 0x11a47
	.long	72273                           # 0x11a51
	.long	72281                           # 0x11a59
	.long	72330                           # 0x11a8a
	.long	72344                           # 0x11a98
	.long	72752                           # 0x11c30
	.long	72760                           # 0x11c38
	.long	72767                           # 0x11c3f
	.long	72850                           # 0x11c92
	.long	72874                           # 0x11caa
	.long	72882                           # 0x11cb2
	.long	72885                           # 0x11cb5
	.long	73009                           # 0x11d31
	.long	73018                           # 0x11d3a
	.long	73020                           # 0x11d3c
	.long	73023                           # 0x11d3f
	.long	73031                           # 0x11d47
	.long	73104                           # 0x11d90
	.long	73109                           # 0x11d95
	.long	73111                           # 0x11d97
	.long	73459                           # 0x11ef3
	.long	73472                           # 0x11f00
	.long	73526                           # 0x11f36
	.long	73536                           # 0x11f40
	.long	73538                           # 0x11f42
	.long	78912                           # 0x13440
	.long	78919                           # 0x13447
	.long	92912                           # 0x16af0
	.long	92976                           # 0x16b30
	.long	94031                           # 0x16f4f
	.long	94095                           # 0x16f8f
	.long	94180                           # 0x16fe4
	.long	113821                          # 0x1bc9d
	.long	118528                          # 0x1cf00
	.long	118576                          # 0x1cf30
	.long	119141                          # 0x1d165
	.long	119143                          # 0x1d167
	.long	119150                          # 0x1d16e
	.long	119163                          # 0x1d17b
	.long	119173                          # 0x1d185
	.long	119210                          # 0x1d1aa
	.long	119362                          # 0x1d242
	.long	121344                          # 0x1da00
	.long	121403                          # 0x1da3b
	.long	121461                          # 0x1da75
	.long	121476                          # 0x1da84
	.long	121499                          # 0x1da9b
	.long	121505                          # 0x1daa1
	.long	122880                          # 0x1e000
	.long	122888                          # 0x1e008
	.long	122907                          # 0x1e01b
	.long	122915                          # 0x1e023
	.long	122918                          # 0x1e026
	.long	123023                          # 0x1e08f
	.long	123184                          # 0x1e130
	.long	123566                          # 0x1e2ae
	.long	123628                          # 0x1e2ec
	.long	124140                          # 0x1e4ec
	.long	125136                          # 0x1e8d0
	.long	125252                          # 0x1e944
	.long	917536                          # 0xe0020
	.long	917760                          # 0xe0100
	.short	112                             # 0x70
	.short	7                               # 0x7
	.short	45                              # 0x2d
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	11                              # 0xb
	.short	21                              # 0x15
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	27                              # 0x1b
	.short	11                              # 0xb
	.short	9                               # 0x9
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	9                               # 0x9
	.short	3                               # 0x3
	.short	5                               # 0x5
	.short	3                               # 0x3
	.short	8                               # 0x8
	.short	24                              # 0x18
	.short	32                              # 0x20
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	9                               # 0x9
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	14                              # 0xe
	.short	5                               # 0x5
	.short	2                               # 0x2
	.short	11                              # 0xb
	.short	36                              # 0x24
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	11                              # 0xb
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	10                              # 0xa
	.short	1                               # 0x1
	.short	31                              # 0x1f
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	9                               # 0x9
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	13                              # 0xd
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	64                              # 0x40
	.short	1                               # 0x1
	.short	33                              # 0x21
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	32                              # 0x20
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	10                              # 0xa
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	18                              # 0x12
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	11                              # 0xb
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	16                              # 0x10
	.short	16                              # 0x10
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	11                              # 0xb
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	15                              # 0xf
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	5                               # 0x5
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	9                               # 0x9
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	8                               # 0x8
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	5                               # 0x5
	.short	8                               # 0x8
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	8                               # 0x8
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	4                               # 0x4
	.short	5                               # 0x5
	.short	9                               # 0x9
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	10                              # 0xa
	.short	6                               # 0x6
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	3                               # 0x3
	.short	13                              # 0xd
	.short	2                               # 0x2
	.short	7                               # 0x7
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	22                              # 0x16
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	6                               # 0x6
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	15                              # 0xf
	.short	5                               # 0x5
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	46                              # 0x2e
	.short	23                              # 0x17
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	5                               # 0x5
	.short	8                               # 0x8
	.short	7                               # 0x7
	.short	4                               # 0x4
	.short	3                               # 0x3
	.short	55                              # 0x37
	.short	50                              # 0x32
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	15                              # 0xf
	.short	7                               # 0x7
	.short	17                              # 0x11
	.short	7                               # 0x7
	.short	2                               # 0x2
	.short	5                               # 0x5
	.short	1                               # 0x1
	.short	7                               # 0x7
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	4                               # 0x4
	.short	7                               # 0x7
	.short	7                               # 0x7
	.short	96                              # 0x60
	.short	240                             # 0xf0
	.zero	2

	.section	.rdata,"dr",discard,"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"
	.globl	"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B" # @"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"
	.p2align	2, 0x0
"?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B":
	.long	0                               # 0x0
	.long	10                              # 0xa
	.long	11                              # 0xb
	.long	13                              # 0xd
	.long	14                              # 0xe
	.long	127                             # 0x7f
	.long	173                             # 0xad
	.long	768                             # 0x300
	.long	1155                            # 0x483
	.long	1425                            # 0x591
	.long	1471                            # 0x5bf
	.long	1473                            # 0x5c1
	.long	1476                            # 0x5c4
	.long	1479                            # 0x5c7
	.long	1536                            # 0x600
	.long	1552                            # 0x610
	.long	1564                            # 0x61c
	.long	1611                            # 0x64b
	.long	1648                            # 0x670
	.long	1750                            # 0x6d6
	.long	1757                            # 0x6dd
	.long	1759                            # 0x6df
	.long	1767                            # 0x6e7
	.long	1770                            # 0x6ea
	.long	1807                            # 0x70f
	.long	1809                            # 0x711
	.long	1840                            # 0x730
	.long	1958                            # 0x7a6
	.long	2027                            # 0x7eb
	.long	2045                            # 0x7fd
	.long	2070                            # 0x816
	.long	2075                            # 0x81b
	.long	2085                            # 0x825
	.long	2089                            # 0x829
	.long	2137                            # 0x859
	.long	2192                            # 0x890
	.long	2200                            # 0x898
	.long	2250                            # 0x8ca
	.long	2274                            # 0x8e2
	.long	2275                            # 0x8e3
	.long	2307                            # 0x903
	.long	2362                            # 0x93a
	.long	2363                            # 0x93b
	.long	2364                            # 0x93c
	.long	2366                            # 0x93e
	.long	2369                            # 0x941
	.long	2377                            # 0x949
	.long	2381                            # 0x94d
	.long	2382                            # 0x94e
	.long	2385                            # 0x951
	.long	2402                            # 0x962
	.long	2433                            # 0x981
	.long	2434                            # 0x982
	.long	2492                            # 0x9bc
	.long	2494                            # 0x9be
	.long	2495                            # 0x9bf
	.long	2497                            # 0x9c1
	.long	2503                            # 0x9c7
	.long	2507                            # 0x9cb
	.long	2509                            # 0x9cd
	.long	2519                            # 0x9d7
	.long	2530                            # 0x9e2
	.long	2558                            # 0x9fe
	.long	2561                            # 0xa01
	.long	2563                            # 0xa03
	.long	2620                            # 0xa3c
	.long	2622                            # 0xa3e
	.long	2625                            # 0xa41
	.long	2631                            # 0xa47
	.long	2635                            # 0xa4b
	.long	2641                            # 0xa51
	.long	2672                            # 0xa70
	.long	2677                            # 0xa75
	.long	2689                            # 0xa81
	.long	2691                            # 0xa83
	.long	2748                            # 0xabc
	.long	2750                            # 0xabe
	.long	2753                            # 0xac1
	.long	2759                            # 0xac7
	.long	2761                            # 0xac9
	.long	2763                            # 0xacb
	.long	2765                            # 0xacd
	.long	2786                            # 0xae2
	.long	2810                            # 0xafa
	.long	2817                            # 0xb01
	.long	2818                            # 0xb02
	.long	2876                            # 0xb3c
	.long	2878                            # 0xb3e
	.long	2880                            # 0xb40
	.long	2881                            # 0xb41
	.long	2887                            # 0xb47
	.long	2891                            # 0xb4b
	.long	2893                            # 0xb4d
	.long	2901                            # 0xb55
	.long	2914                            # 0xb62
	.long	2946                            # 0xb82
	.long	3006                            # 0xbbe
	.long	3007                            # 0xbbf
	.long	3008                            # 0xbc0
	.long	3009                            # 0xbc1
	.long	3014                            # 0xbc6
	.long	3018                            # 0xbca
	.long	3021                            # 0xbcd
	.long	3031                            # 0xbd7
	.long	3072                            # 0xc00
	.long	3073                            # 0xc01
	.long	3076                            # 0xc04
	.long	3132                            # 0xc3c
	.long	3134                            # 0xc3e
	.long	3137                            # 0xc41
	.long	3142                            # 0xc46
	.long	3146                            # 0xc4a
	.long	3157                            # 0xc55
	.long	3170                            # 0xc62
	.long	3201                            # 0xc81
	.long	3202                            # 0xc82
	.long	3260                            # 0xcbc
	.long	3262                            # 0xcbe
	.long	3263                            # 0xcbf
	.long	3264                            # 0xcc0
	.long	3266                            # 0xcc2
	.long	3267                            # 0xcc3
	.long	3270                            # 0xcc6
	.long	3271                            # 0xcc7
	.long	3274                            # 0xcca
	.long	3276                            # 0xccc
	.long	3285                            # 0xcd5
	.long	3298                            # 0xce2
	.long	3315                            # 0xcf3
	.long	3328                            # 0xd00
	.long	3330                            # 0xd02
	.long	3387                            # 0xd3b
	.long	3390                            # 0xd3e
	.long	3391                            # 0xd3f
	.long	3393                            # 0xd41
	.long	3398                            # 0xd46
	.long	3402                            # 0xd4a
	.long	3405                            # 0xd4d
	.long	3406                            # 0xd4e
	.long	3415                            # 0xd57
	.long	3426                            # 0xd62
	.long	3457                            # 0xd81
	.long	3458                            # 0xd82
	.long	3530                            # 0xdca
	.long	3535                            # 0xdcf
	.long	3536                            # 0xdd0
	.long	3538                            # 0xdd2
	.long	3542                            # 0xdd6
	.long	3544                            # 0xdd8
	.long	3551                            # 0xddf
	.long	3570                            # 0xdf2
	.long	3633                            # 0xe31
	.long	3635                            # 0xe33
	.long	3636                            # 0xe34
	.long	3655                            # 0xe47
	.long	3761                            # 0xeb1
	.long	3763                            # 0xeb3
	.long	3764                            # 0xeb4
	.long	3784                            # 0xec8
	.long	3864                            # 0xf18
	.long	3893                            # 0xf35
	.long	3895                            # 0xf37
	.long	3897                            # 0xf39
	.long	3902                            # 0xf3e
	.long	3953                            # 0xf71
	.long	3967                            # 0xf7f
	.long	3968                            # 0xf80
	.long	3974                            # 0xf86
	.long	3981                            # 0xf8d
	.long	3993                            # 0xf99
	.long	4038                            # 0xfc6
	.long	4141                            # 0x102d
	.long	4145                            # 0x1031
	.long	4146                            # 0x1032
	.long	4153                            # 0x1039
	.long	4155                            # 0x103b
	.long	4157                            # 0x103d
	.long	4182                            # 0x1056
	.long	4184                            # 0x1058
	.long	4190                            # 0x105e
	.long	4209                            # 0x1071
	.long	4226                            # 0x1082
	.long	4228                            # 0x1084
	.long	4229                            # 0x1085
	.long	4237                            # 0x108d
	.long	4253                            # 0x109d
	.long	4352                            # 0x1100
	.long	4448                            # 0x1160
	.long	4520                            # 0x11a8
	.long	4957                            # 0x135d
	.long	5906                            # 0x1712
	.long	5909                            # 0x1715
	.long	5938                            # 0x1732
	.long	5940                            # 0x1734
	.long	5970                            # 0x1752
	.long	6002                            # 0x1772
	.long	6068                            # 0x17b4
	.long	6070                            # 0x17b6
	.long	6071                            # 0x17b7
	.long	6078                            # 0x17be
	.long	6086                            # 0x17c6
	.long	6087                            # 0x17c7
	.long	6089                            # 0x17c9
	.long	6109                            # 0x17dd
	.long	6155                            # 0x180b
	.long	6158                            # 0x180e
	.long	6159                            # 0x180f
	.long	6277                            # 0x1885
	.long	6313                            # 0x18a9
	.long	6432                            # 0x1920
	.long	6435                            # 0x1923
	.long	6439                            # 0x1927
	.long	6441                            # 0x1929
	.long	6448                            # 0x1930
	.long	6450                            # 0x1932
	.long	6451                            # 0x1933
	.long	6457                            # 0x1939
	.long	6679                            # 0x1a17
	.long	6681                            # 0x1a19
	.long	6683                            # 0x1a1b
	.long	6741                            # 0x1a55
	.long	6742                            # 0x1a56
	.long	6743                            # 0x1a57
	.long	6744                            # 0x1a58
	.long	6752                            # 0x1a60
	.long	6754                            # 0x1a62
	.long	6757                            # 0x1a65
	.long	6765                            # 0x1a6d
	.long	6771                            # 0x1a73
	.long	6783                            # 0x1a7f
	.long	6832                            # 0x1ab0
	.long	6912                            # 0x1b00
	.long	6916                            # 0x1b04
	.long	6964                            # 0x1b34
	.long	6971                            # 0x1b3b
	.long	6972                            # 0x1b3c
	.long	6973                            # 0x1b3d
	.long	6978                            # 0x1b42
	.long	6979                            # 0x1b43
	.long	7019                            # 0x1b6b
	.long	7040                            # 0x1b80
	.long	7042                            # 0x1b82
	.long	7073                            # 0x1ba1
	.long	7074                            # 0x1ba2
	.long	7078                            # 0x1ba6
	.long	7080                            # 0x1ba8
	.long	7082                            # 0x1baa
	.long	7083                            # 0x1bab
	.long	7142                            # 0x1be6
	.long	7143                            # 0x1be7
	.long	7144                            # 0x1be8
	.long	7146                            # 0x1bea
	.long	7149                            # 0x1bed
	.long	7150                            # 0x1bee
	.long	7151                            # 0x1bef
	.long	7154                            # 0x1bf2
	.long	7204                            # 0x1c24
	.long	7212                            # 0x1c2c
	.long	7220                            # 0x1c34
	.long	7222                            # 0x1c36
	.long	7376                            # 0x1cd0
	.long	7380                            # 0x1cd4
	.long	7393                            # 0x1ce1
	.long	7394                            # 0x1ce2
	.long	7405                            # 0x1ced
	.long	7412                            # 0x1cf4
	.long	7415                            # 0x1cf7
	.long	7416                            # 0x1cf8
	.long	7616                            # 0x1dc0
	.long	8203                            # 0x200b
	.long	8204                            # 0x200c
	.long	8205                            # 0x200d
	.long	8206                            # 0x200e
	.long	8232                            # 0x2028
	.long	8288                            # 0x2060
	.long	8400                            # 0x20d0
	.long	11503                           # 0x2cef
	.long	11647                           # 0x2d7f
	.long	11744                           # 0x2de0
	.long	12330                           # 0x302a
	.long	12441                           # 0x3099
	.long	42607                           # 0xa66f
	.long	42612                           # 0xa674
	.long	42654                           # 0xa69e
	.long	42736                           # 0xa6f0
	.long	43010                           # 0xa802
	.long	43014                           # 0xa806
	.long	43019                           # 0xa80b
	.long	43043                           # 0xa823
	.long	43045                           # 0xa825
	.long	43047                           # 0xa827
	.long	43052                           # 0xa82c
	.long	43136                           # 0xa880
	.long	43188                           # 0xa8b4
	.long	43204                           # 0xa8c4
	.long	43232                           # 0xa8e0
	.long	43263                           # 0xa8ff
	.long	43302                           # 0xa926
	.long	43335                           # 0xa947
	.long	43346                           # 0xa952
	.long	43360                           # 0xa960
	.long	43392                           # 0xa980
	.long	43395                           # 0xa983
	.long	43443                           # 0xa9b3
	.long	43444                           # 0xa9b4
	.long	43446                           # 0xa9b6
	.long	43450                           # 0xa9ba
	.long	43452                           # 0xa9bc
	.long	43454                           # 0xa9be
	.long	43493                           # 0xa9e5
	.long	43561                           # 0xaa29
	.long	43567                           # 0xaa2f
	.long	43569                           # 0xaa31
	.long	43571                           # 0xaa33
	.long	43573                           # 0xaa35
	.long	43587                           # 0xaa43
	.long	43596                           # 0xaa4c
	.long	43597                           # 0xaa4d
	.long	43644                           # 0xaa7c
	.long	43696                           # 0xaab0
	.long	43698                           # 0xaab2
	.long	43703                           # 0xaab7
	.long	43710                           # 0xaabe
	.long	43713                           # 0xaac1
	.long	43755                           # 0xaaeb
	.long	43756                           # 0xaaec
	.long	43758                           # 0xaaee
	.long	43765                           # 0xaaf5
	.long	43766                           # 0xaaf6
	.long	44003                           # 0xabe3
	.long	44005                           # 0xabe5
	.long	44006                           # 0xabe6
	.long	44008                           # 0xabe8
	.long	44009                           # 0xabe9
	.long	44012                           # 0xabec
	.long	44013                           # 0xabed
	.long	44032                           # 0xac00
	.long	44033                           # 0xac01
	.long	44060                           # 0xac1c
	.long	44061                           # 0xac1d
	.long	44088                           # 0xac38
	.long	44089                           # 0xac39
	.long	44116                           # 0xac54
	.long	44117                           # 0xac55
	.long	44144                           # 0xac70
	.long	44145                           # 0xac71
	.long	44172                           # 0xac8c
	.long	44173                           # 0xac8d
	.long	44200                           # 0xaca8
	.long	44201                           # 0xaca9
	.long	44228                           # 0xacc4
	.long	44229                           # 0xacc5
	.long	44256                           # 0xace0
	.long	44257                           # 0xace1
	.long	44284                           # 0xacfc
	.long	44285                           # 0xacfd
	.long	44312                           # 0xad18
	.long	44313                           # 0xad19
	.long	44340                           # 0xad34
	.long	44341                           # 0xad35
	.long	44368                           # 0xad50
	.long	44369                           # 0xad51
	.long	44396                           # 0xad6c
	.long	44397                           # 0xad6d
	.long	44424                           # 0xad88
	.long	44425                           # 0xad89
	.long	44452                           # 0xada4
	.long	44453                           # 0xada5
	.long	44480                           # 0xadc0
	.long	44481                           # 0xadc1
	.long	44508                           # 0xaddc
	.long	44509                           # 0xaddd
	.long	44536                           # 0xadf8
	.long	44537                           # 0xadf9
	.long	44564                           # 0xae14
	.long	44565                           # 0xae15
	.long	44592                           # 0xae30
	.long	44593                           # 0xae31
	.long	44620                           # 0xae4c
	.long	44621                           # 0xae4d
	.long	44648                           # 0xae68
	.long	44649                           # 0xae69
	.long	44676                           # 0xae84
	.long	44677                           # 0xae85
	.long	44704                           # 0xaea0
	.long	44705                           # 0xaea1
	.long	44732                           # 0xaebc
	.long	44733                           # 0xaebd
	.long	44760                           # 0xaed8
	.long	44761                           # 0xaed9
	.long	44788                           # 0xaef4
	.long	44789                           # 0xaef5
	.long	44816                           # 0xaf10
	.long	44817                           # 0xaf11
	.long	44844                           # 0xaf2c
	.long	44845                           # 0xaf2d
	.long	44872                           # 0xaf48
	.long	44873                           # 0xaf49
	.long	44900                           # 0xaf64
	.long	44901                           # 0xaf65
	.long	44928                           # 0xaf80
	.long	44929                           # 0xaf81
	.long	44956                           # 0xaf9c
	.long	44957                           # 0xaf9d
	.long	44984                           # 0xafb8
	.long	44985                           # 0xafb9
	.long	45012                           # 0xafd4
	.long	45013                           # 0xafd5
	.long	45040                           # 0xaff0
	.long	45041                           # 0xaff1
	.long	45068                           # 0xb00c
	.long	45069                           # 0xb00d
	.long	45096                           # 0xb028
	.long	45097                           # 0xb029
	.long	45124                           # 0xb044
	.long	45125                           # 0xb045
	.long	45152                           # 0xb060
	.long	45153                           # 0xb061
	.long	45180                           # 0xb07c
	.long	45181                           # 0xb07d
	.long	45208                           # 0xb098
	.long	45209                           # 0xb099
	.long	45236                           # 0xb0b4
	.long	45237                           # 0xb0b5
	.long	45264                           # 0xb0d0
	.long	45265                           # 0xb0d1
	.long	45292                           # 0xb0ec
	.long	45293                           # 0xb0ed
	.long	45320                           # 0xb108
	.long	45321                           # 0xb109
	.long	45348                           # 0xb124
	.long	45349                           # 0xb125
	.long	45376                           # 0xb140
	.long	45377                           # 0xb141
	.long	45404                           # 0xb15c
	.long	45405                           # 0xb15d
	.long	45432                           # 0xb178
	.long	45433                           # 0xb179
	.long	45460                           # 0xb194
	.long	45461                           # 0xb195
	.long	45488                           # 0xb1b0
	.long	45489                           # 0xb1b1
	.long	45516                           # 0xb1cc
	.long	45517                           # 0xb1cd
	.long	45544                           # 0xb1e8
	.long	45545                           # 0xb1e9
	.long	45572                           # 0xb204
	.long	45573                           # 0xb205
	.long	45600                           # 0xb220
	.long	45601                           # 0xb221
	.long	45628                           # 0xb23c
	.long	45629                           # 0xb23d
	.long	45656                           # 0xb258
	.long	45657                           # 0xb259
	.long	45684                           # 0xb274
	.long	45685                           # 0xb275
	.long	45712                           # 0xb290
	.long	45713                           # 0xb291
	.long	45740                           # 0xb2ac
	.long	45741                           # 0xb2ad
	.long	45768                           # 0xb2c8
	.long	45769                           # 0xb2c9
	.long	45796                           # 0xb2e4
	.long	45797                           # 0xb2e5
	.long	45824                           # 0xb300
	.long	45825                           # 0xb301
	.long	45852                           # 0xb31c
	.long	45853                           # 0xb31d
	.long	45880                           # 0xb338
	.long	45881                           # 0xb339
	.long	45908                           # 0xb354
	.long	45909                           # 0xb355
	.long	45936                           # 0xb370
	.long	45937                           # 0xb371
	.long	45964                           # 0xb38c
	.long	45965                           # 0xb38d
	.long	45992                           # 0xb3a8
	.long	45993                           # 0xb3a9
	.long	46020                           # 0xb3c4
	.long	46021                           # 0xb3c5
	.long	46048                           # 0xb3e0
	.long	46049                           # 0xb3e1
	.long	46076                           # 0xb3fc
	.long	46077                           # 0xb3fd
	.long	46104                           # 0xb418
	.long	46105                           # 0xb419
	.long	46132                           # 0xb434
	.long	46133                           # 0xb435
	.long	46160                           # 0xb450
	.long	46161                           # 0xb451
	.long	46188                           # 0xb46c
	.long	46189                           # 0xb46d
	.long	46216                           # 0xb488
	.long	46217                           # 0xb489
	.long	46244                           # 0xb4a4
	.long	46245                           # 0xb4a5
	.long	46272                           # 0xb4c0
	.long	46273                           # 0xb4c1
	.long	46300                           # 0xb4dc
	.long	46301                           # 0xb4dd
	.long	46328                           # 0xb4f8
	.long	46329                           # 0xb4f9
	.long	46356                           # 0xb514
	.long	46357                           # 0xb515
	.long	46384                           # 0xb530
	.long	46385                           # 0xb531
	.long	46412                           # 0xb54c
	.long	46413                           # 0xb54d
	.long	46440                           # 0xb568
	.long	46441                           # 0xb569
	.long	46468                           # 0xb584
	.long	46469                           # 0xb585
	.long	46496                           # 0xb5a0
	.long	46497                           # 0xb5a1
	.long	46524                           # 0xb5bc
	.long	46525                           # 0xb5bd
	.long	46552                           # 0xb5d8
	.long	46553                           # 0xb5d9
	.long	46580                           # 0xb5f4
	.long	46581                           # 0xb5f5
	.long	46608                           # 0xb610
	.long	46609                           # 0xb611
	.long	46636                           # 0xb62c
	.long	46637                           # 0xb62d
	.long	46664                           # 0xb648
	.long	46665                           # 0xb649
	.long	46692                           # 0xb664
	.long	46693                           # 0xb665
	.long	46720                           # 0xb680
	.long	46721                           # 0xb681
	.long	46748                           # 0xb69c
	.long	46749                           # 0xb69d
	.long	46776                           # 0xb6b8
	.long	46777                           # 0xb6b9
	.long	46804                           # 0xb6d4
	.long	46805                           # 0xb6d5
	.long	46832                           # 0xb6f0
	.long	46833                           # 0xb6f1
	.long	46860                           # 0xb70c
	.long	46861                           # 0xb70d
	.long	46888                           # 0xb728
	.long	46889                           # 0xb729
	.long	46916                           # 0xb744
	.long	46917                           # 0xb745
	.long	46944                           # 0xb760
	.long	46945                           # 0xb761
	.long	46972                           # 0xb77c
	.long	46973                           # 0xb77d
	.long	47000                           # 0xb798
	.long	47001                           # 0xb799
	.long	47028                           # 0xb7b4
	.long	47029                           # 0xb7b5
	.long	47056                           # 0xb7d0
	.long	47057                           # 0xb7d1
	.long	47084                           # 0xb7ec
	.long	47085                           # 0xb7ed
	.long	47112                           # 0xb808
	.long	47113                           # 0xb809
	.long	47140                           # 0xb824
	.long	47141                           # 0xb825
	.long	47168                           # 0xb840
	.long	47169                           # 0xb841
	.long	47196                           # 0xb85c
	.long	47197                           # 0xb85d
	.long	47224                           # 0xb878
	.long	47225                           # 0xb879
	.long	47252                           # 0xb894
	.long	47253                           # 0xb895
	.long	47280                           # 0xb8b0
	.long	47281                           # 0xb8b1
	.long	47308                           # 0xb8cc
	.long	47309                           # 0xb8cd
	.long	47336                           # 0xb8e8
	.long	47337                           # 0xb8e9
	.long	47364                           # 0xb904
	.long	47365                           # 0xb905
	.long	47392                           # 0xb920
	.long	47393                           # 0xb921
	.long	47420                           # 0xb93c
	.long	47421                           # 0xb93d
	.long	47448                           # 0xb958
	.long	47449                           # 0xb959
	.long	47476                           # 0xb974
	.long	47477                           # 0xb975
	.long	47504                           # 0xb990
	.long	47505                           # 0xb991
	.long	47532                           # 0xb9ac
	.long	47533                           # 0xb9ad
	.long	47560                           # 0xb9c8
	.long	47561                           # 0xb9c9
	.long	47588                           # 0xb9e4
	.long	47589                           # 0xb9e5
	.long	47616                           # 0xba00
	.long	47617                           # 0xba01
	.long	47644                           # 0xba1c
	.long	47645                           # 0xba1d
	.long	47672                           # 0xba38
	.long	47673                           # 0xba39
	.long	47700                           # 0xba54
	.long	47701                           # 0xba55
	.long	47728                           # 0xba70
	.long	47729                           # 0xba71
	.long	47756                           # 0xba8c
	.long	47757                           # 0xba8d
	.long	47784                           # 0xbaa8
	.long	47785                           # 0xbaa9
	.long	47812                           # 0xbac4
	.long	47813                           # 0xbac5
	.long	47840                           # 0xbae0
	.long	47841                           # 0xbae1
	.long	47868                           # 0xbafc
	.long	47869                           # 0xbafd
	.long	47896                           # 0xbb18
	.long	47897                           # 0xbb19
	.long	47924                           # 0xbb34
	.long	47925                           # 0xbb35
	.long	47952                           # 0xbb50
	.long	47953                           # 0xbb51
	.long	47980                           # 0xbb6c
	.long	47981                           # 0xbb6d
	.long	48008                           # 0xbb88
	.long	48009                           # 0xbb89
	.long	48036                           # 0xbba4
	.long	48037                           # 0xbba5
	.long	48064                           # 0xbbc0
	.long	48065                           # 0xbbc1
	.long	48092                           # 0xbbdc
	.long	48093                           # 0xbbdd
	.long	48120                           # 0xbbf8
	.long	48121                           # 0xbbf9
	.long	48148                           # 0xbc14
	.long	48149                           # 0xbc15
	.long	48176                           # 0xbc30
	.long	48177                           # 0xbc31
	.long	48204                           # 0xbc4c
	.long	48205                           # 0xbc4d
	.long	48232                           # 0xbc68
	.long	48233                           # 0xbc69
	.long	48260                           # 0xbc84
	.long	48261                           # 0xbc85
	.long	48288                           # 0xbca0
	.long	48289                           # 0xbca1
	.long	48316                           # 0xbcbc
	.long	48317                           # 0xbcbd
	.long	48344                           # 0xbcd8
	.long	48345                           # 0xbcd9
	.long	48372                           # 0xbcf4
	.long	48373                           # 0xbcf5
	.long	48400                           # 0xbd10
	.long	48401                           # 0xbd11
	.long	48428                           # 0xbd2c
	.long	48429                           # 0xbd2d
	.long	48456                           # 0xbd48
	.long	48457                           # 0xbd49
	.long	48484                           # 0xbd64
	.long	48485                           # 0xbd65
	.long	48512                           # 0xbd80
	.long	48513                           # 0xbd81
	.long	48540                           # 0xbd9c
	.long	48541                           # 0xbd9d
	.long	48568                           # 0xbdb8
	.long	48569                           # 0xbdb9
	.long	48596                           # 0xbdd4
	.long	48597                           # 0xbdd5
	.long	48624                           # 0xbdf0
	.long	48625                           # 0xbdf1
	.long	48652                           # 0xbe0c
	.long	48653                           # 0xbe0d
	.long	48680                           # 0xbe28
	.long	48681                           # 0xbe29
	.long	48708                           # 0xbe44
	.long	48709                           # 0xbe45
	.long	48736                           # 0xbe60
	.long	48737                           # 0xbe61
	.long	48764                           # 0xbe7c
	.long	48765                           # 0xbe7d
	.long	48792                           # 0xbe98
	.long	48793                           # 0xbe99
	.long	48820                           # 0xbeb4
	.long	48821                           # 0xbeb5
	.long	48848                           # 0xbed0
	.long	48849                           # 0xbed1
	.long	48876                           # 0xbeec
	.long	48877                           # 0xbeed
	.long	48904                           # 0xbf08
	.long	48905                           # 0xbf09
	.long	48932                           # 0xbf24
	.long	48933                           # 0xbf25
	.long	48960                           # 0xbf40
	.long	48961                           # 0xbf41
	.long	48988                           # 0xbf5c
	.long	48989                           # 0xbf5d
	.long	49016                           # 0xbf78
	.long	49017                           # 0xbf79
	.long	49044                           # 0xbf94
	.long	49045                           # 0xbf95
	.long	49072                           # 0xbfb0
	.long	49073                           # 0xbfb1
	.long	49100                           # 0xbfcc
	.long	49101                           # 0xbfcd
	.long	49128                           # 0xbfe8
	.long	49129                           # 0xbfe9
	.long	49156                           # 0xc004
	.long	49157                           # 0xc005
	.long	49184                           # 0xc020
	.long	49185                           # 0xc021
	.long	49212                           # 0xc03c
	.long	49213                           # 0xc03d
	.long	49240                           # 0xc058
	.long	49241                           # 0xc059
	.long	49268                           # 0xc074
	.long	49269                           # 0xc075
	.long	49296                           # 0xc090
	.long	49297                           # 0xc091
	.long	49324                           # 0xc0ac
	.long	49325                           # 0xc0ad
	.long	49352                           # 0xc0c8
	.long	49353                           # 0xc0c9
	.long	49380                           # 0xc0e4
	.long	49381                           # 0xc0e5
	.long	49408                           # 0xc100
	.long	49409                           # 0xc101
	.long	49436                           # 0xc11c
	.long	49437                           # 0xc11d
	.long	49464                           # 0xc138
	.long	49465                           # 0xc139
	.long	49492                           # 0xc154
	.long	49493                           # 0xc155
	.long	49520                           # 0xc170
	.long	49521                           # 0xc171
	.long	49548                           # 0xc18c
	.long	49549                           # 0xc18d
	.long	49576                           # 0xc1a8
	.long	49577                           # 0xc1a9
	.long	49604                           # 0xc1c4
	.long	49605                           # 0xc1c5
	.long	49632                           # 0xc1e0
	.long	49633                           # 0xc1e1
	.long	49660                           # 0xc1fc
	.long	49661                           # 0xc1fd
	.long	49688                           # 0xc218
	.long	49689                           # 0xc219
	.long	49716                           # 0xc234
	.long	49717                           # 0xc235
	.long	49744                           # 0xc250
	.long	49745                           # 0xc251
	.long	49772                           # 0xc26c
	.long	49773                           # 0xc26d
	.long	49800                           # 0xc288
	.long	49801                           # 0xc289
	.long	49828                           # 0xc2a4
	.long	49829                           # 0xc2a5
	.long	49856                           # 0xc2c0
	.long	49857                           # 0xc2c1
	.long	49884                           # 0xc2dc
	.long	49885                           # 0xc2dd
	.long	49912                           # 0xc2f8
	.long	49913                           # 0xc2f9
	.long	49940                           # 0xc314
	.long	49941                           # 0xc315
	.long	49968                           # 0xc330
	.long	49969                           # 0xc331
	.long	49996                           # 0xc34c
	.long	49997                           # 0xc34d
	.long	50024                           # 0xc368
	.long	50025                           # 0xc369
	.long	50052                           # 0xc384
	.long	50053                           # 0xc385
	.long	50080                           # 0xc3a0
	.long	50081                           # 0xc3a1
	.long	50108                           # 0xc3bc
	.long	50109                           # 0xc3bd
	.long	50136                           # 0xc3d8
	.long	50137                           # 0xc3d9
	.long	50164                           # 0xc3f4
	.long	50165                           # 0xc3f5
	.long	50192                           # 0xc410
	.long	50193                           # 0xc411
	.long	50220                           # 0xc42c
	.long	50221                           # 0xc42d
	.long	50248                           # 0xc448
	.long	50249                           # 0xc449
	.long	50276                           # 0xc464
	.long	50277                           # 0xc465
	.long	50304                           # 0xc480
	.long	50305                           # 0xc481
	.long	50332                           # 0xc49c
	.long	50333                           # 0xc49d
	.long	50360                           # 0xc4b8
	.long	50361                           # 0xc4b9
	.long	50388                           # 0xc4d4
	.long	50389                           # 0xc4d5
	.long	50416                           # 0xc4f0
	.long	50417                           # 0xc4f1
	.long	50444                           # 0xc50c
	.long	50445                           # 0xc50d
	.long	50472                           # 0xc528
	.long	50473                           # 0xc529
	.long	50500                           # 0xc544
	.long	50501                           # 0xc545
	.long	50528                           # 0xc560
	.long	50529                           # 0xc561
	.long	50556                           # 0xc57c
	.long	50557                           # 0xc57d
	.long	50584                           # 0xc598
	.long	50585                           # 0xc599
	.long	50612                           # 0xc5b4
	.long	50613                           # 0xc5b5
	.long	50640                           # 0xc5d0
	.long	50641                           # 0xc5d1
	.long	50668                           # 0xc5ec
	.long	50669                           # 0xc5ed
	.long	50696                           # 0xc608
	.long	50697                           # 0xc609
	.long	50724                           # 0xc624
	.long	50725                           # 0xc625
	.long	50752                           # 0xc640
	.long	50753                           # 0xc641
	.long	50780                           # 0xc65c
	.long	50781                           # 0xc65d
	.long	50808                           # 0xc678
	.long	50809                           # 0xc679
	.long	50836                           # 0xc694
	.long	50837                           # 0xc695
	.long	50864                           # 0xc6b0
	.long	50865                           # 0xc6b1
	.long	50892                           # 0xc6cc
	.long	50893                           # 0xc6cd
	.long	50920                           # 0xc6e8
	.long	50921                           # 0xc6e9
	.long	50948                           # 0xc704
	.long	50949                           # 0xc705
	.long	50976                           # 0xc720
	.long	50977                           # 0xc721
	.long	51004                           # 0xc73c
	.long	51005                           # 0xc73d
	.long	51032                           # 0xc758
	.long	51033                           # 0xc759
	.long	51060                           # 0xc774
	.long	51061                           # 0xc775
	.long	51088                           # 0xc790
	.long	51089                           # 0xc791
	.long	51116                           # 0xc7ac
	.long	51117                           # 0xc7ad
	.long	51144                           # 0xc7c8
	.long	51145                           # 0xc7c9
	.long	51172                           # 0xc7e4
	.long	51173                           # 0xc7e5
	.long	51200                           # 0xc800
	.long	51201                           # 0xc801
	.long	51228                           # 0xc81c
	.long	51229                           # 0xc81d
	.long	51256                           # 0xc838
	.long	51257                           # 0xc839
	.long	51284                           # 0xc854
	.long	51285                           # 0xc855
	.long	51312                           # 0xc870
	.long	51313                           # 0xc871
	.long	51340                           # 0xc88c
	.long	51341                           # 0xc88d
	.long	51368                           # 0xc8a8
	.long	51369                           # 0xc8a9
	.long	51396                           # 0xc8c4
	.long	51397                           # 0xc8c5
	.long	51424                           # 0xc8e0
	.long	51425                           # 0xc8e1
	.long	51452                           # 0xc8fc
	.long	51453                           # 0xc8fd
	.long	51480                           # 0xc918
	.long	51481                           # 0xc919
	.long	51508                           # 0xc934
	.long	51509                           # 0xc935
	.long	51536                           # 0xc950
	.long	51537                           # 0xc951
	.long	51564                           # 0xc96c
	.long	51565                           # 0xc96d
	.long	51592                           # 0xc988
	.long	51593                           # 0xc989
	.long	51620                           # 0xc9a4
	.long	51621                           # 0xc9a5
	.long	51648                           # 0xc9c0
	.long	51649                           # 0xc9c1
	.long	51676                           # 0xc9dc
	.long	51677                           # 0xc9dd
	.long	51704                           # 0xc9f8
	.long	51705                           # 0xc9f9
	.long	51732                           # 0xca14
	.long	51733                           # 0xca15
	.long	51760                           # 0xca30
	.long	51761                           # 0xca31
	.long	51788                           # 0xca4c
	.long	51789                           # 0xca4d
	.long	51816                           # 0xca68
	.long	51817                           # 0xca69
	.long	51844                           # 0xca84
	.long	51845                           # 0xca85
	.long	51872                           # 0xcaa0
	.long	51873                           # 0xcaa1
	.long	51900                           # 0xcabc
	.long	51901                           # 0xcabd
	.long	51928                           # 0xcad8
	.long	51929                           # 0xcad9
	.long	51956                           # 0xcaf4
	.long	51957                           # 0xcaf5
	.long	51984                           # 0xcb10
	.long	51985                           # 0xcb11
	.long	52012                           # 0xcb2c
	.long	52013                           # 0xcb2d
	.long	52040                           # 0xcb48
	.long	52041                           # 0xcb49
	.long	52068                           # 0xcb64
	.long	52069                           # 0xcb65
	.long	52096                           # 0xcb80
	.long	52097                           # 0xcb81
	.long	52124                           # 0xcb9c
	.long	52125                           # 0xcb9d
	.long	52152                           # 0xcbb8
	.long	52153                           # 0xcbb9
	.long	52180                           # 0xcbd4
	.long	52181                           # 0xcbd5
	.long	52208                           # 0xcbf0
	.long	52209                           # 0xcbf1
	.long	52236                           # 0xcc0c
	.long	52237                           # 0xcc0d
	.long	52264                           # 0xcc28
	.long	52265                           # 0xcc29
	.long	52292                           # 0xcc44
	.long	52293                           # 0xcc45
	.long	52320                           # 0xcc60
	.long	52321                           # 0xcc61
	.long	52348                           # 0xcc7c
	.long	52349                           # 0xcc7d
	.long	52376                           # 0xcc98
	.long	52377                           # 0xcc99
	.long	52404                           # 0xccb4
	.long	52405                           # 0xccb5
	.long	52432                           # 0xccd0
	.long	52433                           # 0xccd1
	.long	52460                           # 0xccec
	.long	52461                           # 0xcced
	.long	52488                           # 0xcd08
	.long	52489                           # 0xcd09
	.long	52516                           # 0xcd24
	.long	52517                           # 0xcd25
	.long	52544                           # 0xcd40
	.long	52545                           # 0xcd41
	.long	52572                           # 0xcd5c
	.long	52573                           # 0xcd5d
	.long	52600                           # 0xcd78
	.long	52601                           # 0xcd79
	.long	52628                           # 0xcd94
	.long	52629                           # 0xcd95
	.long	52656                           # 0xcdb0
	.long	52657                           # 0xcdb1
	.long	52684                           # 0xcdcc
	.long	52685                           # 0xcdcd
	.long	52712                           # 0xcde8
	.long	52713                           # 0xcde9
	.long	52740                           # 0xce04
	.long	52741                           # 0xce05
	.long	52768                           # 0xce20
	.long	52769                           # 0xce21
	.long	52796                           # 0xce3c
	.long	52797                           # 0xce3d
	.long	52824                           # 0xce58
	.long	52825                           # 0xce59
	.long	52852                           # 0xce74
	.long	52853                           # 0xce75
	.long	52880                           # 0xce90
	.long	52881                           # 0xce91
	.long	52908                           # 0xceac
	.long	52909                           # 0xcead
	.long	52936                           # 0xcec8
	.long	52937                           # 0xcec9
	.long	52964                           # 0xcee4
	.long	52965                           # 0xcee5
	.long	52992                           # 0xcf00
	.long	52993                           # 0xcf01
	.long	53020                           # 0xcf1c
	.long	53021                           # 0xcf1d
	.long	53048                           # 0xcf38
	.long	53049                           # 0xcf39
	.long	53076                           # 0xcf54
	.long	53077                           # 0xcf55
	.long	53104                           # 0xcf70
	.long	53105                           # 0xcf71
	.long	53132                           # 0xcf8c
	.long	53133                           # 0xcf8d
	.long	53160                           # 0xcfa8
	.long	53161                           # 0xcfa9
	.long	53188                           # 0xcfc4
	.long	53189                           # 0xcfc5
	.long	53216                           # 0xcfe0
	.long	53217                           # 0xcfe1
	.long	53244                           # 0xcffc
	.long	53245                           # 0xcffd
	.long	53272                           # 0xd018
	.long	53273                           # 0xd019
	.long	53300                           # 0xd034
	.long	53301                           # 0xd035
	.long	53328                           # 0xd050
	.long	53329                           # 0xd051
	.long	53356                           # 0xd06c
	.long	53357                           # 0xd06d
	.long	53384                           # 0xd088
	.long	53385                           # 0xd089
	.long	53412                           # 0xd0a4
	.long	53413                           # 0xd0a5
	.long	53440                           # 0xd0c0
	.long	53441                           # 0xd0c1
	.long	53468                           # 0xd0dc
	.long	53469                           # 0xd0dd
	.long	53496                           # 0xd0f8
	.long	53497                           # 0xd0f9
	.long	53524                           # 0xd114
	.long	53525                           # 0xd115
	.long	53552                           # 0xd130
	.long	53553                           # 0xd131
	.long	53580                           # 0xd14c
	.long	53581                           # 0xd14d
	.long	53608                           # 0xd168
	.long	53609                           # 0xd169
	.long	53636                           # 0xd184
	.long	53637                           # 0xd185
	.long	53664                           # 0xd1a0
	.long	53665                           # 0xd1a1
	.long	53692                           # 0xd1bc
	.long	53693                           # 0xd1bd
	.long	53720                           # 0xd1d8
	.long	53721                           # 0xd1d9
	.long	53748                           # 0xd1f4
	.long	53749                           # 0xd1f5
	.long	53776                           # 0xd210
	.long	53777                           # 0xd211
	.long	53804                           # 0xd22c
	.long	53805                           # 0xd22d
	.long	53832                           # 0xd248
	.long	53833                           # 0xd249
	.long	53860                           # 0xd264
	.long	53861                           # 0xd265
	.long	53888                           # 0xd280
	.long	53889                           # 0xd281
	.long	53916                           # 0xd29c
	.long	53917                           # 0xd29d
	.long	53944                           # 0xd2b8
	.long	53945                           # 0xd2b9
	.long	53972                           # 0xd2d4
	.long	53973                           # 0xd2d5
	.long	54000                           # 0xd2f0
	.long	54001                           # 0xd2f1
	.long	54028                           # 0xd30c
	.long	54029                           # 0xd30d
	.long	54056                           # 0xd328
	.long	54057                           # 0xd329
	.long	54084                           # 0xd344
	.long	54085                           # 0xd345
	.long	54112                           # 0xd360
	.long	54113                           # 0xd361
	.long	54140                           # 0xd37c
	.long	54141                           # 0xd37d
	.long	54168                           # 0xd398
	.long	54169                           # 0xd399
	.long	54196                           # 0xd3b4
	.long	54197                           # 0xd3b5
	.long	54224                           # 0xd3d0
	.long	54225                           # 0xd3d1
	.long	54252                           # 0xd3ec
	.long	54253                           # 0xd3ed
	.long	54280                           # 0xd408
	.long	54281                           # 0xd409
	.long	54308                           # 0xd424
	.long	54309                           # 0xd425
	.long	54336                           # 0xd440
	.long	54337                           # 0xd441
	.long	54364                           # 0xd45c
	.long	54365                           # 0xd45d
	.long	54392                           # 0xd478
	.long	54393                           # 0xd479
	.long	54420                           # 0xd494
	.long	54421                           # 0xd495
	.long	54448                           # 0xd4b0
	.long	54449                           # 0xd4b1
	.long	54476                           # 0xd4cc
	.long	54477                           # 0xd4cd
	.long	54504                           # 0xd4e8
	.long	54505                           # 0xd4e9
	.long	54532                           # 0xd504
	.long	54533                           # 0xd505
	.long	54560                           # 0xd520
	.long	54561                           # 0xd521
	.long	54588                           # 0xd53c
	.long	54589                           # 0xd53d
	.long	54616                           # 0xd558
	.long	54617                           # 0xd559
	.long	54644                           # 0xd574
	.long	54645                           # 0xd575
	.long	54672                           # 0xd590
	.long	54673                           # 0xd591
	.long	54700                           # 0xd5ac
	.long	54701                           # 0xd5ad
	.long	54728                           # 0xd5c8
	.long	54729                           # 0xd5c9
	.long	54756                           # 0xd5e4
	.long	54757                           # 0xd5e5
	.long	54784                           # 0xd600
	.long	54785                           # 0xd601
	.long	54812                           # 0xd61c
	.long	54813                           # 0xd61d
	.long	54840                           # 0xd638
	.long	54841                           # 0xd639
	.long	54868                           # 0xd654
	.long	54869                           # 0xd655
	.long	54896                           # 0xd670
	.long	54897                           # 0xd671
	.long	54924                           # 0xd68c
	.long	54925                           # 0xd68d
	.long	54952                           # 0xd6a8
	.long	54953                           # 0xd6a9
	.long	54980                           # 0xd6c4
	.long	54981                           # 0xd6c5
	.long	55008                           # 0xd6e0
	.long	55009                           # 0xd6e1
	.long	55036                           # 0xd6fc
	.long	55037                           # 0xd6fd
	.long	55064                           # 0xd718
	.long	55065                           # 0xd719
	.long	55092                           # 0xd734
	.long	55093                           # 0xd735
	.long	55120                           # 0xd750
	.long	55121                           # 0xd751
	.long	55148                           # 0xd76c
	.long	55149                           # 0xd76d
	.long	55176                           # 0xd788
	.long	55177                           # 0xd789
	.long	55216                           # 0xd7b0
	.long	55243                           # 0xd7cb
	.long	64286                           # 0xfb1e
	.long	65024                           # 0xfe00
	.long	65056                           # 0xfe20
	.long	65279                           # 0xfeff
	.long	65438                           # 0xff9e
	.long	65520                           # 0xfff0
	.long	66045                           # 0x101fd
	.long	66272                           # 0x102e0
	.long	66422                           # 0x10376
	.long	68097                           # 0x10a01
	.long	68101                           # 0x10a05
	.long	68108                           # 0x10a0c
	.long	68152                           # 0x10a38
	.long	68159                           # 0x10a3f
	.long	68325                           # 0x10ae5
	.long	68900                           # 0x10d24
	.long	69291                           # 0x10eab
	.long	69373                           # 0x10efd
	.long	69446                           # 0x10f46
	.long	69506                           # 0x10f82
	.long	69632                           # 0x11000
	.long	69633                           # 0x11001
	.long	69634                           # 0x11002
	.long	69688                           # 0x11038
	.long	69744                           # 0x11070
	.long	69747                           # 0x11073
	.long	69759                           # 0x1107f
	.long	69762                           # 0x11082
	.long	69808                           # 0x110b0
	.long	69811                           # 0x110b3
	.long	69815                           # 0x110b7
	.long	69817                           # 0x110b9
	.long	69821                           # 0x110bd
	.long	69826                           # 0x110c2
	.long	69837                           # 0x110cd
	.long	69888                           # 0x11100
	.long	69927                           # 0x11127
	.long	69932                           # 0x1112c
	.long	69933                           # 0x1112d
	.long	69957                           # 0x11145
	.long	70003                           # 0x11173
	.long	70016                           # 0x11180
	.long	70018                           # 0x11182
	.long	70067                           # 0x111b3
	.long	70070                           # 0x111b6
	.long	70079                           # 0x111bf
	.long	70082                           # 0x111c2
	.long	70089                           # 0x111c9
	.long	70094                           # 0x111ce
	.long	70095                           # 0x111cf
	.long	70188                           # 0x1122c
	.long	70191                           # 0x1122f
	.long	70194                           # 0x11232
	.long	70196                           # 0x11234
	.long	70197                           # 0x11235
	.long	70198                           # 0x11236
	.long	70206                           # 0x1123e
	.long	70209                           # 0x11241
	.long	70367                           # 0x112df
	.long	70368                           # 0x112e0
	.long	70371                           # 0x112e3
	.long	70400                           # 0x11300
	.long	70402                           # 0x11302
	.long	70459                           # 0x1133b
	.long	70462                           # 0x1133e
	.long	70463                           # 0x1133f
	.long	70464                           # 0x11340
	.long	70465                           # 0x11341
	.long	70471                           # 0x11347
	.long	70475                           # 0x1134b
	.long	70487                           # 0x11357
	.long	70498                           # 0x11362
	.long	70502                           # 0x11366
	.long	70512                           # 0x11370
	.long	70709                           # 0x11435
	.long	70712                           # 0x11438
	.long	70720                           # 0x11440
	.long	70722                           # 0x11442
	.long	70725                           # 0x11445
	.long	70726                           # 0x11446
	.long	70750                           # 0x1145e
	.long	70832                           # 0x114b0
	.long	70833                           # 0x114b1
	.long	70835                           # 0x114b3
	.long	70841                           # 0x114b9
	.long	70842                           # 0x114ba
	.long	70843                           # 0x114bb
	.long	70845                           # 0x114bd
	.long	70846                           # 0x114be
	.long	70847                           # 0x114bf
	.long	70849                           # 0x114c1
	.long	70850                           # 0x114c2
	.long	71087                           # 0x115af
	.long	71088                           # 0x115b0
	.long	71090                           # 0x115b2
	.long	71096                           # 0x115b8
	.long	71100                           # 0x115bc
	.long	71102                           # 0x115be
	.long	71103                           # 0x115bf
	.long	71132                           # 0x115dc
	.long	71216                           # 0x11630
	.long	71219                           # 0x11633
	.long	71227                           # 0x1163b
	.long	71229                           # 0x1163d
	.long	71230                           # 0x1163e
	.long	71231                           # 0x1163f
	.long	71339                           # 0x116ab
	.long	71340                           # 0x116ac
	.long	71341                           # 0x116ad
	.long	71342                           # 0x116ae
	.long	71344                           # 0x116b0
	.long	71350                           # 0x116b6
	.long	71351                           # 0x116b7
	.long	71453                           # 0x1171d
	.long	71458                           # 0x11722
	.long	71462                           # 0x11726
	.long	71463                           # 0x11727
	.long	71724                           # 0x1182c
	.long	71727                           # 0x1182f
	.long	71736                           # 0x11838
	.long	71737                           # 0x11839
	.long	71984                           # 0x11930
	.long	71985                           # 0x11931
	.long	71991                           # 0x11937
	.long	71995                           # 0x1193b
	.long	71997                           # 0x1193d
	.long	71998                           # 0x1193e
	.long	71999                           # 0x1193f
	.long	72000                           # 0x11940
	.long	72001                           # 0x11941
	.long	72002                           # 0x11942
	.long	72003                           # 0x11943
	.long	72145                           # 0x119d1
	.long	72148                           # 0x119d4
	.long	72154                           # 0x119da
	.long	72156                           # 0x119dc
	.long	72160                           # 0x119e0
	.long	72164                           # 0x119e4
	.long	72193                           # 0x11a01
	.long	72243                           # 0x11a33
	.long	72249                           # 0x11a39
	.long	72250                           # 0x11a3a
	.long	72251                           # 0x11a3b
	.long	72263                           # 0x11a47
	.long	72273                           # 0x11a51
	.long	72279                           # 0x11a57
	.long	72281                           # 0x11a59
	.long	72324                           # 0x11a84
	.long	72330                           # 0x11a8a
	.long	72343                           # 0x11a97
	.long	72344                           # 0x11a98
	.long	72751                           # 0x11c2f
	.long	72752                           # 0x11c30
	.long	72760                           # 0x11c38
	.long	72766                           # 0x11c3e
	.long	72767                           # 0x11c3f
	.long	72850                           # 0x11c92
	.long	72873                           # 0x11ca9
	.long	72874                           # 0x11caa
	.long	72881                           # 0x11cb1
	.long	72882                           # 0x11cb2
	.long	72884                           # 0x11cb4
	.long	72885                           # 0x11cb5
	.long	73009                           # 0x11d31
	.long	73018                           # 0x11d3a
	.long	73020                           # 0x11d3c
	.long	73023                           # 0x11d3f
	.long	73030                           # 0x11d46
	.long	73031                           # 0x11d47
	.long	73098                           # 0x11d8a
	.long	73104                           # 0x11d90
	.long	73107                           # 0x11d93
	.long	73109                           # 0x11d95
	.long	73110                           # 0x11d96
	.long	73111                           # 0x11d97
	.long	73459                           # 0x11ef3
	.long	73461                           # 0x11ef5
	.long	73472                           # 0x11f00
	.long	73474                           # 0x11f02
	.long	73475                           # 0x11f03
	.long	73524                           # 0x11f34
	.long	73526                           # 0x11f36
	.long	73534                           # 0x11f3e
	.long	73536                           # 0x11f40
	.long	73537                           # 0x11f41
	.long	73538                           # 0x11f42
	.long	78896                           # 0x13430
	.long	78912                           # 0x13440
	.long	78919                           # 0x13447
	.long	92912                           # 0x16af0
	.long	92976                           # 0x16b30
	.long	94031                           # 0x16f4f
	.long	94033                           # 0x16f51
	.long	94095                           # 0x16f8f
	.long	94180                           # 0x16fe4
	.long	94192                           # 0x16ff0
	.long	113821                          # 0x1bc9d
	.long	113824                          # 0x1bca0
	.long	118528                          # 0x1cf00
	.long	118576                          # 0x1cf30
	.long	119141                          # 0x1d165
	.long	119142                          # 0x1d166
	.long	119143                          # 0x1d167
	.long	119149                          # 0x1d16d
	.long	119150                          # 0x1d16e
	.long	119155                          # 0x1d173
	.long	119163                          # 0x1d17b
	.long	119173                          # 0x1d185
	.long	119210                          # 0x1d1aa
	.long	119362                          # 0x1d242
	.long	121344                          # 0x1da00
	.long	121403                          # 0x1da3b
	.long	121461                          # 0x1da75
	.long	121476                          # 0x1da84
	.long	121499                          # 0x1da9b
	.long	121505                          # 0x1daa1
	.long	122880                          # 0x1e000
	.long	122888                          # 0x1e008
	.long	122907                          # 0x1e01b
	.long	122915                          # 0x1e023
	.long	122918                          # 0x1e026
	.long	123023                          # 0x1e08f
	.long	123184                          # 0x1e130
	.long	123566                          # 0x1e2ae
	.long	123628                          # 0x1e2ec
	.long	124140                          # 0x1e4ec
	.long	125136                          # 0x1e8d0
	.long	125252                          # 0x1e944
	.long	127462                          # 0x1f1e6
	.long	127995                          # 0x1f3fb
	.long	917504                          # 0xe0000
	.long	917536                          # 0xe0020
	.long	917632                          # 0xe0080
	.long	917760                          # 0xe0100
	.long	918000                          # 0xe01f0
	.short	4106                            # 0x100a
	.short	16385                           # 0x4001
	.short	4098                            # 0x1002
	.short	1                               # 0x1
	.short	4114                            # 0x1012
	.short	4129                            # 0x1021
	.short	4097                            # 0x1001
	.short	8304                            # 0x2070
	.short	8199                            # 0x2007
	.short	8237                            # 0x202d
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	28678                           # 0x7006
	.short	8203                            # 0x200b
	.short	4097                            # 0x1001
	.short	8213                            # 0x2015
	.short	8193                            # 0x2001
	.short	8199                            # 0x2007
	.short	28673                           # 0x7001
	.short	8198                            # 0x2006
	.short	8194                            # 0x2002
	.short	8196                            # 0x2004
	.short	28673                           # 0x7001
	.short	8193                            # 0x2001
	.short	8219                            # 0x201b
	.short	8203                            # 0x200b
	.short	8201                            # 0x2009
	.short	8193                            # 0x2001
	.short	8196                            # 0x2004
	.short	8201                            # 0x2009
	.short	8195                            # 0x2003
	.short	8197                            # 0x2005
	.short	8195                            # 0x2003
	.short	28674                           # 0x7002
	.short	8200                            # 0x2008
	.short	8216                            # 0x2018
	.short	28673                           # 0x7001
	.short	8224                            # 0x2020
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8200                            # 0x2008
	.short	36868                           # 0x9004
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8199                            # 0x2007
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8196                            # 0x2004
	.short	36866                           # 0x9002
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8195                            # 0x2003
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8197                            # 0x2005
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8198                            # 0x2006
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8196                            # 0x2004
	.short	36866                           # 0x9002
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	36867                           # 0x9003
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	36868                           # 0x9004
	.short	8195                            # 0x2003
	.short	8196                            # 0x2004
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8196                            # 0x2004
	.short	36867                           # 0x9003
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	28673                           # 0x7001
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8195                            # 0x2003
	.short	8193                            # 0x2001
	.short	36871                           # 0x9007
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	8200                            # 0x2008
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8201                            # 0x2009
	.short	8199                            # 0x2007
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8206                            # 0x200e
	.short	36865                           # 0x9001
	.short	8197                            # 0x2005
	.short	8194                            # 0x2002
	.short	8203                            # 0x200b
	.short	8228                            # 0x2024
	.short	8193                            # 0x2001
	.short	8196                            # 0x2004
	.short	36865                           # 0x9001
	.short	8198                            # 0x2006
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8195                            # 0x2003
	.short	8196                            # 0x2004
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	12384                           # 0x3060
	.short	45128                           # 0xb048
	.short	41048                           # 0xa058
	.short	8195                            # 0x2003
	.short	8195                            # 0x2003
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	36872                           # 0x9008
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8203                            # 0x200b
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	4097                            # 0x1001
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	36868                           # 0x9004
	.short	8194                            # 0x2002
	.short	36867                           # 0x9003
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36870                           # 0x9006
	.short	8195                            # 0x2003
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8200                            # 0x2008
	.short	36870                           # 0x9006
	.short	8202                            # 0x200a
	.short	8193                            # 0x2001
	.short	8223                            # 0x201f
	.short	8196                            # 0x2004
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36869                           # 0x9005
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8201                            # 0x2009
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	36865                           # 0x9001
	.short	8196                            # 0x2004
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8195                            # 0x2003
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8195                            # 0x2003
	.short	36866                           # 0x9002
	.short	36872                           # 0x9008
	.short	8200                            # 0x2008
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8195                            # 0x2003
	.short	8205                            # 0x200d
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8256                            # 0x2040
	.short	4097                            # 0x1001
	.short	8193                            # 0x2001
	.short	49153                           # 0xc001
	.short	4098                            # 0x1002
	.short	4103                            # 0x1007
	.short	4112                            # 0x1010
	.short	8225                            # 0x2021
	.short	8195                            # 0x2003
	.short	8193                            # 0x2001
	.short	8224                            # 0x2020
	.short	8198                            # 0x2006
	.short	8194                            # 0x2002
	.short	8196                            # 0x2004
	.short	8202                            # 0x200a
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	36880                           # 0x9010
	.short	8194                            # 0x2002
	.short	8210                            # 0x2012
	.short	8193                            # 0x2001
	.short	8200                            # 0x2008
	.short	8203                            # 0x200b
	.short	36866                           # 0x9002
	.short	12317                           # 0x301d
	.short	8195                            # 0x2003
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8196                            # 0x2004
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	8198                            # 0x2006
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	20481                           # 0x5001
	.short	24603                           # 0x601b
	.short	45079                           # 0xb017
	.short	41009                           # 0xa031
	.short	8193                            # 0x2001
	.short	8208                            # 0x2010
	.short	8208                            # 0x2010
	.short	4097                            # 0x1001
	.short	8194                            # 0x2002
	.short	4108                            # 0x100c
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8197                            # 0x2005
	.short	8195                            # 0x2003
	.short	8194                            # 0x2002
	.short	8196                            # 0x2004
	.short	8195                            # 0x2003
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8196                            # 0x2004
	.short	8194                            # 0x2002
	.short	8195                            # 0x2003
	.short	8203                            # 0x200b
	.short	8196                            # 0x2004
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8207                            # 0x200f
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8195                            # 0x2003
	.short	36865                           # 0x9001
	.short	36867                           # 0x9003
	.short	8196                            # 0x2004
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	28673                           # 0x7001
	.short	8193                            # 0x2001
	.short	28673                           # 0x7001
	.short	8195                            # 0x2003
	.short	8197                            # 0x2005
	.short	36865                           # 0x9001
	.short	8200                            # 0x2008
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	36867                           # 0x9003
	.short	8201                            # 0x2009
	.short	36866                           # 0x9002
	.short	28674                           # 0x7002
	.short	8196                            # 0x2004
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8195                            # 0x2003
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8200                            # 0x2008
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36868                           # 0x9004
	.short	36866                           # 0x9002
	.short	36867                           # 0x9003
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8199                            # 0x2007
	.short	8197                            # 0x2005
	.short	36867                           # 0x9003
	.short	8200                            # 0x2008
	.short	36866                           # 0x9002
	.short	8195                            # 0x2003
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8198                            # 0x2006
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8196                            # 0x2004
	.short	36868                           # 0x9004
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8194                            # 0x2002
	.short	36867                           # 0x9003
	.short	8200                            # 0x2008
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8198                            # 0x2006
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	8195                            # 0x2003
	.short	8196                            # 0x2004
	.short	36865                           # 0x9001
	.short	8197                            # 0x2005
	.short	36867                           # 0x9003
	.short	8201                            # 0x2009
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8193                            # 0x2001
	.short	36869                           # 0x9005
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	28673                           # 0x7001
	.short	36865                           # 0x9001
	.short	28673                           # 0x7001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	36867                           # 0x9003
	.short	8196                            # 0x2004
	.short	8194                            # 0x2002
	.short	36868                           # 0x9004
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8202                            # 0x200a
	.short	8198                            # 0x2006
	.short	36865                           # 0x9001
	.short	28673                           # 0x7001
	.short	8196                            # 0x2004
	.short	8193                            # 0x2001
	.short	8198                            # 0x2006
	.short	36866                           # 0x9002
	.short	8195                            # 0x2003
	.short	28678                           # 0x7006
	.short	8205                            # 0x200d
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	8198                            # 0x2006
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	8214                            # 0x2016
	.short	36865                           # 0x9001
	.short	8199                            # 0x2007
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	36865                           # 0x9001
	.short	8194                            # 0x2002
	.short	8198                            # 0x2006
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	8199                            # 0x2007
	.short	28673                           # 0x7001
	.short	8193                            # 0x2001
	.short	36869                           # 0x9005
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	8194                            # 0x2002
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	28673                           # 0x7001
	.short	36865                           # 0x9001
	.short	36866                           # 0x9002
	.short	8197                            # 0x2005
	.short	36866                           # 0x9002
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8193                            # 0x2001
	.short	4112                            # 0x1010
	.short	8193                            # 0x2001
	.short	8207                            # 0x200f
	.short	8197                            # 0x2005
	.short	8199                            # 0x2007
	.short	8193                            # 0x2001
	.short	36919                           # 0x9037
	.short	8196                            # 0x2004
	.short	8193                            # 0x2001
	.short	36866                           # 0x9002
	.short	8194                            # 0x2002
	.short	4100                            # 0x1004
	.short	8238                            # 0x202e
	.short	8215                            # 0x2017
	.short	8193                            # 0x2001
	.short	36865                           # 0x9001
	.short	8195                            # 0x2003
	.short	36865                           # 0x9001
	.short	8197                            # 0x2005
	.short	4104                            # 0x1008
	.short	8200                            # 0x2008
	.short	8199                            # 0x2007
	.short	8196                            # 0x2004
	.short	8195                            # 0x2003
	.short	8247                            # 0x2037
	.short	8242                            # 0x2032
	.short	8193                            # 0x2001
	.short	8193                            # 0x2001
	.short	8197                            # 0x2005
	.short	8207                            # 0x200f
	.short	8199                            # 0x2007
	.short	8209                            # 0x2011
	.short	8199                            # 0x2007
	.short	8194                            # 0x2002
	.short	8197                            # 0x2005
	.short	8193                            # 0x2001
	.short	8199                            # 0x2007
	.short	8193                            # 0x2001
	.short	8196                            # 0x2004
	.short	8196                            # 0x2004
	.short	8199                            # 0x2007
	.short	8199                            # 0x2007
	.short	32794                           # 0x801a
	.short	8197                            # 0x2005
	.short	4128                            # 0x1020
	.short	8288                            # 0x2060
	.short	4224                            # 0x1080
	.short	8432                            # 0x20f0
	.short	7696                            # 0x1e10
	.zero	2

	.section	.rdata,"dr",discard,"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B"
	.globl	"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B" # @"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B"
	.p2align	2, 0x0
"?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B":
	.long	169                             # 0xa9
	.long	174                             # 0xae
	.long	8252                            # 0x203c
	.long	8265                            # 0x2049
	.long	8482                            # 0x2122
	.long	8505                            # 0x2139
	.long	8596                            # 0x2194
	.long	8617                            # 0x21a9
	.long	8986                            # 0x231a
	.long	9000                            # 0x2328
	.long	9096                            # 0x2388
	.long	9167                            # 0x23cf
	.long	9193                            # 0x23e9
	.long	9208                            # 0x23f8
	.long	9410                            # 0x24c2
	.long	9642                            # 0x25aa
	.long	9654                            # 0x25b6
	.long	9664                            # 0x25c0
	.long	9723                            # 0x25fb
	.long	9728                            # 0x2600
	.long	9735                            # 0x2607
	.long	9748                            # 0x2614
	.long	9872                            # 0x2690
	.long	9992                            # 0x2708
	.long	10004                           # 0x2714
	.long	10006                           # 0x2716
	.long	10013                           # 0x271d
	.long	10017                           # 0x2721
	.long	10024                           # 0x2728
	.long	10035                           # 0x2733
	.long	10052                           # 0x2744
	.long	10055                           # 0x2747
	.long	10060                           # 0x274c
	.long	10062                           # 0x274e
	.long	10067                           # 0x2753
	.long	10071                           # 0x2757
	.long	10083                           # 0x2763
	.long	10133                           # 0x2795
	.long	10145                           # 0x27a1
	.long	10160                           # 0x27b0
	.long	10175                           # 0x27bf
	.long	10548                           # 0x2934
	.long	11013                           # 0x2b05
	.long	11035                           # 0x2b1b
	.long	11088                           # 0x2b50
	.long	11093                           # 0x2b55
	.long	12336                           # 0x3030
	.long	12349                           # 0x303d
	.long	12951                           # 0x3297
	.long	12953                           # 0x3299
	.long	126976                          # 0x1f000
	.long	127245                          # 0x1f10d
	.long	127279                          # 0x1f12f
	.long	127340                          # 0x1f16c
	.long	127358                          # 0x1f17e
	.long	127374                          # 0x1f18e
	.long	127377                          # 0x1f191
	.long	127405                          # 0x1f1ad
	.long	127489                          # 0x1f201
	.long	127514                          # 0x1f21a
	.long	127535                          # 0x1f22f
	.long	127538                          # 0x1f232
	.long	127548                          # 0x1f23c
	.long	127561                          # 0x1f249
	.long	128000                          # 0x1f400
	.long	128326                          # 0x1f546
	.long	128640                          # 0x1f680
	.long	128884                          # 0x1f774
	.long	128981                          # 0x1f7d5
	.long	129036                          # 0x1f80c
	.long	129096                          # 0x1f848
	.long	129114                          # 0x1f85a
	.long	129160                          # 0x1f888
	.long	129198                          # 0x1f8ae
	.long	129292                          # 0x1f90c
	.long	129340                          # 0x1f93c
	.long	129351                          # 0x1f947
	.long	130048                          # 0x1fc00
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	11                              # 0xb
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	4                               # 0x4
	.short	6                               # 0x6
	.short	12                              # 0xc
	.short	114                             # 0x72
	.short	118                             # 0x76
	.short	11                              # 0xb
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	5                               # 0x5
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	2                               # 0x2
	.short	3                               # 0x3
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	256                             # 0x100
	.short	3                               # 0x3
	.short	1                               # 0x1
	.short	6                               # 0x6
	.short	2                               # 0x2
	.short	1                               # 0x1
	.short	10                              # 0xa
	.short	57                              # 0x39
	.short	15                              # 0xf
	.short	1                               # 0x1
	.short	1                               # 0x1
	.short	9                               # 0x9
	.short	4                               # 0x4
	.short	434                             # 0x1b2
	.short	318                             # 0x13e
	.short	266                             # 0x10a
	.short	128                             # 0x80
	.short	12                              # 0xc
	.short	43                              # 0x2b
	.short	4                               # 0x4
	.short	8                               # 0x8
	.short	6                               # 0x6
	.short	8                               # 0x8
	.short	82                              # 0x52
	.short	47                              # 0x2f
	.short	10                              # 0xa
	.short	441                             # 0x1b9
	.short	1022                            # 0x3fe

	.section	.bss,"bw",discard,"?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB"
	.globl	"?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB" # @"?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB"
	.p2align	3, 0x0
"?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB":
	.quad	0

	.section	.rdata,"dr",discard,"??_C@_00CNPNBAHC@?$AA@"
	.globl	"??_C@_00CNPNBAHC@?$AA@"        # @"??_C@_00CNPNBAHC@?$AA@"
"??_C@_00CNPNBAHC@?$AA@":
	.zero	1

	.section	.rdata,"dr",discard,"??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@"
	.globl	"??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@" # @"??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@"
"??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@":
	.asciz	"bad locale name"

	.section	.rdata,"dr",largest,"??_7?$numpunct@D@std@@6B@"
	.p2align	4, 0x0                          # @7
.L__unnamed_8:
	.quad	"??_R4?$numpunct@D@std@@6B@"
	.quad	"??_G?$numpunct@D@std@@MEAAPEAXI@Z"
	.quad	"?_Incref@facet@locale@std@@UEAAXXZ"
	.quad	"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ"
	.quad	"?do_decimal_point@?$numpunct@D@std@@MEBADXZ"
	.quad	"?do_thousands_sep@?$numpunct@D@std@@MEBADXZ"
	.quad	"?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
	.quad	"?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"
	.quad	"?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ"

	.section	.rdata,"dr",discard,"??_R4?$numpunct@D@std@@6B@"
	.globl	"??_R4?$numpunct@D@std@@6B@"    # @"??_R4?$numpunct@D@std@@6B@"
	.p2align	4, 0x0
"??_R4?$numpunct@D@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV?$numpunct@D@std@@@8"@IMGREL
	.long	"??_R3?$numpunct@D@std@@8"@IMGREL
	.long	"??_R4?$numpunct@D@std@@6B@"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV?$numpunct@D@std@@@8"
	.globl	"??_R0?AV?$numpunct@D@std@@@8"  # @"??_R0?AV?$numpunct@D@std@@@8"
	.p2align	4, 0x0
"??_R0?AV?$numpunct@D@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV?$numpunct@D@std@@"
	.zero	1

	.section	.rdata,"dr",discard,"??_R3?$numpunct@D@std@@8"
	.globl	"??_R3?$numpunct@D@std@@8"      # @"??_R3?$numpunct@D@std@@8"
	.p2align	3, 0x0
"??_R3?$numpunct@D@std@@8":
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	4                               # 0x4
	.long	"??_R2?$numpunct@D@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2?$numpunct@D@std@@8"
	.globl	"??_R2?$numpunct@D@std@@8"      # @"??_R2?$numpunct@D@std@@8"
	.p2align	4, 0x0
"??_R2?$numpunct@D@std@@8":
	.long	"??_R1A@?0A@EA@?$numpunct@D@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@facet@locale@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@_Facet_base@std@@8"@IMGREL
	.long	"??_R17?0A@EA@_Crt_new_delete@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@?$numpunct@D@std@@8"
	.globl	"??_R1A@?0A@EA@?$numpunct@D@std@@8" # @"??_R1A@?0A@EA@?$numpunct@D@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@?$numpunct@D@std@@8":
	.long	"??_R0?AV?$numpunct@D@std@@@8"@IMGREL
	.long	3                               # 0x3
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3?$numpunct@D@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@facet@locale@std@@8"
	.globl	"??_R1A@?0A@EA@facet@locale@std@@8" # @"??_R1A@?0A@EA@facet@locale@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@facet@locale@std@@8":
	.long	"??_R0?AVfacet@locale@std@@@8"@IMGREL
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3facet@locale@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVfacet@locale@std@@@8"
	.globl	"??_R0?AVfacet@locale@std@@@8"  # @"??_R0?AVfacet@locale@std@@@8"
	.p2align	4, 0x0
"??_R0?AVfacet@locale@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVfacet@locale@std@@"
	.zero	1

	.section	.rdata,"dr",discard,"??_R3facet@locale@std@@8"
	.globl	"??_R3facet@locale@std@@8"      # @"??_R3facet@locale@std@@8"
	.p2align	3, 0x0
"??_R3facet@locale@std@@8":
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	3                               # 0x3
	.long	"??_R2facet@locale@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2facet@locale@std@@8"
	.globl	"??_R2facet@locale@std@@8"      # @"??_R2facet@locale@std@@8"
	.p2align	2, 0x0
"??_R2facet@locale@std@@8":
	.long	"??_R1A@?0A@EA@facet@locale@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@_Facet_base@std@@8"@IMGREL
	.long	"??_R17?0A@EA@_Crt_new_delete@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_Facet_base@std@@8"
	.globl	"??_R1A@?0A@EA@_Facet_base@std@@8" # @"??_R1A@?0A@EA@_Facet_base@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_Facet_base@std@@8":
	.long	"??_R0?AV_Facet_base@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Facet_base@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV_Facet_base@std@@@8"
	.globl	"??_R0?AV_Facet_base@std@@@8"   # @"??_R0?AV_Facet_base@std@@@8"
	.p2align	4, 0x0
"??_R0?AV_Facet_base@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV_Facet_base@std@@"
	.zero	2

	.section	.rdata,"dr",discard,"??_R3_Facet_base@std@@8"
	.globl	"??_R3_Facet_base@std@@8"       # @"??_R3_Facet_base@std@@8"
	.p2align	3, 0x0
"??_R3_Facet_base@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2_Facet_base@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_Facet_base@std@@8"
	.globl	"??_R2_Facet_base@std@@8"       # @"??_R2_Facet_base@std@@8"
	.p2align	2, 0x0
"??_R2_Facet_base@std@@8":
	.long	"??_R1A@?0A@EA@_Facet_base@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R17?0A@EA@_Crt_new_delete@std@@8"
	.globl	"??_R17?0A@EA@_Crt_new_delete@std@@8" # @"??_R17?0A@EA@_Crt_new_delete@std@@8"
	.p2align	4, 0x0
"??_R17?0A@EA@_Crt_new_delete@std@@8":
	.long	"??_R0?AU_Crt_new_delete@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	8                               # 0x8
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Crt_new_delete@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AU_Crt_new_delete@std@@@8"
	.globl	"??_R0?AU_Crt_new_delete@std@@@8" # @"??_R0?AU_Crt_new_delete@std@@@8"
	.p2align	4, 0x0
"??_R0?AU_Crt_new_delete@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AU_Crt_new_delete@std@@"
	.zero	6

	.section	.rdata,"dr",discard,"??_R3_Crt_new_delete@std@@8"
	.globl	"??_R3_Crt_new_delete@std@@8"   # @"??_R3_Crt_new_delete@std@@8"
	.p2align	3, 0x0
"??_R3_Crt_new_delete@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2_Crt_new_delete@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_Crt_new_delete@std@@8"
	.globl	"??_R2_Crt_new_delete@std@@8"   # @"??_R2_Crt_new_delete@std@@8"
	.p2align	2, 0x0
"??_R2_Crt_new_delete@std@@8":
	.long	"??_R1A@?0A@EA@_Crt_new_delete@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_Crt_new_delete@std@@8"
	.globl	"??_R1A@?0A@EA@_Crt_new_delete@std@@8" # @"??_R1A@?0A@EA@_Crt_new_delete@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_Crt_new_delete@std@@8":
	.long	"??_R0?AU_Crt_new_delete@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Crt_new_delete@std@@8"@IMGREL

	.section	.rdata,"dr",largest,"??_7facet@locale@std@@6B@"
	.p2align	4, 0x0                          # @8
.L__unnamed_9:
	.quad	"??_R4facet@locale@std@@6B@"
	.quad	"??_Gfacet@locale@std@@MEAAPEAXI@Z"
	.quad	"?_Incref@facet@locale@std@@UEAAXXZ"
	.quad	"?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ"

	.section	.rdata,"dr",discard,"??_R4facet@locale@std@@6B@"
	.globl	"??_R4facet@locale@std@@6B@"    # @"??_R4facet@locale@std@@6B@"
	.p2align	4, 0x0
"??_R4facet@locale@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVfacet@locale@std@@@8"@IMGREL
	.long	"??_R3facet@locale@std@@8"@IMGREL
	.long	"??_R4facet@locale@std@@6B@"@IMGREL

	.section	.rdata,"dr",largest,"??_7_Facet_base@std@@6B@"
	.p2align	4, 0x0                          # @9
.L__unnamed_10:
	.quad	"??_R4_Facet_base@std@@6B@"
	.quad	"??_G_Facet_base@std@@UEAAPEAXI@Z"
	.quad	_purecall
	.quad	_purecall

	.section	.rdata,"dr",discard,"??_R4_Facet_base@std@@6B@"
	.globl	"??_R4_Facet_base@std@@6B@"     # @"??_R4_Facet_base@std@@6B@"
	.p2align	4, 0x0
"??_R4_Facet_base@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV_Facet_base@std@@@8"@IMGREL
	.long	"??_R3_Facet_base@std@@8"@IMGREL
	.long	"??_R4_Facet_base@std@@6B@"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVbad_cast@std@@@8"
	.globl	"??_R0?AVbad_cast@std@@@8"      # @"??_R0?AVbad_cast@std@@@8"
	.p2align	4, 0x0
"??_R0?AVbad_cast@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVbad_cast@std@@"
	.zero	5

	.section	.xdata,"dr",discard,"_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24"
	.globl	"_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24" # @"_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24"
	.p2align	4, 0x0
"_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24":
	.long	0                               # 0x0
	.long	"??_R0?AVbad_cast@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	24                              # 0x18
	.long	"??0bad_cast@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.xdata,"dr",discard,"_CTA2?AVbad_cast@std@@"
	.globl	"_CTA2?AVbad_cast@std@@"        # @"_CTA2?AVbad_cast@std@@"
	.p2align	3, 0x0
"_CTA2?AVbad_cast@std@@":
	.long	2                               # 0x2
	.long	"_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"@IMGREL

	.section	.xdata,"dr",discard,"_TI2?AVbad_cast@std@@"
	.globl	"_TI2?AVbad_cast@std@@"         # @"_TI2?AVbad_cast@std@@"
	.p2align	3, 0x0
"_TI2?AVbad_cast@std@@":
	.long	0                               # 0x0
	.long	"??1exception@std@@UEAA@XZ"@IMGREL
	.long	0                               # 0x0
	.long	"_CTA2?AVbad_cast@std@@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_08EPJLHIJG@bad?5cast?$AA@"
	.globl	"??_C@_08EPJLHIJG@bad?5cast?$AA@" # @"??_C@_08EPJLHIJG@bad?5cast?$AA@"
"??_C@_08EPJLHIJG@bad?5cast?$AA@":
	.asciz	"bad cast"

	.section	.rdata,"dr",largest,"??_7bad_cast@std@@6B@"
	.p2align	4, 0x0                          # @10
.L__unnamed_11:
	.quad	"??_R4bad_cast@std@@6B@"
	.quad	"??_Gbad_cast@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4bad_cast@std@@6B@"
	.globl	"??_R4bad_cast@std@@6B@"        # @"??_R4bad_cast@std@@6B@"
	.p2align	4, 0x0
"??_R4bad_cast@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVbad_cast@std@@@8"@IMGREL
	.long	"??_R3bad_cast@std@@8"@IMGREL
	.long	"??_R4bad_cast@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_R3bad_cast@std@@8"
	.globl	"??_R3bad_cast@std@@8"          # @"??_R3bad_cast@std@@8"
	.p2align	3, 0x0
"??_R3bad_cast@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	"??_R2bad_cast@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2bad_cast@std@@8"
	.globl	"??_R2bad_cast@std@@8"          # @"??_R2bad_cast@std@@8"
	.p2align	2, 0x0
"??_R2bad_cast@std@@8":
	.long	"??_R1A@?0A@EA@bad_cast@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@bad_cast@std@@8"
	.globl	"??_R1A@?0A@EA@bad_cast@std@@8" # @"??_R1A@?0A@EA@bad_cast@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@bad_cast@std@@8":
	.long	"??_R0?AVbad_cast@std@@@8"@IMGREL
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3bad_cast@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVsystem_error@std@@@8"
	.globl	"??_R0?AVsystem_error@std@@@8"  # @"??_R0?AVsystem_error@std@@@8"
	.p2align	4, 0x0
"??_R0?AVsystem_error@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVsystem_error@std@@"
	.zero	1

	.section	.xdata,"dr",discard,"_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40"
	.globl	"_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40" # @"_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40"
	.p2align	4, 0x0
"_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40":
	.long	0                               # 0x0
	.long	"??_R0?AVsystem_error@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	40                              # 0x28
	.long	"??0system_error@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV_System_error@std@@@8"
	.globl	"??_R0?AV_System_error@std@@@8" # @"??_R0?AV_System_error@std@@@8"
	.p2align	4, 0x0
"??_R0?AV_System_error@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV_System_error@std@@"

	.section	.xdata,"dr",discard,"_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40"
	.globl	"_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40" # @"_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40"
	.p2align	4, 0x0
"_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40":
	.long	0                               # 0x0
	.long	"??_R0?AV_System_error@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	40                              # 0x28
	.long	"??0_System_error@std@@QEAA@AEBV01@@Z"@IMGREL

	.section	.xdata,"dr",discard,"_CTA4?AVsystem_error@std@@"
	.globl	"_CTA4?AVsystem_error@std@@"    # @"_CTA4?AVsystem_error@std@@"
	.p2align	4, 0x0
"_CTA4?AVsystem_error@std@@":
	.long	4                               # 0x4
	.long	"_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40"@IMGREL
	.long	"_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40"@IMGREL
	.long	"_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24"@IMGREL
	.long	"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24"@IMGREL

	.section	.xdata,"dr",discard,"_TI4?AVsystem_error@std@@"
	.globl	"_TI4?AVsystem_error@std@@"     # @"_TI4?AVsystem_error@std@@"
	.p2align	3, 0x0
"_TI4?AVsystem_error@std@@":
	.long	0                               # 0x0
	.long	"??1exception@std@@UEAA@XZ"@IMGREL
	.long	0                               # 0x0
	.long	"_CTA4?AVsystem_error@std@@"@IMGREL

	.section	.data,"dw",discard,"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B"
	.globl	"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B" # @"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B"
	.p2align	3, 0x0
"?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B":
	.quad	"??_7_System_error_category@std@@6B@"
	.quad	7                               # 0x7

	.section	.rdata,"dr",largest,"??_7_System_error_category@std@@6B@"
	.p2align	4, 0x0                          # @11
.L__unnamed_12:
	.quad	"??_R4_System_error_category@std@@6B@"
	.quad	"??_G_System_error_category@std@@UEAAPEAXI@Z"
	.quad	"?name@_System_error_category@std@@UEBAPEBDXZ"
	.quad	"?message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.quad	"?default_error_condition@_System_error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.quad	"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z"
	.quad	"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z"

	.section	.rdata,"dr",discard,"??_R4_System_error_category@std@@6B@"
	.globl	"??_R4_System_error_category@std@@6B@" # @"??_R4_System_error_category@std@@6B@"
	.p2align	4, 0x0
"??_R4_System_error_category@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV_System_error_category@std@@@8"@IMGREL
	.long	"??_R3_System_error_category@std@@8"@IMGREL
	.long	"??_R4_System_error_category@std@@6B@"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV_System_error_category@std@@@8"
	.globl	"??_R0?AV_System_error_category@std@@@8" # @"??_R0?AV_System_error_category@std@@@8"
	.p2align	4, 0x0
"??_R0?AV_System_error_category@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV_System_error_category@std@@"
	.zero	7

	.section	.rdata,"dr",discard,"??_R3_System_error_category@std@@8"
	.globl	"??_R3_System_error_category@std@@8" # @"??_R3_System_error_category@std@@8"
	.p2align	3, 0x0
"??_R3_System_error_category@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	"??_R2_System_error_category@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_System_error_category@std@@8"
	.globl	"??_R2_System_error_category@std@@8" # @"??_R2_System_error_category@std@@8"
	.p2align	2, 0x0
"??_R2_System_error_category@std@@8":
	.long	"??_R1A@?0A@EA@_System_error_category@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@error_category@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_System_error_category@std@@8"
	.globl	"??_R1A@?0A@EA@_System_error_category@std@@8" # @"??_R1A@?0A@EA@_System_error_category@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_System_error_category@std@@8":
	.long	"??_R0?AV_System_error_category@std@@@8"@IMGREL
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_System_error_category@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@error_category@std@@8"
	.globl	"??_R1A@?0A@EA@error_category@std@@8" # @"??_R1A@?0A@EA@error_category@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@error_category@std@@8":
	.long	"??_R0?AVerror_category@std@@@8"@IMGREL
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3error_category@std@@8"@IMGREL

	.section	.data,"dw",discard,"??_R0?AVerror_category@std@@@8"
	.globl	"??_R0?AVerror_category@std@@@8" # @"??_R0?AVerror_category@std@@@8"
	.p2align	4, 0x0
"??_R0?AVerror_category@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AVerror_category@std@@"
	.zero	7

	.section	.rdata,"dr",discard,"??_R3error_category@std@@8"
	.globl	"??_R3error_category@std@@8"    # @"??_R3error_category@std@@8"
	.p2align	3, 0x0
"??_R3error_category@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	1                               # 0x1
	.long	"??_R2error_category@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2error_category@std@@8"
	.globl	"??_R2error_category@std@@8"    # @"??_R2error_category@std@@8"
	.p2align	2, 0x0
"??_R2error_category@std@@8":
	.long	"??_R1A@?0A@EA@error_category@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_C@_06FHFOAHML@system?$AA@"
	.globl	"??_C@_06FHFOAHML@system?$AA@"  # @"??_C@_06FHFOAHML@system?$AA@"
"??_C@_06FHFOAHML@system?$AA@":
	.asciz	"system"

	.section	.rdata,"dr",discard,"?_Unknown_error@?4??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB"
	.globl	"?_Unknown_error@?4??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB" # @"?_Unknown_error@?4??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB"
"?_Unknown_error@?4??message@_System_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB":
	.asciz	"unknown error"

	.section	.data,"dw",discard,"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B"
	.globl	"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B" # @"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B"
	.p2align	3, 0x0
"?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B":
	.quad	"??_7_Generic_error_category@std@@6B@"
	.quad	3                               # 0x3

	.section	.rdata,"dr",largest,"??_7_Generic_error_category@std@@6B@"
	.p2align	4, 0x0                          # @12
.L__unnamed_13:
	.quad	"??_R4_Generic_error_category@std@@6B@"
	.quad	"??_G_Generic_error_category@std@@UEAAPEAXI@Z"
	.quad	"?name@_Generic_error_category@std@@UEBAPEBDXZ"
	.quad	"?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z"
	.quad	"?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z"
	.quad	"?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z"
	.quad	"?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z"

	.section	.rdata,"dr",discard,"??_R4_Generic_error_category@std@@6B@"
	.globl	"??_R4_Generic_error_category@std@@6B@" # @"??_R4_Generic_error_category@std@@6B@"
	.p2align	4, 0x0
"??_R4_Generic_error_category@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV_Generic_error_category@std@@@8"@IMGREL
	.long	"??_R3_Generic_error_category@std@@8"@IMGREL
	.long	"??_R4_Generic_error_category@std@@6B@"@IMGREL

	.section	.data,"dw",discard,"??_R0?AV_Generic_error_category@std@@@8"
	.globl	"??_R0?AV_Generic_error_category@std@@@8" # @"??_R0?AV_Generic_error_category@std@@@8"
	.p2align	4, 0x0
"??_R0?AV_Generic_error_category@std@@@8":
	.quad	"??_7type_info@@6B@"
	.quad	0
	.asciz	".?AV_Generic_error_category@std@@"
	.zero	6

	.section	.rdata,"dr",discard,"??_R3_Generic_error_category@std@@8"
	.globl	"??_R3_Generic_error_category@std@@8" # @"??_R3_Generic_error_category@std@@8"
	.p2align	3, 0x0
"??_R3_Generic_error_category@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	"??_R2_Generic_error_category@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_Generic_error_category@std@@8"
	.globl	"??_R2_Generic_error_category@std@@8" # @"??_R2_Generic_error_category@std@@8"
	.p2align	2, 0x0
"??_R2_Generic_error_category@std@@8":
	.long	"??_R1A@?0A@EA@_Generic_error_category@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@error_category@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_Generic_error_category@std@@8"
	.globl	"??_R1A@?0A@EA@_Generic_error_category@std@@8" # @"??_R1A@?0A@EA@_Generic_error_category@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_Generic_error_category@std@@8":
	.long	"??_R0?AV_Generic_error_category@std@@@8"@IMGREL
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_Generic_error_category@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_07DCLBNMLN@generic?$AA@"
	.globl	"??_C@_07DCLBNMLN@generic?$AA@" # @"??_C@_07DCLBNMLN@generic?$AA@"
"??_C@_07DCLBNMLN@generic?$AA@":
	.asciz	"generic"

	.section	.rdata,"dr",largest,"??_7system_error@std@@6B@"
	.p2align	4, 0x0                          # @13
.L__unnamed_14:
	.quad	"??_R4system_error@std@@6B@"
	.quad	"??_Gsystem_error@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4system_error@std@@6B@"
	.globl	"??_R4system_error@std@@6B@"    # @"??_R4system_error@std@@6B@"
	.p2align	4, 0x0
"??_R4system_error@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AVsystem_error@std@@@8"@IMGREL
	.long	"??_R3system_error@std@@8"@IMGREL
	.long	"??_R4system_error@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_R3system_error@std@@8"
	.globl	"??_R3system_error@std@@8"      # @"??_R3system_error@std@@8"
	.p2align	3, 0x0
"??_R3system_error@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	4                               # 0x4
	.long	"??_R2system_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2system_error@std@@8"
	.globl	"??_R2system_error@std@@8"      # @"??_R2system_error@std@@8"
	.p2align	4, 0x0
"??_R2system_error@std@@8":
	.long	"??_R1A@?0A@EA@system_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@_System_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@runtime_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@system_error@std@@8"
	.globl	"??_R1A@?0A@EA@system_error@std@@8" # @"??_R1A@?0A@EA@system_error@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@system_error@std@@8":
	.long	"??_R0?AVsystem_error@std@@@8"@IMGREL
	.long	3                               # 0x3
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3system_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R1A@?0A@EA@_System_error@std@@8"
	.globl	"??_R1A@?0A@EA@_System_error@std@@8" # @"??_R1A@?0A@EA@_System_error@std@@8"
	.p2align	4, 0x0
"??_R1A@?0A@EA@_System_error@std@@8":
	.long	"??_R0?AV_System_error@std@@@8"@IMGREL
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	64                              # 0x40
	.long	"??_R3_System_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R3_System_error@std@@8"
	.globl	"??_R3_System_error@std@@8"     # @"??_R3_System_error@std@@8"
	.p2align	3, 0x0
"??_R3_System_error@std@@8":
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	3                               # 0x3
	.long	"??_R2_System_error@std@@8"@IMGREL

	.section	.rdata,"dr",discard,"??_R2_System_error@std@@8"
	.globl	"??_R2_System_error@std@@8"     # @"??_R2_System_error@std@@8"
	.p2align	2, 0x0
"??_R2_System_error@std@@8":
	.long	"??_R1A@?0A@EA@_System_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@runtime_error@std@@8"@IMGREL
	.long	"??_R1A@?0A@EA@exception@std@@8"@IMGREL
	.long	0                               # 0x0

	.section	.rdata,"dr",largest,"??_7_System_error@std@@6B@"
	.p2align	4, 0x0                          # @14
.L__unnamed_15:
	.quad	"??_R4_System_error@std@@6B@"
	.quad	"??_G_System_error@std@@UEAAPEAXI@Z"
	.quad	"?what@exception@std@@UEBAPEBDXZ"

	.section	.rdata,"dr",discard,"??_R4_System_error@std@@6B@"
	.globl	"??_R4_System_error@std@@6B@"   # @"??_R4_System_error@std@@6B@"
	.p2align	4, 0x0
"??_R4_System_error@std@@6B@":
	.long	1                               # 0x1
	.long	0                               # 0x0
	.long	0                               # 0x0
	.long	"??_R0?AV_System_error@std@@@8"@IMGREL
	.long	"??_R3_System_error@std@@8"@IMGREL
	.long	"??_R4_System_error@std@@6B@"@IMGREL

	.section	.rdata,"dr",discard,"??_C@_0BD@BEGHMEGI@?$FL?$HL?$HN?$FN?5Data?3?3?$HOData?$CI?$CJ?$AA@"
	.globl	"??_C@_0BD@BEGHMEGI@?$FL?$HL?$HN?$FN?5Data?3?3?$HOData?$CI?$CJ?$AA@" # @"??_C@_0BD@BEGHMEGI@?$FL?$HL?$HN?$FN?5Data?3?3?$HOData?$CI?$CJ?$AA@"
"??_C@_0BD@BEGHMEGI@?$FL?$HL?$HN?$FN?5Data?3?3?$HOData?$CI?$CJ?$AA@":
	.asciz	"[{}] Data::~Data()"

	.section	.rdata,"dr",discard,"??_C@_0CE@BFMPBMDH@?$FLBORROWER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"
	.globl	"??_C@_0CE@BFMPBMDH@?$FLBORROWER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@" # @"??_C@_0CE@BFMPBMDH@?$FLBORROWER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"
"??_C@_0CE@BFMPBMDH@?$FLBORROWER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@":
	.asciz	"[BORROWER] got the data: \303\202\302\253{}\303\202\302\273"

	.section	.rdata,"dr",discard,"??_C@_0CE@PBLKDBNL@?$FLCONSUMER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"
	.globl	"??_C@_0CE@PBLKDBNL@?$FLCONSUMER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@" # @"??_C@_0CE@PBLKDBNL@?$FLCONSUMER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@"
"??_C@_0CE@PBLKDBNL@?$FLCONSUMER?$FN?5got?5the?5data?3?5?C?$IC?B?$KL?$HL?$HN?C@":
	.asciz	"[CONSUMER] got the data: \303\202\302\253{}\303\202\302\273"

	.section	.CRT$XCU,"dr",associative,"?id@?$numpunct@D@std@@2V0locale@2@A"
	.p2align	3, 0x0
	.quad	"??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ"
	.section	.rdata,"dr"
	.p2align	2, 0x0                          # @"switch.table.?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z"
".Lswitch.table.?_Decode_utf@std@@YA?AU?$_Decode_result@D@1@PEBD0AEA_U@Z":
	.long	31                              # 0x1f
	.long	15                              # 0xf
	.long	7                               # 0x7

	.section	.drectve,"yni"
	.ascii	" /FAILIFMISMATCH:\"_CRT_STDIO_ISO_WIDE_SPECIFIERS=0\""
	.ascii	" /FAILIFMISMATCH:\"_MSC_VER=1900\""
	.ascii	" /FAILIFMISMATCH:\"_ITERATOR_DEBUG_LEVEL=0\""
	.ascii	" /FAILIFMISMATCH:\"RuntimeLibrary=MT_StaticRelease\""
	.ascii	" /DEFAULTLIB:libcpmt.lib"
	.ascii	" /FAILIFMISMATCH:\"annotate_string=0\""
	.ascii	" /FAILIFMISMATCH:\"annotate_vector=0\""
	.ascii	" /INCLUDE:\"?id@?$numpunct@D@std@@2V0locale@2@A\""
	.globl	"??_7bad_array_new_length@std@@6B@"
.set "??_7bad_array_new_length@std@@6B@", .L__unnamed_1+8
	.globl	"??_7bad_alloc@std@@6B@"
.set "??_7bad_alloc@std@@6B@", .L__unnamed_2+8
	.globl	"??_7exception@std@@6B@"
.set "??_7exception@std@@6B@", .L__unnamed_3+8
	.globl	"??_7?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
.set "??_7?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@", .L__unnamed_4+8
	.globl	"??_7?$_Fmt_buffer@D@std@@6B@"
.set "??_7?$_Fmt_buffer@D@std@@6B@", .L__unnamed_5+8
	.globl	"??_7format_error@std@@6B@"
.set "??_7format_error@std@@6B@", .L__unnamed_6+8
	.globl	"??_7runtime_error@std@@6B@"
.set "??_7runtime_error@std@@6B@", .L__unnamed_7+8
	.globl	"??_7?$numpunct@D@std@@6B@"
.set "??_7?$numpunct@D@std@@6B@", .L__unnamed_8+8
	.globl	"??_7facet@locale@std@@6B@"
.set "??_7facet@locale@std@@6B@", .L__unnamed_9+8
	.globl	"??_7_Facet_base@std@@6B@"
.set "??_7_Facet_base@std@@6B@", .L__unnamed_10+8
	.globl	"??_7bad_cast@std@@6B@"
.set "??_7bad_cast@std@@6B@", .L__unnamed_11+8
	.globl	"??_7_System_error_category@std@@6B@"
.set "??_7_System_error_category@std@@6B@", .L__unnamed_12+8
	.globl	"??_7_Generic_error_category@std@@6B@"
.set "??_7_Generic_error_category@std@@6B@", .L__unnamed_13+8
	.globl	"??_7system_error@std@@6B@"
.set "??_7system_error@std@@6B@", .L__unnamed_14+8
	.globl	"??_7_System_error@std@@6B@"
.set "??_7_System_error@std@@6B@", .L__unnamed_15+8
	.addrsig
	.addrsig_sym __CxxFrameHandler3
	.addrsig_sym "??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ"
	.addrsig_sym "?id@?$numpunct@D@std@@2V0locale@2@A"
	.addrsig_sym "??_7type_info@@6B@"
	.addrsig_sym "??_R0?AVbad_array_new_length@std@@@8"
	.addrsig_sym __ImageBase
	.addrsig_sym "??_R0?AVbad_alloc@std@@@8"
	.addrsig_sym "??_R0?AVexception@std@@@8"
	.addrsig_sym "??_R4bad_array_new_length@std@@6B@"
	.addrsig_sym "??_R3bad_array_new_length@std@@8"
	.addrsig_sym "??_R2bad_array_new_length@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@bad_array_new_length@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@bad_alloc@std@@8"
	.addrsig_sym "??_R3bad_alloc@std@@8"
	.addrsig_sym "??_R2bad_alloc@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@exception@std@@8"
	.addrsig_sym "??_R3exception@std@@8"
	.addrsig_sym "??_R2exception@std@@8"
	.addrsig_sym "??_R4bad_alloc@std@@6B@"
	.addrsig_sym "??_R4exception@std@@6B@"
	.addrsig_sym "??_R4?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@6B@"
	.addrsig_sym "??_R0?AV?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@@8"
	.addrsig_sym "??_R3?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.addrsig_sym "??_R2?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@?$_Fmt_iterator_buffer@V?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@DU_Fmt_buffer_traits@2@@std@@8"
	.addrsig_sym "??_R1CA@?0A@EA@_Fmt_buffer_traits@std@@8"
	.addrsig_sym "??_R0?AU_Fmt_buffer_traits@std@@@8"
	.addrsig_sym "??_R3_Fmt_buffer_traits@std@@8"
	.addrsig_sym "??_R2_Fmt_buffer_traits@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_Fmt_buffer_traits@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@?$_Fmt_buffer@D@std@@8"
	.addrsig_sym "??_R0?AV?$_Fmt_buffer@D@std@@@8"
	.addrsig_sym "??_R3?$_Fmt_buffer@D@std@@8"
	.addrsig_sym "??_R2?$_Fmt_buffer@D@std@@8"
	.addrsig_sym "??_R4?$_Fmt_buffer@D@std@@6B@"
	.addrsig_sym "??_R0?AVformat_error@std@@@8"
	.addrsig_sym "??_R0?AVruntime_error@std@@@8"
	.addrsig_sym "??_R4format_error@std@@6B@"
	.addrsig_sym "??_R3format_error@std@@8"
	.addrsig_sym "??_R2format_error@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@format_error@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@runtime_error@std@@8"
	.addrsig_sym "??_R3runtime_error@std@@8"
	.addrsig_sym "??_R2runtime_error@std@@8"
	.addrsig_sym "??_R4runtime_error@std@@6B@"
	.addrsig_sym "?__printable_property_data@std@@3U?$_Unicode_property_data@W4__printable_property_values@std@@$0CMH@$00@1@B"
	.addrsig_sym "?_Grapheme_Extend_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Extend_property_values@std@@$0BGL@$00@1@B"
	.addrsig_sym "?_Grapheme_Break_property_data@std@@3U?$_Unicode_property_data@W4_Grapheme_Break_property_values@std@@$0FFL@$0A@@1@B"
	.addrsig_sym "?_Extended_Pictographic_property_data@std@@3U?$_Unicode_property_data@W4_Extended_Pictographic_property_values@std@@$0EO@$00@1@B"
	.addrsig_sym "??_R4?$numpunct@D@std@@6B@"
	.addrsig_sym "??_R0?AV?$numpunct@D@std@@@8"
	.addrsig_sym "??_R3?$numpunct@D@std@@8"
	.addrsig_sym "??_R2?$numpunct@D@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@?$numpunct@D@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@facet@locale@std@@8"
	.addrsig_sym "??_R0?AVfacet@locale@std@@@8"
	.addrsig_sym "??_R3facet@locale@std@@8"
	.addrsig_sym "??_R2facet@locale@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_Facet_base@std@@8"
	.addrsig_sym "??_R0?AV_Facet_base@std@@@8"
	.addrsig_sym "??_R3_Facet_base@std@@8"
	.addrsig_sym "??_R2_Facet_base@std@@8"
	.addrsig_sym "??_R17?0A@EA@_Crt_new_delete@std@@8"
	.addrsig_sym "??_R0?AU_Crt_new_delete@std@@@8"
	.addrsig_sym "??_R3_Crt_new_delete@std@@8"
	.addrsig_sym "??_R2_Crt_new_delete@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_Crt_new_delete@std@@8"
	.addrsig_sym "??_R4facet@locale@std@@6B@"
	.addrsig_sym "??_R4_Facet_base@std@@6B@"
	.addrsig_sym "??_R0?AVbad_cast@std@@@8"
	.addrsig_sym "??_R4bad_cast@std@@6B@"
	.addrsig_sym "??_R3bad_cast@std@@8"
	.addrsig_sym "??_R2bad_cast@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@bad_cast@std@@8"
	.addrsig_sym "?_Special_X_table@?$_General_precision_tables_2@M@std@@2QBIB"
	.addrsig_sym "?_Ordinary_X_table@?$_General_precision_tables_2@M@std@@2QBIB"
	.addrsig_sym "?_Special_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"
	.addrsig_sym "?_Ordinary_X_table@?$_General_precision_tables_2@N@std@@2QB_KB"
	.addrsig_sym "??_R0?AVsystem_error@std@@@8"
	.addrsig_sym "??_R0?AV_System_error@std@@@8"
	.addrsig_sym "?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B"
	.addrsig_sym "??_R4_System_error_category@std@@6B@"
	.addrsig_sym "??_R0?AV_System_error_category@std@@@8"
	.addrsig_sym "??_R3_System_error_category@std@@8"
	.addrsig_sym "??_R2_System_error_category@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_System_error_category@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@error_category@std@@8"
	.addrsig_sym "??_R0?AVerror_category@std@@@8"
	.addrsig_sym "??_R3error_category@std@@8"
	.addrsig_sym "??_R2error_category@std@@8"
	.addrsig_sym "?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B"
	.addrsig_sym "??_R4_Generic_error_category@std@@6B@"
	.addrsig_sym "??_R0?AV_Generic_error_category@std@@@8"
	.addrsig_sym "??_R3_Generic_error_category@std@@8"
	.addrsig_sym "??_R2_Generic_error_category@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_Generic_error_category@std@@8"
	.addrsig_sym "??_R4system_error@std@@6B@"
	.addrsig_sym "??_R3system_error@std@@8"
	.addrsig_sym "??_R2system_error@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@system_error@std@@8"
	.addrsig_sym "??_R1A@?0A@EA@_System_error@std@@8"
	.addrsig_sym "??_R3_System_error@std@@8"
	.addrsig_sym "??_R2_System_error@std@@8"
	.addrsig_sym "??_R4_System_error@std@@6B@"
	.globl	_fltused
